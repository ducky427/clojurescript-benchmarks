Version,Engine,Section,Name,Mean,Deviation,MOE,RME,SEM
1.9.36,V8,identity,[x 1] (identity x),1.38e-06,,,,
1.9.36,V8,symbol construction,[] (symbol (quote foo)),5.6e-05,,,,
1.9.36,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.21,,,,
1.9.36,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.2,,,,
1.9.36,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.15,,,,
1.9.36,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.1,,,,
1.9.36,V8,instance?,[coll []] (instance? PersistentVector coll),5.1e-05,,,,
1.9.36,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.9e-05,,,,
1.9.36,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.9.36,V8,array & string ops,[coll (array 1 2 3)] (seq coll),7.2e-05,,,,
1.9.36,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000126,,,,
1.9.36,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.7e-05,,,,
1.9.36,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000171,,,,
1.9.36,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7e-05,,,,
1.9.36,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",8.1e-05,,,,
1.9.36,V8,cloning & specify,[coll [1 2 3]] (clone coll),7e-05,,,,
1.9.36,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000102,,,,
1.9.36,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),6e-05,,,,
1.9.36,V8,list ops,[coll (list 1 2 3)] (first coll),6.8e-05,,,,
1.9.36,V8,list ops,[coll (list 1 2 3)] (-first coll),5.2e-05,,,,
1.9.36,V8,list ops,[coll (list 1 2 3)] (rest coll),5.4e-05,,,,
1.9.36,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.1e-05,,,,
1.9.36,V8,list ops,[] (list),4.4e-05,,,,
1.9.36,V8,list ops,[] (list 1 2 3),9.3e-05,,,,
1.9.36,V8,vector ops,[] [],4.6e-05,,,,
1.9.36,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.8e-05,,,,
1.9.36,V8,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0xb009d06 ""cljs.tagged_literals.JSValue@b009d06""]))",8.4e-05,,,,
1.9.36,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000101,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (transient coll),0.00021,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.3e-05,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6e-05,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.8e-05,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (coll 0),5.7e-05,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.3e-05,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (-conj coll 4),9e-05,,,,
1.9.36,V8,vector ops,[coll []] (-conj coll 1),8.9e-05,,,,
1.9.36,V8,vector ops,[coll [1]] (-conj coll 2),8.4e-05,,,,
1.9.36,V8,vector ops,[coll [1 2]] (-conj coll 3),8.7e-05,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (seq coll),8.6e-05,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (-seq coll),6.9e-05,,,,
1.9.36,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.3e-05,,,,
1.9.36,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.3e-05,,,,
1.9.36,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.8e-05,,,,
1.9.36,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),7e-05,,,,
1.9.36,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.4e-05,,,,
1.9.36,V8,large vector ops,[] (reduce conj [] (range 40000)),6.5,,,,
1.9.36,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00027,,,,
1.9.36,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00072,,,,
1.9.36,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00024,,,,
1.9.36,SM,identity,[x 1] (identity x),3.88e-06,,,,
1.9.36,SM,symbol construction,[] (symbol (quote foo)),4.4e-05,,,,
1.9.36,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.07,,,,
1.9.36,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.17,,,,
1.9.36,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.9.36,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.11,,,,
1.9.36,SM,instance?,[coll []] (instance? PersistentVector coll),2.4e-05,,,,
1.9.36,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4e-05,,,,
1.9.36,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.8e-05,,,,
1.9.36,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.8e-05,,,,
1.9.36,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000399,,,,
1.9.36,SM,array & string ops,[coll (array 1 2 3)] (first coll),6e-05,,,,
1.9.36,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001681,,,,
1.9.36,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.4e-05,,,,
1.9.36,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000395,,,,
1.9.36,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.1e-05,,,,
1.9.36,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000226,,,,
1.9.36,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3e-05,,,,
1.9.36,SM,list ops,[coll (list 1 2 3)] (first coll),4.8e-05,,,,
1.9.36,SM,list ops,[coll (list 1 2 3)] (-first coll),3.1e-05,,,,
1.9.36,SM,list ops,[coll (list 1 2 3)] (rest coll),3.2e-05,,,,
1.9.36,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.9.36,SM,list ops,[] (list),1.5e-05,,,,
1.9.36,SM,list ops,[] (list 1 2 3),9.6e-05,,,,
1.9.36,SM,vector ops,[] [],1.8e-05,,,,
1.9.36,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000177,,,,
1.9.36,SM,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0xb009d06 ""cljs.tagged_literals.JSValue@b009d06""]))",0.00016,,,,
1.9.36,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000155,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (transient coll),0.00039,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.4e-05,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.6e-05,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.2e-05,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (coll 0),4.6e-05,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.9e-05,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.6e-05,,,,
1.9.36,SM,vector ops,[coll []] (-conj coll 1),6.3e-05,,,,
1.9.36,SM,vector ops,[coll [1]] (-conj coll 2),6.2e-05,,,,
1.9.36,SM,vector ops,[coll [1 2]] (-conj coll 3),6.8e-05,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (seq coll),6.7e-05,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (-seq coll),4.1e-05,,,,
1.9.36,SM,vector ops,[coll (seq [1 2 3])] (first coll),4.9e-05,,,,
1.9.36,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.9.36,SM,vector ops,[coll (seq [1 2 3])] (rest coll),4.6e-05,,,,
1.9.36,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.6e-05,,,,
1.9.36,SM,vector ops,[coll (seq [1 2 3])] (next coll),4.8e-05,,,,
1.9.36,SM,large vector ops,[] (reduce conj [] (range 40000)),7.8,,,,
1.9.36,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00038,,,,
1.9.36,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00115,,,,
1.9.36,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00042,,,,
1.9.36,JSC,identity,[x 1] (identity x),2.15e-06,,,,
1.9.36,JSC,symbol construction,[] (symbol (quote foo)),2.2e-05,,,,
1.9.36,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.18,,,,
1.9.36,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.12,,,,
1.9.36,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.04,,,,
1.9.36,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.06,,,,
1.9.36,JSC,instance?,[coll []] (instance? PersistentVector coll),2.5e-05,,,,
1.9.36,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.9e-05,,,,
1.9.36,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.6e-05,,,,
1.9.36,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6e-05,,,,
1.9.36,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.6e-05,,,,
1.9.36,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.7e-05,,,,
1.9.36,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.6e-05,,,,
1.9.36,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.5e-05,,,,
1.9.36,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.8e-05,,,,
1.9.36,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.9e-05,,,,
1.9.36,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.9e-05,,,,
1.9.36,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),2e-05,,,,
1.9.36,JSC,list ops,[coll (list 1 2 3)] (first coll),2.7e-05,,,,
1.9.36,JSC,list ops,[coll (list 1 2 3)] (-first coll),2e-05,,,,
1.9.36,JSC,list ops,[coll (list 1 2 3)] (rest coll),2.1e-05,,,,
1.9.36,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.9.36,JSC,list ops,[] (list),1.5e-05,,,,
1.9.36,JSC,list ops,[] (list 1 2 3),7.1e-05,,,,
1.9.36,JSC,vector ops,[] [],1.2e-05,,,,
1.9.36,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.5e-05,,,,
1.9.36,JSC,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0xb009d06 ""cljs.tagged_literals.JSValue@b009d06""]))",7.4e-05,,,,
1.9.36,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.4e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00028,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.5e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (coll 0),3e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.4e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.5e-05,,,,
1.9.36,JSC,vector ops,[coll []] (-conj coll 1),5.5e-05,,,,
1.9.36,JSC,vector ops,[coll [1]] (-conj coll 2),5.9e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.2e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (seq coll),3.7e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.5e-05,,,,
1.9.36,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3.1e-05,,,,
1.9.36,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.9e-05,,,,
1.9.36,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.3e-05,,,,
1.9.36,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.3e-05,,,,
1.9.36,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.4e-05,,,,
1.9.36,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.3,,,,
1.9.36,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00034,,,,
1.9.36,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00055,,,,
1.9.36,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.9.35,V8,identity,[x 1] (identity x),1.23e-06,,,,
1.9.35,V8,symbol construction,[] (symbol (quote foo)),5.5e-05,,,,
1.9.35,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.24,,,,
1.9.35,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.21,,,,
1.9.35,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.12,,,,
1.9.35,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.09,,,,
1.9.35,V8,instance?,[coll []] (instance? PersistentVector coll),5.3e-05,,,,
1.9.35,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.2e-05,,,,
1.9.35,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.3e-05,,,,
1.9.35,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.8e-05,,,,
1.9.35,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000125,,,,
1.9.35,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.6e-05,,,,
1.9.35,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000146,,,,
1.9.35,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7e-05,,,,
1.9.35,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6e-05,,,,
1.9.35,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.3e-05,,,,
1.9.35,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000101,,,,
1.9.35,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),6.3e-05,,,,
1.9.35,V8,list ops,[coll (list 1 2 3)] (first coll),6.6e-05,,,,
1.9.35,V8,list ops,[coll (list 1 2 3)] (-first coll),5.2e-05,,,,
1.9.35,V8,list ops,[coll (list 1 2 3)] (rest coll),5.1e-05,,,,
1.9.35,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.1e-05,,,,
1.9.35,V8,list ops,[] (list),4.4e-05,,,,
1.9.35,V8,list ops,[] (list 1 2 3),9.1e-05,,,,
1.9.35,V8,vector ops,[] [],4.9e-05,,,,
1.9.35,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.3e-05,,,,
1.9.35,V8,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x193b2a57 ""cljs.tagged_literals.JSValue@193b2a57""]))",8.2e-05,,,,
1.9.35,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.9e-05,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (transient coll),0.00022,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.1e-05,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.8e-05,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.8e-05,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (coll 0),5.6e-05,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.2e-05,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.7e-05,,,,
1.9.35,V8,vector ops,[coll []] (-conj coll 1),8.3e-05,,,,
1.9.35,V8,vector ops,[coll [1]] (-conj coll 2),8.2e-05,,,,
1.9.35,V8,vector ops,[coll [1 2]] (-conj coll 3),8.4e-05,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (seq coll),8.4e-05,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (-seq coll),6.7e-05,,,,
1.9.35,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.1e-05,,,,
1.9.35,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.4e-05,,,,
1.9.35,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.8e-05,,,,
1.9.35,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.8e-05,,,,
1.9.35,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.2e-05,,,,
1.9.35,V8,large vector ops,[] (reduce conj [] (range 40000)),6.8,,,,
1.9.35,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00027,,,,
1.9.35,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00067,,,,
1.9.35,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00023,,,,
1.9.35,SM,identity,[x 1] (identity x),3.93e-06,,,,
1.9.35,SM,symbol construction,[] (symbol (quote foo)),4.3e-05,,,,
1.9.35,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.07,,,,
1.9.35,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.18,,,,
1.9.35,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.9.35,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.1,,,,
1.9.35,SM,instance?,[coll []] (instance? PersistentVector coll),2.9e-05,,,,
1.9.35,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.1e-05,,,,
1.9.35,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.9.35,SM,array & string ops,[coll (array 1 2 3)] (seq coll),6.1e-05,,,,
1.9.35,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000385,,,,
1.9.35,SM,array & string ops,[coll (array 1 2 3)] (first coll),5.8e-05,,,,
1.9.35,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001589,,,,
1.9.35,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.4e-05,,,,
1.9.35,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000352,,,,
1.9.35,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.1e-05,,,,
1.9.35,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000238,,,,
1.9.35,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3.4e-05,,,,
1.9.35,SM,list ops,[coll (list 1 2 3)] (first coll),4.5e-05,,,,
1.9.35,SM,list ops,[coll (list 1 2 3)] (-first coll),3e-05,,,,
1.9.35,SM,list ops,[coll (list 1 2 3)] (rest coll),3.3e-05,,,,
1.9.35,SM,list ops,[coll (list 1 2 3)] (-rest coll),3e-05,,,,
1.9.35,SM,list ops,[] (list),1.6e-05,,,,
1.9.35,SM,list ops,[] (list 1 2 3),0.000101,,,,
1.9.35,SM,vector ops,[] [],1.5e-05,,,,
1.9.35,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000187,,,,
1.9.35,SM,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x193b2a57 ""cljs.tagged_literals.JSValue@193b2a57""]))",0.000165,,,,
1.9.35,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000163,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (transient coll),0.00042,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.2e-05,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.3e-05,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.3e-05,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (coll 0),4.3e-05,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.9e-05,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.9e-05,,,,
1.9.35,SM,vector ops,[coll []] (-conj coll 1),6.3e-05,,,,
1.9.35,SM,vector ops,[coll [1]] (-conj coll 2),6.5e-05,,,,
1.9.35,SM,vector ops,[coll [1 2]] (-conj coll 3),6.7e-05,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (seq coll),6.8e-05,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (-seq coll),4e-05,,,,
1.9.35,SM,vector ops,[coll (seq [1 2 3])] (first coll),4.9e-05,,,,
1.9.35,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.9.35,SM,vector ops,[coll (seq [1 2 3])] (rest coll),4.7e-05,,,,
1.9.35,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.3e-05,,,,
1.9.35,SM,vector ops,[coll (seq [1 2 3])] (next coll),5.1e-05,,,,
1.9.35,SM,large vector ops,[] (reduce conj [] (range 40000)),7.9,,,,
1.9.35,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.9.35,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00111,,,,
1.9.35,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00042,,,,
1.9.35,JSC,identity,[x 1] (identity x),2.15e-06,,,,
1.9.35,JSC,symbol construction,[] (symbol (quote foo)),2.2e-05,,,,
1.9.35,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.18,,,,
1.9.35,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.15,,,,
1.9.35,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.04,,,,
1.9.35,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.05,,,,
1.9.35,JSC,instance?,[coll []] (instance? PersistentVector coll),2.6e-05,,,,
1.9.35,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.9e-05,,,,
1.9.35,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.6e-05,,,,
1.9.35,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6e-05,,,,
1.9.35,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.7e-05,,,,
1.9.35,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.3e-05,,,,
1.9.35,JSC,array & string ops,"[coll ""foobar""] (first coll)",7e-05,,,,
1.9.35,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.5e-05,,,,
1.9.35,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",3.2e-05,,,,
1.9.35,JSC,cloning & specify,[coll [1 2 3]] (clone coll),5e-05,,,,
1.9.35,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.7e-05,,,,
1.9.35,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.8e-05,,,,
1.9.35,JSC,list ops,[coll (list 1 2 3)] (first coll),2.6e-05,,,,
1.9.35,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.5e-05,,,,
1.9.35,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.7e-05,,,,
1.9.35,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.8e-05,,,,
1.9.35,JSC,list ops,[] (list),1.2e-05,,,,
1.9.35,JSC,list ops,[] (list 1 2 3),7.2e-05,,,,
1.9.35,JSC,vector ops,[] [],1.2e-05,,,,
1.9.35,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.1e-05,,,,
1.9.35,JSC,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x193b2a57 ""cljs.tagged_literals.JSValue@193b2a57""]))",7.7e-05,,,,
1.9.35,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.6e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00029,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.6e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.4e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (coll 0),3e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.4e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.5e-05,,,,
1.9.35,JSC,vector ops,[coll []] (-conj coll 1),5.4e-05,,,,
1.9.35,JSC,vector ops,[coll [1]] (-conj coll 2),5.9e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.9e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (seq coll),3.7e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.1e-05,,,,
1.9.35,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3e-05,,,,
1.9.35,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.9.35,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3e-05,,,,
1.9.35,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3e-05,,,,
1.9.35,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.1e-05,,,,
1.9.35,JSC,large vector ops,[] (reduce conj [] (range 40000)),4.8,,,,
1.9.35,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00036,,,,
1.9.35,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00056,,,,
1.9.35,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.9.14,V8,identity,[x 1] (identity x),1.25e-06,,,,
1.9.14,V8,symbol construction,[] (symbol (quote foo)),5.7e-05,,,,
1.9.14,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.27,,,,
1.9.14,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.23,,,,
1.9.14,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.11,,,,
1.9.14,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.09,,,,
1.9.14,V8,instance?,[coll []] (instance? PersistentVector coll),5.4e-05,,,,
1.9.14,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.1e-05,,,,
1.9.14,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.5e-05,,,,
1.9.14,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.7e-05,,,,
1.9.14,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000124,,,,
1.9.14,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.6e-05,,,,
1.9.14,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000146,,,,
1.9.14,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7.1e-05,,,,
1.9.14,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6e-05,,,,
1.9.14,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.2e-05,,,,
1.9.14,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000103,,,,
1.9.14,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),5.8e-05,,,,
1.9.14,V8,list ops,[coll (list 1 2 3)] (first coll),6e-05,,,,
1.9.14,V8,list ops,[coll (list 1 2 3)] (-first coll),5.3e-05,,,,
1.9.14,V8,list ops,[coll (list 1 2 3)] (rest coll),5.1e-05,,,,
1.9.14,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.2e-05,,,,
1.9.14,V8,list ops,[] (list),4.4e-05,,,,
1.9.14,V8,list ops,[] (list 1 2 3),9.6e-05,,,,
1.9.14,V8,vector ops,[] [],5e-05,,,,
1.9.14,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.3e-05,,,,
1.9.14,V8,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x5a590aa5 ""cljs.tagged_literals.JSValue@5a590aa5""]))",8.6e-05,,,,
1.9.14,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.9e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (transient coll),0.00025,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.2e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.8e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.8e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (coll 0),5.7e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.5e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.7e-05,,,,
1.9.14,V8,vector ops,[coll []] (-conj coll 1),8.7e-05,,,,
1.9.14,V8,vector ops,[coll [1]] (-conj coll 2),8.2e-05,,,,
1.9.14,V8,vector ops,[coll [1 2]] (-conj coll 3),8.5e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (seq coll),8.4e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (-seq coll),6.7e-05,,,,
1.9.14,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.1e-05,,,,
1.9.14,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.3e-05,,,,
1.9.14,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.8e-05,,,,
1.9.14,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.7e-05,,,,
1.9.14,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.5e-05,,,,
1.9.14,V8,large vector ops,[] (reduce conj [] (range 40000)),6.4,,,,
1.9.14,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00027,,,,
1.9.14,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00066,,,,
1.9.14,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00023,,,,
1.9.14,SM,identity,[x 1] (identity x),3.99e-06,,,,
1.9.14,SM,symbol construction,[] (symbol (quote foo)),4.1e-05,,,,
1.9.14,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.06,,,,
1.9.14,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.16,,,,
1.9.14,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.9.14,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.1,,,,
1.9.14,SM,instance?,[coll []] (instance? PersistentVector coll),2.8e-05,,,,
1.9.14,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.2e-05,,,,
1.9.14,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.9e-05,,,,
1.9.14,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.9e-05,,,,
1.9.14,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000386,,,,
1.9.14,SM,array & string ops,[coll (array 1 2 3)] (first coll),5.9e-05,,,,
1.9.14,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001616,,,,
1.9.14,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.4e-05,,,,
1.9.14,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000354,,,,
1.9.14,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.2e-05,,,,
1.9.14,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000229,,,,
1.9.14,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),2.9e-05,,,,
1.9.14,SM,list ops,[coll (list 1 2 3)] (first coll),4.4e-05,,,,
1.9.14,SM,list ops,[coll (list 1 2 3)] (-first coll),3.1e-05,,,,
1.9.14,SM,list ops,[coll (list 1 2 3)] (rest coll),3.2e-05,,,,
1.9.14,SM,list ops,[coll (list 1 2 3)] (-rest coll),3.2e-05,,,,
1.9.14,SM,list ops,[] (list),1.6e-05,,,,
1.9.14,SM,list ops,[] (list 1 2 3),0.000101,,,,
1.9.14,SM,vector ops,[] [],1.4e-05,,,,
1.9.14,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000173,,,,
1.9.14,SM,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x5a590aa5 ""cljs.tagged_literals.JSValue@5a590aa5""]))",0.000157,,,,
1.9.14,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000154,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (transient coll),0.0004,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.2e-05,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.4e-05,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.1e-05,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (coll 0),4.3e-05,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.8e-05,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.6e-05,,,,
1.9.14,SM,vector ops,[coll []] (-conj coll 1),6.3e-05,,,,
1.9.14,SM,vector ops,[coll [1]] (-conj coll 2),6.3e-05,,,,
1.9.14,SM,vector ops,[coll [1 2]] (-conj coll 3),6.6e-05,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (seq coll),6.6e-05,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (-seq coll),4.7e-05,,,,
1.9.14,SM,vector ops,[coll (seq [1 2 3])] (first coll),4.8e-05,,,,
1.9.14,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.9.14,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5e-05,,,,
1.9.14,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.2e-05,,,,
1.9.14,SM,vector ops,[coll (seq [1 2 3])] (next coll),4.6e-05,,,,
1.9.14,SM,large vector ops,[] (reduce conj [] (range 40000)),8.1,,,,
1.9.14,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.9.14,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00117,,,,
1.9.14,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00042,,,,
1.9.14,JSC,identity,[x 1] (identity x),2.18e-06,,,,
1.9.14,JSC,symbol construction,[] (symbol (quote foo)),2.3e-05,,,,
1.9.14,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.18,,,,
1.9.14,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.12,,,,
1.9.14,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.04,,,,
1.9.14,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.06,,,,
1.9.14,JSC,instance?,[coll []] (instance? PersistentVector coll),2.5e-05,,,,
1.9.14,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.8e-05,,,,
1.9.14,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.7e-05,,,,
1.9.14,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),5.9e-05,,,,
1.9.14,JSC,array & string ops,"[coll ""foobar""] (seq coll)",4e-05,,,,
1.9.14,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.1e-05,,,,
1.9.14,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.3e-05,,,,
1.9.14,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.6e-05,,,,
1.9.14,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.8e-05,,,,
1.9.14,JSC,cloning & specify,[coll [1 2 3]] (clone coll),5e-05,,,,
1.9.14,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.9e-05,,,,
1.9.14,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.8e-05,,,,
1.9.14,JSC,list ops,[coll (list 1 2 3)] (first coll),2.4e-05,,,,
1.9.14,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.3e-05,,,,
1.9.14,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.7e-05,,,,
1.9.14,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.9.14,JSC,list ops,[] (list),1.1e-05,,,,
1.9.14,JSC,list ops,[] (list 1 2 3),7.5e-05,,,,
1.9.14,JSC,vector ops,[] [],1.2e-05,,,,
1.9.14,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),7.7e-05,,,,
1.9.14,JSC,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x5a590aa5 ""cljs.tagged_literals.JSValue@5a590aa5""]))",7.3e-05,,,,
1.9.14,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),8.3e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00027,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.5e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.4e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (coll 0),3.1e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.2e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.8e-05,,,,
1.9.14,JSC,vector ops,[coll []] (-conj coll 1),5.7e-05,,,,
1.9.14,JSC,vector ops,[coll [1]] (-conj coll 2),5.5e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.8e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (seq coll),3.6e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.2e-05,,,,
1.9.14,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3e-05,,,,
1.9.14,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.9e-05,,,,
1.9.14,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),2.9e-05,,,,
1.9.14,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3e-05,,,,
1.9.14,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.5e-05,,,,
1.9.14,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.4,,,,
1.9.14,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00032,,,,
1.9.14,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00055,,,,
1.9.14,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.8.51,V8,identity,[x 1] (identity x),1.24e-06,,,,
1.8.51,V8,symbol construction,[] (symbol (quote foo)),5.2e-05,,,,
1.8.51,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.27,,,,
1.8.51,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.2,,,,
1.8.51,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.1,,,,
1.8.51,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.09,,,,
1.8.51,V8,instance?,[coll []] (instance? PersistentVector coll),5.4e-05,,,,
1.8.51,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.1e-05,,,,
1.8.51,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.4e-05,,,,
1.8.51,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.9e-05,,,,
1.8.51,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000125,,,,
1.8.51,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.7e-05,,,,
1.8.51,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000151,,,,
1.8.51,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7.1e-05,,,,
1.8.51,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.4e-05,,,,
1.8.51,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.7e-05,,,,
1.8.51,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000103,,,,
1.8.51,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),6e-05,,,,
1.8.51,V8,list ops,[coll (list 1 2 3)] (first coll),6.8e-05,,,,
1.8.51,V8,list ops,[coll (list 1 2 3)] (-first coll),5.2e-05,,,,
1.8.51,V8,list ops,[coll (list 1 2 3)] (rest coll),5.5e-05,,,,
1.8.51,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.1e-05,,,,
1.8.51,V8,list ops,[] (list),4.4e-05,,,,
1.8.51,V8,list ops,[] (list 1 2 3),9.6e-05,,,,
1.8.51,V8,vector ops,[] [],4.9e-05,,,,
1.8.51,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.2e-05,,,,
1.8.51,V8,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x3af7be8e ""cljs.tagged_literals.JSValue@3af7be8e""]))",8.4e-05,,,,
1.8.51,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000101,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (transient coll),0.00022,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.6e-05,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6e-05,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (coll 0),6.1e-05,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.2e-05,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.8e-05,,,,
1.8.51,V8,vector ops,[coll []] (-conj coll 1),8.4e-05,,,,
1.8.51,V8,vector ops,[coll [1]] (-conj coll 2),8.2e-05,,,,
1.8.51,V8,vector ops,[coll [1 2]] (-conj coll 3),8.7e-05,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (seq coll),8.9e-05,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (-seq coll),6.9e-05,,,,
1.8.51,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.6e-05,,,,
1.8.51,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.5e-05,,,,
1.8.51,V8,vector ops,[coll (seq [1 2 3])] (rest coll),7e-05,,,,
1.8.51,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),7e-05,,,,
1.8.51,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.5e-05,,,,
1.8.51,V8,large vector ops,[] (reduce conj [] (range 40000)),7.0,,,,
1.8.51,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00027,,,,
1.8.51,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00071,,,,
1.8.51,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00026,,,,
1.8.51,SM,identity,[x 1] (identity x),4e-06,,,,
1.8.51,SM,symbol construction,[] (symbol (quote foo)),4.3e-05,,,,
1.8.51,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.07,,,,
1.8.51,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.17,,,,
1.8.51,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.8.51,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.11,,,,
1.8.51,SM,instance?,[coll []] (instance? PersistentVector coll),2.4e-05,,,,
1.8.51,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.2e-05,,,,
1.8.51,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.8e-05,,,,
1.8.51,SM,array & string ops,[coll (array 1 2 3)] (seq coll),6.1e-05,,,,
1.8.51,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000389,,,,
1.8.51,SM,array & string ops,[coll (array 1 2 3)] (first coll),6e-05,,,,
1.8.51,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001639,,,,
1.8.51,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.4e-05,,,,
1.8.51,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000363,,,,
1.8.51,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.3e-05,,,,
1.8.51,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000238,,,,
1.8.51,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),2.9e-05,,,,
1.8.51,SM,list ops,[coll (list 1 2 3)] (first coll),4.4e-05,,,,
1.8.51,SM,list ops,[coll (list 1 2 3)] (-first coll),3.3e-05,,,,
1.8.51,SM,list ops,[coll (list 1 2 3)] (rest coll),3.2e-05,,,,
1.8.51,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.8.51,SM,list ops,[] (list),1.6e-05,,,,
1.8.51,SM,list ops,[] (list 1 2 3),9.7e-05,,,,
1.8.51,SM,vector ops,[] [],1.6e-05,,,,
1.8.51,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000184,,,,
1.8.51,SM,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x3af7be8e ""cljs.tagged_literals.JSValue@3af7be8e""]))",0.000163,,,,
1.8.51,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000163,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (transient coll),0.0004,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.3e-05,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.3e-05,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.5e-05,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (coll 0),4.4e-05,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.9e-05,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (-conj coll 4),7.2e-05,,,,
1.8.51,SM,vector ops,[coll []] (-conj coll 1),6.2e-05,,,,
1.8.51,SM,vector ops,[coll [1]] (-conj coll 2),6.5e-05,,,,
1.8.51,SM,vector ops,[coll [1 2]] (-conj coll 3),8.4e-05,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (seq coll),6.6e-05,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (-seq coll),4.1e-05,,,,
1.8.51,SM,vector ops,[coll (seq [1 2 3])] (first coll),4.8e-05,,,,
1.8.51,SM,vector ops,[coll (seq [1 2 3])] (-first coll),4e-05,,,,
1.8.51,SM,vector ops,[coll (seq [1 2 3])] (rest coll),4.6e-05,,,,
1.8.51,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.5e-05,,,,
1.8.51,SM,vector ops,[coll (seq [1 2 3])] (next coll),4.8e-05,,,,
1.8.51,SM,large vector ops,[] (reduce conj [] (range 40000)),8.1,,,,
1.8.51,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.8.51,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00111,,,,
1.8.51,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00048,,,,
1.8.51,JSC,identity,[x 1] (identity x),2.2e-06,,,,
1.8.51,JSC,symbol construction,[] (symbol (quote foo)),2.1e-05,,,,
1.8.51,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.18,,,,
1.8.51,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.11,,,,
1.8.51,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.03,,,,
1.8.51,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.06,,,,
1.8.51,JSC,instance?,[coll []] (instance? PersistentVector coll),2.4e-05,,,,
1.8.51,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.8e-05,,,,
1.8.51,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.5e-05,,,,
1.8.51,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),5.9e-05,,,,
1.8.51,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.6e-05,,,,
1.8.51,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.1e-05,,,,
1.8.51,JSC,array & string ops,"[coll ""foobar""] (first coll)",7e-05,,,,
1.8.51,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.5e-05,,,,
1.8.51,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.8e-05,,,,
1.8.51,JSC,cloning & specify,[coll [1 2 3]] (clone coll),5.1e-05,,,,
1.8.51,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),9.3e-05,,,,
1.8.51,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.7e-05,,,,
1.8.51,JSC,list ops,[coll (list 1 2 3)] (first coll),2.6e-05,,,,
1.8.51,JSC,list ops,[coll (list 1 2 3)] (-first coll),2e-05,,,,
1.8.51,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.8e-05,,,,
1.8.51,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.8.51,JSC,list ops,[] (list),1.1e-05,,,,
1.8.51,JSC,list ops,[] (list 1 2 3),7.7e-05,,,,
1.8.51,JSC,vector ops,[] [],1.4e-05,,,,
1.8.51,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),7.7e-05,,,,
1.8.51,JSC,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x3af7be8e ""cljs.tagged_literals.JSValue@3af7be8e""]))",7.7e-05,,,,
1.8.51,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.5e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00027,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.4e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (coll 0),3.1e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.3e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.7e-05,,,,
1.8.51,JSC,vector ops,[coll []] (-conj coll 1),5.4e-05,,,,
1.8.51,JSC,vector ops,[coll [1]] (-conj coll 2),5.6e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.5e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (seq coll),3.7e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.5e-05,,,,
1.8.51,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3e-05,,,,
1.8.51,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.8.51,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.3e-05,,,,
1.8.51,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.5e-05,,,,
1.8.51,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.6e-05,,,,
1.8.51,JSC,large vector ops,[] (reduce conj [] (range 40000)),4.9,,,,
1.8.51,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.8.51,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00056,,,,
1.8.51,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00022,,,,
1.8.40,V8,identity,[x 1] (identity x),1.28e-06,,,,
1.8.40,V8,symbol construction,[] (symbol (quote foo)),5.9e-05,,,,
1.8.40,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.21,,,,
1.8.40,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.21,,,,
1.8.40,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.11,,,,
1.8.40,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.1,,,,
1.8.40,V8,instance?,[coll []] (instance? PersistentVector coll),5e-05,,,,
1.8.40,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.7e-05,,,,
1.8.40,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.8.40,V8,array & string ops,[coll (array 1 2 3)] (seq coll),7.4e-05,,,,
1.8.40,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000127,,,,
1.8.40,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.6e-05,,,,
1.8.40,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000146,,,,
1.8.40,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7.1e-05,,,,
1.8.40,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6e-05,,,,
1.8.40,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.8e-05,,,,
1.8.40,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000102,,,,
1.8.40,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),6.3e-05,,,,
1.8.40,V8,list ops,[coll (list 1 2 3)] (first coll),6.5e-05,,,,
1.8.40,V8,list ops,[coll (list 1 2 3)] (-first coll),5.5e-05,,,,
1.8.40,V8,list ops,[coll (list 1 2 3)] (rest coll),5.1e-05,,,,
1.8.40,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.1e-05,,,,
1.8.40,V8,list ops,[] (list),4.4e-05,,,,
1.8.40,V8,list ops,[] (list 1 2 3),9.5e-05,,,,
1.8.40,V8,vector ops,[] [],5.2e-05,,,,
1.8.40,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.6e-05,,,,
1.8.40,V8,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x2a0cda7 ""cljs.tagged_literals.JSValue@2a0cda7""]))",8.3e-05,,,,
1.8.40,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.9e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (transient coll),0.00021,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.6e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.8e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (coll 0),5.7e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.1e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.7e-05,,,,
1.8.40,V8,vector ops,[coll []] (-conj coll 1),8.7e-05,,,,
1.8.40,V8,vector ops,[coll [1]] (-conj coll 2),8.2e-05,,,,
1.8.40,V8,vector ops,[coll [1 2]] (-conj coll 3),8.5e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (seq coll),8.5e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (-seq coll),6.7e-05,,,,
1.8.40,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.2e-05,,,,
1.8.40,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.4e-05,,,,
1.8.40,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.8e-05,,,,
1.8.40,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.8e-05,,,,
1.8.40,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.3e-05,,,,
1.8.40,V8,large vector ops,[] (reduce conj [] (range 40000)),6.8,,,,
1.8.40,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00028,,,,
1.8.40,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00067,,,,
1.8.40,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00025,,,,
1.8.40,SM,identity,[x 1] (identity x),3.85e-06,,,,
1.8.40,SM,symbol construction,[] (symbol (quote foo)),4.1e-05,,,,
1.8.40,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.07,,,,
1.8.40,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.16,,,,
1.8.40,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.03,,,,
1.8.40,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.13,,,,
1.8.40,SM,instance?,[coll []] (instance? PersistentVector coll),2.6e-05,,,,
1.8.40,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.4e-05,,,,
1.8.40,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.2e-05,,,,
1.8.40,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.7e-05,,,,
1.8.40,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000387,,,,
1.8.40,SM,array & string ops,[coll (array 1 2 3)] (first coll),6e-05,,,,
1.8.40,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001613,,,,
1.8.40,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.5e-05,,,,
1.8.40,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000361,,,,
1.8.40,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.3e-05,,,,
1.8.40,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000231,,,,
1.8.40,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3e-05,,,,
1.8.40,SM,list ops,[coll (list 1 2 3)] (first coll),4.4e-05,,,,
1.8.40,SM,list ops,[coll (list 1 2 3)] (-first coll),3.2e-05,,,,
1.8.40,SM,list ops,[coll (list 1 2 3)] (rest coll),3.2e-05,,,,
1.8.40,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.8.40,SM,list ops,[] (list),1.5e-05,,,,
1.8.40,SM,list ops,[] (list 1 2 3),0.000103,,,,
1.8.40,SM,vector ops,[] [],1.7e-05,,,,
1.8.40,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000174,,,,
1.8.40,SM,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x2a0cda7 ""cljs.tagged_literals.JSValue@2a0cda7""]))",0.000159,,,,
1.8.40,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000157,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (transient coll),0.00043,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.2e-05,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.4e-05,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.2e-05,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (coll 0),4.4e-05,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.9e-05,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.8e-05,,,,
1.8.40,SM,vector ops,[coll []] (-conj coll 1),6.6e-05,,,,
1.8.40,SM,vector ops,[coll [1]] (-conj coll 2),6.3e-05,,,,
1.8.40,SM,vector ops,[coll [1 2]] (-conj coll 3),6.7e-05,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (seq coll),6.4e-05,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (-seq coll),3.9e-05,,,,
1.8.40,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.2e-05,,,,
1.8.40,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.5e-05,,,,
1.8.40,SM,vector ops,[coll (seq [1 2 3])] (rest coll),4.6e-05,,,,
1.8.40,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.2e-05,,,,
1.8.40,SM,vector ops,[coll (seq [1 2 3])] (next coll),4.6e-05,,,,
1.8.40,SM,large vector ops,[] (reduce conj [] (range 40000)),8.0,,,,
1.8.40,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.8.40,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00112,,,,
1.8.40,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00044,,,,
1.8.40,JSC,identity,[x 1] (identity x),2.17e-06,,,,
1.8.40,JSC,symbol construction,[] (symbol (quote foo)),2.3e-05,,,,
1.8.40,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.18,,,,
1.8.40,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.14,,,,
1.8.40,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.06,,,,
1.8.40,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.07,,,,
1.8.40,JSC,instance?,[coll []] (instance? PersistentVector coll),2.5e-05,,,,
1.8.40,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.7e-05,,,,
1.8.40,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.9e-05,,,,
1.8.40,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6.1e-05,,,,
1.8.40,JSC,array & string ops,"[coll ""foobar""] (seq coll)",4e-05,,,,
1.8.40,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5e-05,,,,
1.8.40,JSC,array & string ops,"[coll ""foobar""] (first coll)",6.9e-05,,,,
1.8.40,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.6e-05,,,,
1.8.40,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.8e-05,,,,
1.8.40,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.4e-05,,,,
1.8.40,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.6e-05,,,,
1.8.40,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.8e-05,,,,
1.8.40,JSC,list ops,[coll (list 1 2 3)] (first coll),2.8e-05,,,,
1.8.40,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.1e-05,,,,
1.8.40,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.7e-05,,,,
1.8.40,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.8.40,JSC,list ops,[] (list),1.1e-05,,,,
1.8.40,JSC,list ops,[] (list 1 2 3),7.1e-05,,,,
1.8.40,JSC,vector ops,[] [],1.2e-05,,,,
1.8.40,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.3e-05,,,,
1.8.40,JSC,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x2a0cda7 ""cljs.tagged_literals.JSValue@2a0cda7""]))",7.1e-05,,,,
1.8.40,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.3e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00028,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.7e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.6e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (coll 0),3.2e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (conj coll 4),7.5e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.2e-05,,,,
1.8.40,JSC,vector ops,[coll []] (-conj coll 1),5.1e-05,,,,
1.8.40,JSC,vector ops,[coll [1]] (-conj coll 2),5.3e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.7e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (seq coll),3.5e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.4e-05,,,,
1.8.40,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3.2e-05,,,,
1.8.40,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.8.40,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.3e-05,,,,
1.8.40,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.1e-05,,,,
1.8.40,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.4e-05,,,,
1.8.40,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.2,,,,
1.8.40,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00036,,,,
1.8.40,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00055,,,,
1.8.40,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.8.34,V8,identity,[x 1] (identity x),1.27e-06,,,,
1.8.34,V8,symbol construction,[] (symbol (quote foo)),5.6e-05,,,,
1.8.34,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.22,,,,
1.8.34,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.21,,,,
1.8.34,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.12,,,,
1.8.34,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.1,,,,
1.8.34,V8,instance?,[coll []] (instance? PersistentVector coll),5e-05,,,,
1.8.34,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.6e-05,,,,
1.8.34,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.8.34,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.9e-05,,,,
1.8.34,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000124,,,,
1.8.34,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.6e-05,,,,
1.8.34,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000147,,,,
1.8.34,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7.9e-05,,,,
1.8.34,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6e-05,,,,
1.8.34,V8,cloning & specify,[coll [1 2 3]] (clone coll),7.3e-05,,,,
1.8.34,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000103,,,,
1.8.34,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),5.8e-05,,,,
1.8.34,V8,list ops,[coll (list 1 2 3)] (first coll),6.6e-05,,,,
1.8.34,V8,list ops,[coll (list 1 2 3)] (-first coll),5.2e-05,,,,
1.8.34,V8,list ops,[coll (list 1 2 3)] (rest coll),5.1e-05,,,,
1.8.34,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.2e-05,,,,
1.8.34,V8,list ops,[] (list),4.4e-05,,,,
1.8.34,V8,list ops,[] (list 1 2 3),9.5e-05,,,,
1.8.34,V8,vector ops,[] [],5.2e-05,,,,
1.8.34,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.3e-05,,,,
1.8.34,V8,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x54efb982 ""cljs.tagged_literals.JSValue@54efb982""]))",8e-05,,,,
1.8.34,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.5e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (transient coll),0.00021,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.1e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (coll 0),5.6e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.2e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.8e-05,,,,
1.8.34,V8,vector ops,[coll []] (-conj coll 1),8.2e-05,,,,
1.8.34,V8,vector ops,[coll [1]] (-conj coll 2),8.2e-05,,,,
1.8.34,V8,vector ops,[coll [1 2]] (-conj coll 3),8.5e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (seq coll),8.4e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (-seq coll),6.7e-05,,,,
1.8.34,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.1e-05,,,,
1.8.34,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.3e-05,,,,
1.8.34,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.8e-05,,,,
1.8.34,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.8e-05,,,,
1.8.34,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.3e-05,,,,
1.8.34,V8,large vector ops,[] (reduce conj [] (range 40000)),7.0,,,,
1.8.34,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00028,,,,
1.8.34,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00066,,,,
1.8.34,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00023,,,,
1.8.34,SM,identity,[x 1] (identity x),4.03e-06,,,,
1.8.34,SM,symbol construction,[] (symbol (quote foo)),4.3e-05,,,,
1.8.34,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.07,,,,
1.8.34,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.19,,,,
1.8.34,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.8.34,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.11,,,,
1.8.34,SM,instance?,[coll []] (instance? PersistentVector coll),2.5e-05,,,,
1.8.34,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.2e-05,,,,
1.8.34,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.8e-05,,,,
1.8.34,SM,array & string ops,[coll (array 1 2 3)] (seq coll),6.1e-05,,,,
1.8.34,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000375,,,,
1.8.34,SM,array & string ops,[coll (array 1 2 3)] (first coll),5.9e-05,,,,
1.8.34,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001632,,,,
1.8.34,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.4e-05,,,,
1.8.34,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000359,,,,
1.8.34,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.2e-05,,,,
1.8.34,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000229,,,,
1.8.34,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3e-05,,,,
1.8.34,SM,list ops,[coll (list 1 2 3)] (first coll),4.7e-05,,,,
1.8.34,SM,list ops,[coll (list 1 2 3)] (-first coll),3.1e-05,,,,
1.8.34,SM,list ops,[coll (list 1 2 3)] (rest coll),3.3e-05,,,,
1.8.34,SM,list ops,[coll (list 1 2 3)] (-rest coll),3.3e-05,,,,
1.8.34,SM,list ops,[] (list),1.5e-05,,,,
1.8.34,SM,list ops,[] (list 1 2 3),0.000103,,,,
1.8.34,SM,vector ops,[] [],1.5e-05,,,,
1.8.34,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000181,,,,
1.8.34,SM,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x54efb982 ""cljs.tagged_literals.JSValue@54efb982""]))",0.00016,,,,
1.8.34,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000157,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (transient coll),0.00042,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.1e-05,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.3e-05,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.2e-05,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (coll 0),4.3e-05,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (conj coll 4),9.1e-05,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.8e-05,,,,
1.8.34,SM,vector ops,[coll []] (-conj coll 1),6.1e-05,,,,
1.8.34,SM,vector ops,[coll [1]] (-conj coll 2),6.5e-05,,,,
1.8.34,SM,vector ops,[coll [1 2]] (-conj coll 3),6.9e-05,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (seq coll),6.6e-05,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (-seq coll),4.2e-05,,,,
1.8.34,SM,vector ops,[coll (seq [1 2 3])] (first coll),4.9e-05,,,,
1.8.34,SM,vector ops,[coll (seq [1 2 3])] (-first coll),4.6e-05,,,,
1.8.34,SM,vector ops,[coll (seq [1 2 3])] (rest coll),4.8e-05,,,,
1.8.34,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.5e-05,,,,
1.8.34,SM,vector ops,[coll (seq [1 2 3])] (next coll),4.9e-05,,,,
1.8.34,SM,large vector ops,[] (reduce conj [] (range 40000)),7.9,,,,
1.8.34,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.8.34,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00117,,,,
1.8.34,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00042,,,,
1.8.34,JSC,identity,[x 1] (identity x),2.19e-06,,,,
1.8.34,JSC,symbol construction,[] (symbol (quote foo)),2.2e-05,,,,
1.8.34,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.17,,,,
1.8.34,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.11,,,,
1.8.34,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.03,,,,
1.8.34,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.05,,,,
1.8.34,JSC,instance?,[coll []] (instance? PersistentVector coll),2.3e-05,,,,
1.8.34,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.9e-05,,,,
1.8.34,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.7e-05,,,,
1.8.34,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),5.9e-05,,,,
1.8.34,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.6e-05,,,,
1.8.34,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.1e-05,,,,
1.8.34,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.1e-05,,,,
1.8.34,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.6e-05,,,,
1.8.34,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",3e-05,,,,
1.8.34,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.7e-05,,,,
1.8.34,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.7e-05,,,,
1.8.34,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.8e-05,,,,
1.8.34,JSC,list ops,[coll (list 1 2 3)] (first coll),2.5e-05,,,,
1.8.34,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.2e-05,,,,
1.8.34,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.7e-05,,,,
1.8.34,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.6e-05,,,,
1.8.34,JSC,list ops,[] (list),1.2e-05,,,,
1.8.34,JSC,list ops,[] (list 1 2 3),7.4e-05,,,,
1.8.34,JSC,vector ops,[] [],1.3e-05,,,,
1.8.34,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8e-05,,,,
1.8.34,JSC,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x54efb982 ""cljs.tagged_literals.JSValue@54efb982""]))",7.7e-05,,,,
1.8.34,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.8e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00027,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.4e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.4e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (coll 0),3.1e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.3e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.5e-05,,,,
1.8.34,JSC,vector ops,[coll []] (-conj coll 1),5.4e-05,,,,
1.8.34,JSC,vector ops,[coll [1]] (-conj coll 2),5.5e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.6e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (seq coll),3.5e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.2e-05,,,,
1.8.34,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3.1e-05,,,,
1.8.34,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.8.34,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3e-05,,,,
1.8.34,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.1e-05,,,,
1.8.34,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.1e-05,,,,
1.8.34,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.1,,,,
1.8.34,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.8.34,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00057,,,,
1.8.34,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.7.228,V8,identity,[x 1] (identity x),1.22e-06,,,,
1.7.228,V8,symbol construction,[] (symbol (quote foo)),6.1e-05,,,,
1.7.228,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.22,,,,
1.7.228,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.2,,,,
1.7.228,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.11,,,,
1.7.228,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.09,,,,
1.7.228,V8,instance?,[coll []] (instance? PersistentVector coll),5.3e-05,,,,
1.7.228,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.7e-05,,,,
1.7.228,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.7.228,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.7e-05,,,,
1.7.228,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000125,,,,
1.7.228,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.5e-05,,,,
1.7.228,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000148,,,,
1.7.228,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),5.1e-05,,,,
1.7.228,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6e-05,,,,
1.7.228,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.7e-05,,,,
1.7.228,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000103,,,,
1.7.228,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),6.2e-05,,,,
1.7.228,V8,list ops,[coll (list 1 2 3)] (first coll),6.4e-05,,,,
1.7.228,V8,list ops,[coll (list 1 2 3)] (-first coll),5.1e-05,,,,
1.7.228,V8,list ops,[coll (list 1 2 3)] (rest coll),5.1e-05,,,,
1.7.228,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.3e-05,,,,
1.7.228,V8,list ops,[] (list),4.5e-05,,,,
1.7.228,V8,list ops,[] (list 1 2 3),9.2e-05,,,,
1.7.228,V8,vector ops,[] [],4.8e-05,,,,
1.7.228,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.3e-05,,,,
1.7.228,V8,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x7f9a514 ""cljs.tagged_literals.JSValue@7f9a514""]))",8e-05,,,,
1.7.228,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.7e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (transient coll),0.00022,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.1e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (coll 0),5.6e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.3e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.8e-05,,,,
1.7.228,V8,vector ops,[coll []] (-conj coll 1),8.3e-05,,,,
1.7.228,V8,vector ops,[coll [1]] (-conj coll 2),8.2e-05,,,,
1.7.228,V8,vector ops,[coll [1 2]] (-conj coll 3),8.6e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (seq coll),8.4e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (-seq coll),6.7e-05,,,,
1.7.228,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.2e-05,,,,
1.7.228,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.3e-05,,,,
1.7.228,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.7e-05,,,,
1.7.228,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.7e-05,,,,
1.7.228,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.2e-05,,,,
1.7.228,V8,large vector ops,[] (reduce conj [] (range 40000)),6.8,,,,
1.7.228,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00028,,,,
1.7.228,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00067,,,,
1.7.228,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00023,,,,
1.7.228,SM,identity,[x 1] (identity x),3.92e-06,,,,
1.7.228,SM,symbol construction,[] (symbol (quote foo)),4.2e-05,,,,
1.7.228,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.08,,,,
1.7.228,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.18,,,,
1.7.228,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.7.228,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.1,,,,
1.7.228,SM,instance?,[coll []] (instance? PersistentVector coll),2.7e-05,,,,
1.7.228,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.1e-05,,,,
1.7.228,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.8e-05,,,,
1.7.228,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.9e-05,,,,
1.7.228,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000479,,,,
1.7.228,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.000131,,,,
1.7.228,SM,array & string ops,"[coll ""foobar""] (first coll)",0.00215,,,,
1.7.228,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.3e-05,,,,
1.7.228,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000357,,,,
1.7.228,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.4e-05,,,,
1.7.228,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000227,,,,
1.7.228,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),2.9e-05,,,,
1.7.228,SM,list ops,[coll (list 1 2 3)] (first coll),4.4e-05,,,,
1.7.228,SM,list ops,[coll (list 1 2 3)] (-first coll),3.5e-05,,,,
1.7.228,SM,list ops,[coll (list 1 2 3)] (rest coll),3.2e-05,,,,
1.7.228,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.7.228,SM,list ops,[] (list),1.5e-05,,,,
1.7.228,SM,list ops,[] (list 1 2 3),0.0001,,,,
1.7.228,SM,vector ops,[] [],1.6e-05,,,,
1.7.228,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000171,,,,
1.7.228,SM,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x7f9a514 ""cljs.tagged_literals.JSValue@7f9a514""]))",0.000159,,,,
1.7.228,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000156,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (transient coll),0.00043,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.2e-05,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.4e-05,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.4e-05,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (coll 0),4.2e-05,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.9e-05,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.9e-05,,,,
1.7.228,SM,vector ops,[coll []] (-conj coll 1),6.1e-05,,,,
1.7.228,SM,vector ops,[coll [1]] (-conj coll 2),6.5e-05,,,,
1.7.228,SM,vector ops,[coll [1 2]] (-conj coll 3),6.6e-05,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (seq coll),7.7e-05,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (-seq coll),4.6e-05,,,,
1.7.228,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.4e-05,,,,
1.7.228,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.7.228,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.3e-05,,,,
1.7.228,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),5e-05,,,,
1.7.228,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.00012,,,,
1.7.228,SM,large vector ops,[] (reduce conj [] (range 40000)),8.2,,,,
1.7.228,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.7.228,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00113,,,,
1.7.228,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00043,,,,
1.7.228,JSC,identity,[x 1] (identity x),2.15e-06,,,,
1.7.228,JSC,symbol construction,[] (symbol (quote foo)),2.4e-05,,,,
1.7.228,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.17,,,,
1.7.228,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.11,,,,
1.7.228,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.03,,,,
1.7.228,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.05,,,,
1.7.228,JSC,instance?,[coll []] (instance? PersistentVector coll),2.7e-05,,,,
1.7.228,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.8e-05,,,,
1.7.228,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.6e-05,,,,
1.7.228,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),5.9e-05,,,,
1.7.228,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.8e-05,,,,
1.7.228,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.1e-05,,,,
1.7.228,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.4e-05,,,,
1.7.228,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.4e-05,,,,
1.7.228,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.3e-05,,,,
1.7.228,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.4e-05,,,,
1.7.228,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.7e-05,,,,
1.7.228,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.8e-05,,,,
1.7.228,JSC,list ops,[coll (list 1 2 3)] (first coll),2.4e-05,,,,
1.7.228,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.2e-05,,,,
1.7.228,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.6e-05,,,,
1.7.228,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.6e-05,,,,
1.7.228,JSC,list ops,[] (list),1.2e-05,,,,
1.7.228,JSC,list ops,[] (list 1 2 3),7.7e-05,,,,
1.7.228,JSC,vector ops,[] [],1.2e-05,,,,
1.7.228,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.5e-05,,,,
1.7.228,JSC,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x7f9a514 ""cljs.tagged_literals.JSValue@7f9a514""]))",7.1e-05,,,,
1.7.228,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.5e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00028,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.4e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (coll 0),3e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.1e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.4e-05,,,,
1.7.228,JSC,vector ops,[coll []] (-conj coll 1),5.5e-05,,,,
1.7.228,JSC,vector ops,[coll [1]] (-conj coll 2),5.6e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.8e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (seq coll),4e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.4e-05,,,,
1.7.228,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3.1e-05,,,,
1.7.228,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.7.228,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3e-05,,,,
1.7.228,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.4e-05,,,,
1.7.228,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.4e-05,,,,
1.7.228,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.1,,,,
1.7.228,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00033,,,,
1.7.228,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00055,,,,
1.7.228,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.7.189,V8,identity,[x 1] (identity x),1.23e-06,,,,
1.7.189,V8,symbol construction,[] (symbol (quote foo)),5.3e-05,,,,
1.7.189,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.25,,,,
1.7.189,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.21,,,,
1.7.189,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.11,,,,
1.7.189,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.08,,,,
1.7.189,V8,instance?,[coll []] (instance? PersistentVector coll),5.5e-05,,,,
1.7.189,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.2e-05,,,,
1.7.189,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.3e-05,,,,
1.7.189,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.8e-05,,,,
1.7.189,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000126,,,,
1.7.189,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.6e-05,,,,
1.7.189,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000154,,,,
1.7.189,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),5.2e-05,,,,
1.7.189,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.1e-05,,,,
1.7.189,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.6e-05,,,,
1.7.189,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000108,,,,
1.7.189,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),5.9e-05,,,,
1.7.189,V8,list ops,[coll (list 1 2 3)] (first coll),6.5e-05,,,,
1.7.189,V8,list ops,[coll (list 1 2 3)] (-first coll),5.2e-05,,,,
1.7.189,V8,list ops,[coll (list 1 2 3)] (rest coll),5.1e-05,,,,
1.7.189,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.5e-05,,,,
1.7.189,V8,list ops,[] (list),4.7e-05,,,,
1.7.189,V8,list ops,[] (list 1 2 3),9.4e-05,,,,
1.7.189,V8,vector ops,[] [],5e-05,,,,
1.7.189,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.4e-05,,,,
1.7.189,V8,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x66effd4e ""cljs.tagged_literals.JSValue@66effd4e""]))",8.2e-05,,,,
1.7.189,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.8e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (transient coll),0.00022,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.2e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (coll 0),5.7e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.3e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.9e-05,,,,
1.7.189,V8,vector ops,[coll []] (-conj coll 1),8.5e-05,,,,
1.7.189,V8,vector ops,[coll [1]] (-conj coll 2),8.5e-05,,,,
1.7.189,V8,vector ops,[coll [1 2]] (-conj coll 3),8.8e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (seq coll),8.6e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (-seq coll),6.8e-05,,,,
1.7.189,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.6e-05,,,,
1.7.189,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.9e-05,,,,
1.7.189,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.8e-05,,,,
1.7.189,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.9e-05,,,,
1.7.189,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.3e-05,,,,
1.7.189,V8,large vector ops,[] (reduce conj [] (range 40000)),6.9,,,,
1.7.189,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00028,,,,
1.7.189,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.0007,,,,
1.7.189,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00023,,,,
1.7.189,SM,identity,[x 1] (identity x),3.9e-06,,,,
1.7.189,SM,symbol construction,[] (symbol (quote foo)),4.3e-05,,,,
1.7.189,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.08,,,,
1.7.189,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.17,,,,
1.7.189,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.7.189,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.1,,,,
1.7.189,SM,instance?,[coll []] (instance? PersistentVector coll),2.9e-05,,,,
1.7.189,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.1e-05,,,,
1.7.189,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.2e-05,,,,
1.7.189,SM,array & string ops,[coll (array 1 2 3)] (seq coll),6.1e-05,,,,
1.7.189,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000453,,,,
1.7.189,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.000133,,,,
1.7.189,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001958,,,,
1.7.189,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.3e-05,,,,
1.7.189,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000361,,,,
1.7.189,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.1e-05,,,,
1.7.189,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.00023,,,,
1.7.189,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),2.9e-05,,,,
1.7.189,SM,list ops,[coll (list 1 2 3)] (first coll),4.7e-05,,,,
1.7.189,SM,list ops,[coll (list 1 2 3)] (-first coll),3.2e-05,,,,
1.7.189,SM,list ops,[coll (list 1 2 3)] (rest coll),3.2e-05,,,,
1.7.189,SM,list ops,[coll (list 1 2 3)] (-rest coll),3.2e-05,,,,
1.7.189,SM,list ops,[] (list),1.5e-05,,,,
1.7.189,SM,list ops,[] (list 1 2 3),9.8e-05,,,,
1.7.189,SM,vector ops,[] [],1.7e-05,,,,
1.7.189,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000184,,,,
1.7.189,SM,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x66effd4e ""cljs.tagged_literals.JSValue@66effd4e""]))",0.000161,,,,
1.7.189,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000156,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (transient coll),0.00044,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.8e-05,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.5e-05,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.5e-05,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (coll 0),4.6e-05,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.7e-05,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.9e-05,,,,
1.7.189,SM,vector ops,[coll []] (-conj coll 1),6.6e-05,,,,
1.7.189,SM,vector ops,[coll [1]] (-conj coll 2),6.3e-05,,,,
1.7.189,SM,vector ops,[coll [1 2]] (-conj coll 3),7e-05,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (seq coll),7.4e-05,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (-seq coll),4.8e-05,,,,
1.7.189,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.6e-05,,,,
1.7.189,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.7.189,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.3e-05,,,,
1.7.189,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),5e-05,,,,
1.7.189,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.00012,,,,
1.7.189,SM,large vector ops,[] (reduce conj [] (range 40000)),7.8,,,,
1.7.189,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.7.189,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00112,,,,
1.7.189,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00042,,,,
1.7.189,JSC,identity,[x 1] (identity x),2.16e-06,,,,
1.7.189,JSC,symbol construction,[] (symbol (quote foo)),2e-05,,,,
1.7.189,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.18,,,,
1.7.189,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.12,,,,
1.7.189,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.03,,,,
1.7.189,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.05,,,,
1.7.189,JSC,instance?,[coll []] (instance? PersistentVector coll),2.5e-05,,,,
1.7.189,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.8e-05,,,,
1.7.189,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.5e-05,,,,
1.7.189,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6e-05,,,,
1.7.189,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.8e-05,,,,
1.7.189,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.1e-05,,,,
1.7.189,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.2e-05,,,,
1.7.189,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.4e-05,,,,
1.7.189,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.3e-05,,,,
1.7.189,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.4e-05,,,,
1.7.189,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),9.1e-05,,,,
1.7.189,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.7e-05,,,,
1.7.189,JSC,list ops,[coll (list 1 2 3)] (first coll),2.6e-05,,,,
1.7.189,JSC,list ops,[coll (list 1 2 3)] (-first coll),2e-05,,,,
1.7.189,JSC,list ops,[coll (list 1 2 3)] (rest coll),2.1e-05,,,,
1.7.189,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.7.189,JSC,list ops,[] (list),1.1e-05,,,,
1.7.189,JSC,list ops,[] (list 1 2 3),8e-05,,,,
1.7.189,JSC,vector ops,[] [],1.4e-05,,,,
1.7.189,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),7.8e-05,,,,
1.7.189,JSC,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x66effd4e ""cljs.tagged_literals.JSValue@66effd4e""]))",6.9e-05,,,,
1.7.189,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.3e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00028,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.5e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (coll 0),3.1e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.2e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.5e-05,,,,
1.7.189,JSC,vector ops,[coll []] (-conj coll 1),5.1e-05,,,,
1.7.189,JSC,vector ops,[coll [1]] (-conj coll 2),5.5e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.6e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (seq coll),3.7e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.2e-05,,,,
1.7.189,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3.1e-05,,,,
1.7.189,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.7.189,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3e-05,,,,
1.7.189,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.1e-05,,,,
1.7.189,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.3e-05,,,,
1.7.189,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.5,,,,
1.7.189,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00031,,,,
1.7.189,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00052,,,,
1.7.189,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.7.170,V8,identity,[x 1] (identity x),1.23e-06,,,,
1.7.170,V8,symbol construction,[] (symbol (quote foo)),5.5e-05,,,,
1.7.170,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.35,,,,
1.7.170,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.3,,,,
1.7.170,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.2,,,,
1.7.170,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.2,,,,
1.7.170,V8,instance?,[coll []] (instance? PersistentVector coll),5.4e-05,,,,
1.7.170,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.3e-05,,,,
1.7.170,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.2e-05,,,,
1.7.170,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.5e-05,,,,
1.7.170,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000125,,,,
1.7.170,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.4e-05,,,,
1.7.170,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000147,,,,
1.7.170,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7.1e-05,,,,
1.7.170,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6e-05,,,,
1.7.170,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.6e-05,,,,
1.7.170,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000111,,,,
1.7.170,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),6e-05,,,,
1.7.170,V8,list ops,[coll (list 1 2 3)] (first coll),6.4e-05,,,,
1.7.170,V8,list ops,[coll (list 1 2 3)] (-first coll),5.1e-05,,,,
1.7.170,V8,list ops,[coll (list 1 2 3)] (rest coll),5.2e-05,,,,
1.7.170,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.1e-05,,,,
1.7.170,V8,list ops,[] (list),4.5e-05,,,,
1.7.170,V8,list ops,[] (list 1 2 3),9.3e-05,,,,
1.7.170,V8,vector ops,[] [],4.7e-05,,,,
1.7.170,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.4e-05,,,,
1.7.170,V8,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x5435582e ""cljs.tagged_literals.JSValue@5435582e""]))",8.2e-05,,,,
1.7.170,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.7e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (transient coll),0.00022,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.5e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6.4e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (coll 0),5.8e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.3e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.9e-05,,,,
1.7.170,V8,vector ops,[coll []] (-conj coll 1),8.4e-05,,,,
1.7.170,V8,vector ops,[coll [1]] (-conj coll 2),8.4e-05,,,,
1.7.170,V8,vector ops,[coll [1 2]] (-conj coll 3),9e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (seq coll),8.5e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (-seq coll),6.8e-05,,,,
1.7.170,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.3e-05,,,,
1.7.170,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.5e-05,,,,
1.7.170,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.9e-05,,,,
1.7.170,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.8e-05,,,,
1.7.170,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.4e-05,,,,
1.7.170,V8,large vector ops,[] (reduce conj [] (range 40000)),7.2,,,,
1.7.170,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00029,,,,
1.7.170,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00068,,,,
1.7.170,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00023,,,,
1.7.170,SM,identity,[x 1] (identity x),3.97e-06,,,,
1.7.170,SM,symbol construction,[] (symbol (quote foo)),4.1e-05,,,,
1.7.170,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.09,,,,
1.7.170,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.16,,,,
1.7.170,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.7.170,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.12,,,,
1.7.170,SM,instance?,[coll []] (instance? PersistentVector coll),2.6e-05,,,,
1.7.170,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.3e-05,,,,
1.7.170,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.9e-05,,,,
1.7.170,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.8e-05,,,,
1.7.170,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000458,,,,
1.7.170,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.000132,,,,
1.7.170,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001997,,,,
1.7.170,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.4e-05,,,,
1.7.170,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000372,,,,
1.7.170,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.3e-05,,,,
1.7.170,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000238,,,,
1.7.170,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),2.9e-05,,,,
1.7.170,SM,list ops,[coll (list 1 2 3)] (first coll),4.7e-05,,,,
1.7.170,SM,list ops,[coll (list 1 2 3)] (-first coll),3.1e-05,,,,
1.7.170,SM,list ops,[coll (list 1 2 3)] (rest coll),3.1e-05,,,,
1.7.170,SM,list ops,[coll (list 1 2 3)] (-rest coll),3e-05,,,,
1.7.170,SM,list ops,[] (list),1.6e-05,,,,
1.7.170,SM,list ops,[] (list 1 2 3),9.8e-05,,,,
1.7.170,SM,vector ops,[] [],1.4e-05,,,,
1.7.170,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000184,,,,
1.7.170,SM,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x5435582e ""cljs.tagged_literals.JSValue@5435582e""]))",0.000161,,,,
1.7.170,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000157,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (transient coll),0.00043,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.8e-05,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.5e-05,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.6e-05,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (coll 0),4.3e-05,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (conj coll 4),7.1e-05,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.7e-05,,,,
1.7.170,SM,vector ops,[coll []] (-conj coll 1),6.2e-05,,,,
1.7.170,SM,vector ops,[coll [1]] (-conj coll 2),6.1e-05,,,,
1.7.170,SM,vector ops,[coll [1 2]] (-conj coll 3),6.6e-05,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (seq coll),7.4e-05,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (-seq coll),4.7e-05,,,,
1.7.170,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.3e-05,,,,
1.7.170,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.7.170,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.4e-05,,,,
1.7.170,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),5.3e-05,,,,
1.7.170,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.000125,,,,
1.7.170,SM,large vector ops,[] (reduce conj [] (range 40000)),7.9,,,,
1.7.170,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.7.170,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00114,,,,
1.7.170,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00043,,,,
1.7.170,JSC,identity,[x 1] (identity x),2.16e-06,,,,
1.7.170,JSC,symbol construction,[] (symbol (quote foo)),2.1e-05,,,,
1.7.170,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.2,,,,
1.7.170,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.12,,,,
1.7.170,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.04,,,,
1.7.170,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.07,,,,
1.7.170,JSC,instance?,[coll []] (instance? PersistentVector coll),2.6e-05,,,,
1.7.170,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.8e-05,,,,
1.7.170,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3e-05,,,,
1.7.170,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6.5e-05,,,,
1.7.170,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.7e-05,,,,
1.7.170,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.1e-05,,,,
1.7.170,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.6e-05,,,,
1.7.170,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.5e-05,,,,
1.7.170,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.8e-05,,,,
1.7.170,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.7e-05,,,,
1.7.170,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.8e-05,,,,
1.7.170,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),2.2e-05,,,,
1.7.170,JSC,list ops,[coll (list 1 2 3)] (first coll),2.9e-05,,,,
1.7.170,JSC,list ops,[coll (list 1 2 3)] (-first coll),2e-05,,,,
1.7.170,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.7e-05,,,,
1.7.170,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.7.170,JSC,list ops,[] (list),1.2e-05,,,,
1.7.170,JSC,list ops,[] (list 1 2 3),7.3e-05,,,,
1.7.170,JSC,vector ops,[] [],1.5e-05,,,,
1.7.170,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.3e-05,,,,
1.7.170,JSC,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x5435582e ""cljs.tagged_literals.JSValue@5435582e""]))",7.6e-05,,,,
1.7.170,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.8e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (transient coll),0.0003,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.6e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.4e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.1e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (coll 0),3e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.4e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.5e-05,,,,
1.7.170,JSC,vector ops,[coll []] (-conj coll 1),5.2e-05,,,,
1.7.170,JSC,vector ops,[coll [1]] (-conj coll 2),5.2e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.8e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (seq coll),3.7e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.4e-05,,,,
1.7.170,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3.1e-05,,,,
1.7.170,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.7e-05,,,,
1.7.170,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.3e-05,,,,
1.7.170,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.3e-05,,,,
1.7.170,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.1e-05,,,,
1.7.170,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.4,,,,
1.7.170,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00036,,,,
1.7.170,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00056,,,,
1.7.170,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.7.166,V8,identity,[x 1] (identity x),1.19e-06,,,,
1.7.166,V8,symbol construction,[] (symbol (quote foo)),5.3e-05,,,,
1.7.166,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.4,,,,
1.7.166,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.29,,,,
1.7.166,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.2,,,,
1.7.166,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.2,,,,
1.7.166,V8,instance?,[coll []] (instance? PersistentVector coll),5.6e-05,,,,
1.7.166,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.7e-05,,,,
1.7.166,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.7.166,V8,array & string ops,[coll (array 1 2 3)] (seq coll),7e-05,,,,
1.7.166,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000132,,,,
1.7.166,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.4e-05,,,,
1.7.166,V8,array & string ops,"[coll ""foobar""] (first coll)",0.00015,,,,
1.7.166,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7.1e-05,,,,
1.7.166,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",5.9e-05,,,,
1.7.166,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.8e-05,,,,
1.7.166,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.0001,,,,
1.7.166,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),5.9e-05,,,,
1.7.166,V8,list ops,[coll (list 1 2 3)] (first coll),6.3e-05,,,,
1.7.166,V8,list ops,[coll (list 1 2 3)] (-first coll),5.1e-05,,,,
1.7.166,V8,list ops,[coll (list 1 2 3)] (rest coll),5.5e-05,,,,
1.7.166,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.6e-05,,,,
1.7.166,V8,list ops,[] (list),4.4e-05,,,,
1.7.166,V8,list ops,[] (list 1 2 3),9.4e-05,,,,
1.7.166,V8,vector ops,[] [],5.1e-05,,,,
1.7.166,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.8e-05,,,,
1.7.166,V8,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x796affb8 ""cljs.tagged_literals.JSValue@796affb8""]))",8.2e-05,,,,
1.7.166,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.8e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (transient coll),0.00022,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.2e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (coll 0),5.9e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.3e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.8e-05,,,,
1.7.166,V8,vector ops,[coll []] (-conj coll 1),8.5e-05,,,,
1.7.166,V8,vector ops,[coll [1]] (-conj coll 2),8.4e-05,,,,
1.7.166,V8,vector ops,[coll [1 2]] (-conj coll 3),8.7e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (seq coll),8.6e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (-seq coll),6.9e-05,,,,
1.7.166,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.3e-05,,,,
1.7.166,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.6e-05,,,,
1.7.166,V8,vector ops,[coll (seq [1 2 3])] (rest coll),7e-05,,,,
1.7.166,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.9e-05,,,,
1.7.166,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.4e-05,,,,
1.7.166,V8,large vector ops,[] (reduce conj [] (range 40000)),7.2,,,,
1.7.166,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00028,,,,
1.7.166,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.0007,,,,
1.7.166,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00024,,,,
1.7.166,SM,identity,[x 1] (identity x),4.01e-06,,,,
1.7.166,SM,symbol construction,[] (symbol (quote foo)),4e-05,,,,
1.7.166,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.08,,,,
1.7.166,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.16,,,,
1.7.166,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.03,,,,
1.7.166,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.11,,,,
1.7.166,SM,instance?,[coll []] (instance? PersistentVector coll),2.8e-05,,,,
1.7.166,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4e-05,,,,
1.7.166,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.8e-05,,,,
1.7.166,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.8e-05,,,,
1.7.166,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000454,,,,
1.7.166,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.000126,,,,
1.7.166,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001923,,,,
1.7.166,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.5e-05,,,,
1.7.166,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000372,,,,
1.7.166,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.2e-05,,,,
1.7.166,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000231,,,,
1.7.166,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),2.9e-05,,,,
1.7.166,SM,list ops,[coll (list 1 2 3)] (first coll),4.5e-05,,,,
1.7.166,SM,list ops,[coll (list 1 2 3)] (-first coll),3.1e-05,,,,
1.7.166,SM,list ops,[coll (list 1 2 3)] (rest coll),3.2e-05,,,,
1.7.166,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.7.166,SM,list ops,[] (list),1.5e-05,,,,
1.7.166,SM,list ops,[] (list 1 2 3),9.9e-05,,,,
1.7.166,SM,vector ops,[] [],1.4e-05,,,,
1.7.166,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000183,,,,
1.7.166,SM,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x796affb8 ""cljs.tagged_literals.JSValue@796affb8""]))",0.000162,,,,
1.7.166,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000157,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (transient coll),0.00039,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.3e-05,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.6e-05,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.6e-05,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (coll 0),4.5e-05,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.9e-05,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.7e-05,,,,
1.7.166,SM,vector ops,[coll []] (-conj coll 1),6.5e-05,,,,
1.7.166,SM,vector ops,[coll [1]] (-conj coll 2),6.2e-05,,,,
1.7.166,SM,vector ops,[coll [1 2]] (-conj coll 3),6.9e-05,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (seq coll),7.5e-05,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (-seq coll),4.8e-05,,,,
1.7.166,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.4e-05,,,,
1.7.166,SM,vector ops,[coll (seq [1 2 3])] (-first coll),4e-05,,,,
1.7.166,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.3e-05,,,,
1.7.166,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),5e-05,,,,
1.7.166,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.000124,,,,
1.7.166,SM,large vector ops,[] (reduce conj [] (range 40000)),8.4,,,,
1.7.166,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00038,,,,
1.7.166,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00112,,,,
1.7.166,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00044,,,,
1.7.166,JSC,identity,[x 1] (identity x),2.15e-06,,,,
1.7.166,JSC,symbol construction,[] (symbol (quote foo)),2.3e-05,,,,
1.7.166,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.2,,,,
1.7.166,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.14,,,,
1.7.166,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.06,,,,
1.7.166,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.07,,,,
1.7.166,JSC,instance?,[coll []] (instance? PersistentVector coll),2.5e-05,,,,
1.7.166,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.8e-05,,,,
1.7.166,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.6e-05,,,,
1.7.166,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),5.8e-05,,,,
1.7.166,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.9e-05,,,,
1.7.166,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.4e-05,,,,
1.7.166,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.2e-05,,,,
1.7.166,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.6e-05,,,,
1.7.166,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",3.2e-05,,,,
1.7.166,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.6e-05,,,,
1.7.166,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.5e-05,,,,
1.7.166,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.7e-05,,,,
1.7.166,JSC,list ops,[coll (list 1 2 3)] (first coll),3.1e-05,,,,
1.7.166,JSC,list ops,[coll (list 1 2 3)] (-first coll),1.8e-05,,,,
1.7.166,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.7e-05,,,,
1.7.166,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.7.166,JSC,list ops,[] (list),1.2e-05,,,,
1.7.166,JSC,list ops,[] (list 1 2 3),7.8e-05,,,,
1.7.166,JSC,vector ops,[] [],1.1e-05,,,,
1.7.166,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.3e-05,,,,
1.7.166,JSC,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x796affb8 ""cljs.tagged_literals.JSValue@796affb8""]))",7.5e-05,,,,
1.7.166,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.6e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00029,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.6e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.4e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.1e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (coll 0),3.1e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.3e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.2e-05,,,,
1.7.166,JSC,vector ops,[coll []] (-conj coll 1),5.4e-05,,,,
1.7.166,JSC,vector ops,[coll [1]] (-conj coll 2),5.5e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2]] (-conj coll 3),6.2e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (seq coll),3.5e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.5e-05,,,,
1.7.166,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3.1e-05,,,,
1.7.166,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.7e-05,,,,
1.7.166,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.4e-05,,,,
1.7.166,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.4e-05,,,,
1.7.166,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.4e-05,,,,
1.7.166,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.4,,,,
1.7.166,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00032,,,,
1.7.166,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00055,,,,
1.7.166,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00024,,,,
1.7.58,V8,identity,[x 1] (identity x),1.22e-06,,,,
1.7.58,V8,symbol construction,[] (symbol (quote foo)),5.7e-05,,,,
1.7.58,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.22,,,,
1.7.58,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.2,,,,
1.7.58,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.11,,,,
1.7.58,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.09,,,,
1.7.58,V8,instance?,[coll []] (instance? PersistentVector coll),5.2e-05,,,,
1.7.58,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.7e-05,,,,
1.7.58,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.7.58,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.9e-05,,,,
1.7.58,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000126,,,,
1.7.58,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.5e-05,,,,
1.7.58,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000149,,,,
1.7.58,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),5.2e-05,,,,
1.7.58,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.1e-05,,,,
1.7.58,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.3e-05,,,,
1.7.58,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.0001,,,,
1.7.58,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),6.4e-05,,,,
1.7.58,V8,list ops,[coll (list 1 2 3)] (first coll),6.3e-05,,,,
1.7.58,V8,list ops,[coll (list 1 2 3)] (-first coll),5.1e-05,,,,
1.7.58,V8,list ops,[coll (list 1 2 3)] (rest coll),5.1e-05,,,,
1.7.58,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.1e-05,,,,
1.7.58,V8,list ops,[] (list),4.4e-05,,,,
1.7.58,V8,list ops,[] (list 1 2 3),9.2e-05,,,,
1.7.58,V8,vector ops,[] [],5.4e-05,,,,
1.7.58,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.3e-05,,,,
1.7.58,V8,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x4af84a76 ""cljs.tagged_literals.JSValue@4af84a76""]))",8e-05,,,,
1.7.58,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.7e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (transient coll),0.00025,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.1e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (coll 0),6e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.2e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (-conj coll 4),9.1e-05,,,,
1.7.58,V8,vector ops,[coll []] (-conj coll 1),8.3e-05,,,,
1.7.58,V8,vector ops,[coll [1]] (-conj coll 2),8.6e-05,,,,
1.7.58,V8,vector ops,[coll [1 2]] (-conj coll 3),8.4e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (seq coll),8.4e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (-seq coll),6.7e-05,,,,
1.7.58,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.1e-05,,,,
1.7.58,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.3e-05,,,,
1.7.58,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.7e-05,,,,
1.7.58,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.6e-05,,,,
1.7.58,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.2e-05,,,,
1.7.58,V8,large vector ops,[] (reduce conj [] (range 40000)),6.8,,,,
1.7.58,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00028,,,,
1.7.58,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00069,,,,
1.7.58,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00023,,,,
1.7.58,SM,identity,[x 1] (identity x),3.88e-06,,,,
1.7.58,SM,symbol construction,[] (symbol (quote foo)),4.2e-05,,,,
1.7.58,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.08,,,,
1.7.58,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.16,,,,
1.7.58,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.7.58,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.11,,,,
1.7.58,SM,instance?,[coll []] (instance? PersistentVector coll),2.6e-05,,,,
1.7.58,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.3e-05,,,,
1.7.58,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.7e-05,,,,
1.7.58,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.7e-05,,,,
1.7.58,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000444,,,,
1.7.58,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.000126,,,,
1.7.58,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001925,,,,
1.7.58,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.3e-05,,,,
1.7.58,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000375,,,,
1.7.58,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.3e-05,,,,
1.7.58,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000232,,,,
1.7.58,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3e-05,,,,
1.7.58,SM,list ops,[coll (list 1 2 3)] (first coll),4.8e-05,,,,
1.7.58,SM,list ops,[coll (list 1 2 3)] (-first coll),3e-05,,,,
1.7.58,SM,list ops,[coll (list 1 2 3)] (rest coll),3.2e-05,,,,
1.7.58,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.7.58,SM,list ops,[] (list),1.9e-05,,,,
1.7.58,SM,list ops,[] (list 1 2 3),0.000106,,,,
1.7.58,SM,vector ops,[] [],1.5e-05,,,,
1.7.58,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000182,,,,
1.7.58,SM,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x4af84a76 ""cljs.tagged_literals.JSValue@4af84a76""]))",0.000163,,,,
1.7.58,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000155,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (transient coll),0.00043,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.3e-05,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.5e-05,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.7e-05,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (coll 0),4.2e-05,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.7e-05,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.7e-05,,,,
1.7.58,SM,vector ops,[coll []] (-conj coll 1),6e-05,,,,
1.7.58,SM,vector ops,[coll [1]] (-conj coll 2),6.2e-05,,,,
1.7.58,SM,vector ops,[coll [1 2]] (-conj coll 3),6.6e-05,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (seq coll),7.2e-05,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (-seq coll),5.1e-05,,,,
1.7.58,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.4e-05,,,,
1.7.58,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.7.58,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.8e-05,,,,
1.7.58,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.9e-05,,,,
1.7.58,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.00013,,,,
1.7.58,SM,large vector ops,[] (reduce conj [] (range 40000)),8.2,,,,
1.7.58,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.7.58,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00113,,,,
1.7.58,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00044,,,,
1.7.58,JSC,identity,[x 1] (identity x),2.14e-06,,,,
1.7.58,JSC,symbol construction,[] (symbol (quote foo)),2.1e-05,,,,
1.7.58,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.18,,,,
1.7.58,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.11,,,,
1.7.58,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.04,,,,
1.7.58,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.06,,,,
1.7.58,JSC,instance?,[coll []] (instance? PersistentVector coll),2.3e-05,,,,
1.7.58,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.8e-05,,,,
1.7.58,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.5e-05,,,,
1.7.58,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),5.8e-05,,,,
1.7.58,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.8e-05,,,,
1.7.58,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5e-05,,,,
1.7.58,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.4e-05,,,,
1.7.58,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.4e-05,,,,
1.7.58,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.3e-05,,,,
1.7.58,JSC,cloning & specify,[coll [1 2 3]] (clone coll),5e-05,,,,
1.7.58,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),9.1e-05,,,,
1.7.58,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.8e-05,,,,
1.7.58,JSC,list ops,[coll (list 1 2 3)] (first coll),2.6e-05,,,,
1.7.58,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.2e-05,,,,
1.7.58,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.8e-05,,,,
1.7.58,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.6e-05,,,,
1.7.58,JSC,list ops,[] (list),1.1e-05,,,,
1.7.58,JSC,list ops,[] (list 1 2 3),7.1e-05,,,,
1.7.58,JSC,vector ops,[] [],1.1e-05,,,,
1.7.58,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.3e-05,,,,
1.7.58,JSC,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x4af84a76 ""cljs.tagged_literals.JSValue@4af84a76""]))",7.7e-05,,,,
1.7.58,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.4e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00027,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.5e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.5e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (coll 0),3.1e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.8e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.9e-05,,,,
1.7.58,JSC,vector ops,[coll []] (-conj coll 1),5.9e-05,,,,
1.7.58,JSC,vector ops,[coll [1]] (-conj coll 2),5.9e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.3e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (seq coll),4e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.7e-05,,,,
1.7.58,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3.1e-05,,,,
1.7.58,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.7.58,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3e-05,,,,
1.7.58,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.5e-05,,,,
1.7.58,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.5e-05,,,,
1.7.58,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.0,,,,
1.7.58,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00031,,,,
1.7.58,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00055,,,,
1.7.58,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00022,,,,
1.7.48,V8,identity,[x 1] (identity x),1.26e-06,,,,
1.7.48,V8,symbol construction,[] (symbol (quote foo)),5.4e-05,,,,
1.7.48,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.21,,,,
1.7.48,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.25,,,,
1.7.48,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.12,,,,
1.7.48,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.09,,,,
1.7.48,V8,instance?,[coll []] (instance? PersistentVector coll),5.3e-05,,,,
1.7.48,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4e-05,,,,
1.7.48,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.6e-05,,,,
1.7.48,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.7e-05,,,,
1.7.48,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000124,,,,
1.7.48,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.6e-05,,,,
1.7.48,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000159,,,,
1.7.48,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),5.3e-05,,,,
1.7.48,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.2e-05,,,,
1.7.48,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.5e-05,,,,
1.7.48,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000101,,,,
1.7.48,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),6e-05,,,,
1.7.48,V8,list ops,[coll (list 1 2 3)] (first coll),6.5e-05,,,,
1.7.48,V8,list ops,[coll (list 1 2 3)] (-first coll),5.1e-05,,,,
1.7.48,V8,list ops,[coll (list 1 2 3)] (rest coll),5.1e-05,,,,
1.7.48,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.2e-05,,,,
1.7.48,V8,list ops,[] (list),4.4e-05,,,,
1.7.48,V8,list ops,[] (list 1 2 3),9.2e-05,,,,
1.7.48,V8,vector ops,[] [],4.9e-05,,,,
1.7.48,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.3e-05,,,,
1.7.48,V8,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x72168258 ""cljs.tagged_literals.JSValue@72168258""]))",8.1e-05,,,,
1.7.48,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.0001,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (transient coll),0.00021,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.3e-05,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (coll 0),5.6e-05,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.2e-05,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.9e-05,,,,
1.7.48,V8,vector ops,[coll []] (-conj coll 1),8.5e-05,,,,
1.7.48,V8,vector ops,[coll [1]] (-conj coll 2),8.3e-05,,,,
1.7.48,V8,vector ops,[coll [1 2]] (-conj coll 3),9e-05,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (seq coll),8.5e-05,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (-seq coll),6.7e-05,,,,
1.7.48,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.6e-05,,,,
1.7.48,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.7e-05,,,,
1.7.48,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.7e-05,,,,
1.7.48,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.7e-05,,,,
1.7.48,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.1e-05,,,,
1.7.48,V8,large vector ops,[] (reduce conj [] (range 40000)),6.7,,,,
1.7.48,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00028,,,,
1.7.48,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00068,,,,
1.7.48,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00025,,,,
1.7.48,SM,identity,[x 1] (identity x),3.89e-06,,,,
1.7.48,SM,symbol construction,[] (symbol (quote foo)),3.9e-05,,,,
1.7.48,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.07,,,,
1.7.48,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.19,,,,
1.7.48,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.7.48,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.13,,,,
1.7.48,SM,instance?,[coll []] (instance? PersistentVector coll),2.7e-05,,,,
1.7.48,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.5e-05,,,,
1.7.48,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.7e-05,,,,
1.7.48,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.8e-05,,,,
1.7.48,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000494,,,,
1.7.48,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.000126,,,,
1.7.48,SM,array & string ops,"[coll ""foobar""] (first coll)",0.002073,,,,
1.7.48,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.3e-05,,,,
1.7.48,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000382,,,,
1.7.48,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.1e-05,,,,
1.7.48,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000236,,,,
1.7.48,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),2.9e-05,,,,
1.7.48,SM,list ops,[coll (list 1 2 3)] (first coll),4.6e-05,,,,
1.7.48,SM,list ops,[coll (list 1 2 3)] (-first coll),3.5e-05,,,,
1.7.48,SM,list ops,[coll (list 1 2 3)] (rest coll),3.2e-05,,,,
1.7.48,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.7.48,SM,list ops,[] (list),1.9e-05,,,,
1.7.48,SM,list ops,[] (list 1 2 3),9.7e-05,,,,
1.7.48,SM,vector ops,[] [],1.4e-05,,,,
1.7.48,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000174,,,,
1.7.48,SM,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x72168258 ""cljs.tagged_literals.JSValue@72168258""]))",0.00016,,,,
1.7.48,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000156,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (transient coll),0.00039,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.6e-05,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.5e-05,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (-nth coll 0),5e-05,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (coll 0),4.3e-05,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.8e-05,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (-conj coll 4),7e-05,,,,
1.7.48,SM,vector ops,[coll []] (-conj coll 1),6.2e-05,,,,
1.7.48,SM,vector ops,[coll [1]] (-conj coll 2),6.5e-05,,,,
1.7.48,SM,vector ops,[coll [1 2]] (-conj coll 3),6.6e-05,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (seq coll),7.4e-05,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (-seq coll),4.8e-05,,,,
1.7.48,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.4e-05,,,,
1.7.48,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.7.48,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.4e-05,,,,
1.7.48,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.9e-05,,,,
1.7.48,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.000119,,,,
1.7.48,SM,large vector ops,[] (reduce conj [] (range 40000)),7.7,,,,
1.7.48,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00038,,,,
1.7.48,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00115,,,,
1.7.48,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00044,,,,
1.7.48,JSC,identity,[x 1] (identity x),2.18e-06,,,,
1.7.48,JSC,symbol construction,[] (symbol (quote foo)),2.1e-05,,,,
1.7.48,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.17,,,,
1.7.48,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.11,,,,
1.7.48,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.05,,,,
1.7.48,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.07,,,,
1.7.48,JSC,instance?,[coll []] (instance? PersistentVector coll),2.4e-05,,,,
1.7.48,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.8e-05,,,,
1.7.48,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.7e-05,,,,
1.7.48,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6.5e-05,,,,
1.7.48,JSC,array & string ops,"[coll ""foobar""] (seq coll)",4.1e-05,,,,
1.7.48,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.4e-05,,,,
1.7.48,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.5e-05,,,,
1.7.48,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.4e-05,,,,
1.7.48,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.3e-05,,,,
1.7.48,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.7e-05,,,,
1.7.48,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.4e-05,,,,
1.7.48,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.7e-05,,,,
1.7.48,JSC,list ops,[coll (list 1 2 3)] (first coll),2.6e-05,,,,
1.7.48,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.4e-05,,,,
1.7.48,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.9e-05,,,,
1.7.48,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.7.48,JSC,list ops,[] (list),1.1e-05,,,,
1.7.48,JSC,list ops,[] (list 1 2 3),7.7e-05,,,,
1.7.48,JSC,vector ops,[] [],1.2e-05,,,,
1.7.48,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.2e-05,,,,
1.7.48,JSC,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x72168258 ""cljs.tagged_literals.JSValue@72168258""]))",6.9e-05,,,,
1.7.48,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.9e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00027,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.4e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (coll 0),3.1e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.3e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.5e-05,,,,
1.7.48,JSC,vector ops,[coll []] (-conj coll 1),5.4e-05,,,,
1.7.48,JSC,vector ops,[coll [1]] (-conj coll 2),5.4e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.8e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (seq coll),3.6e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.4e-05,,,,
1.7.48,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3e-05,,,,
1.7.48,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.7.48,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.3e-05,,,,
1.7.48,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.4e-05,,,,
1.7.48,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.4e-05,,,,
1.7.48,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.4,,,,
1.7.48,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00032,,,,
1.7.48,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00053,,,,
1.7.48,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.7.28,V8,identity,[x 1] (identity x),1.24e-06,,,,
1.7.28,V8,symbol construction,[] (symbol (quote foo)),6.9e-05,,,,
1.7.28,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.26,,,,
1.7.28,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.22,,,,
1.7.28,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.11,,,,
1.7.28,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.09,,,,
1.7.28,V8,instance?,[coll []] (instance? PersistentVector coll),5e-05,,,,
1.7.28,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.8e-05,,,,
1.7.28,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.7.28,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.3e-05,,,,
1.7.28,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000124,,,,
1.7.28,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.6e-05,,,,
1.7.28,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000146,,,,
1.7.28,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),5.1e-05,,,,
1.7.28,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.1e-05,,,,
1.7.28,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.5e-05,,,,
1.7.28,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000101,,,,
1.7.28,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),6.4e-05,,,,
1.7.28,V8,list ops,[coll (list 1 2 3)] (first coll),7.1e-05,,,,
1.7.28,V8,list ops,[coll (list 1 2 3)] (-first coll),5.3e-05,,,,
1.7.28,V8,list ops,[coll (list 1 2 3)] (rest coll),5.3e-05,,,,
1.7.28,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.2e-05,,,,
1.7.28,V8,list ops,[] (list),4.5e-05,,,,
1.7.28,V8,list ops,[] (list 1 2 3),9.6e-05,,,,
1.7.28,V8,vector ops,[] [],4.6e-05,,,,
1.7.28,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.7e-05,,,,
1.7.28,V8,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x86bf90b ""cljs.tagged_literals.JSValue@86bf90b""]))",8.5e-05,,,,
1.7.28,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.0001,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (transient coll),0.00021,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.4e-05,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6e-05,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (coll 0),5.8e-05,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.3e-05,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.9e-05,,,,
1.7.28,V8,vector ops,[coll []] (-conj coll 1),8.4e-05,,,,
1.7.28,V8,vector ops,[coll [1]] (-conj coll 2),8.4e-05,,,,
1.7.28,V8,vector ops,[coll [1 2]] (-conj coll 3),8.7e-05,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (seq coll),8.5e-05,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (-seq coll),6.8e-05,,,,
1.7.28,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.7e-05,,,,
1.7.28,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.5e-05,,,,
1.7.28,V8,vector ops,[coll (seq [1 2 3])] (rest coll),7e-05,,,,
1.7.28,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.8e-05,,,,
1.7.28,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.3e-05,,,,
1.7.28,V8,large vector ops,[] (reduce conj [] (range 40000)),6.2,,,,
1.7.28,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00028,,,,
1.7.28,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00067,,,,
1.7.28,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00024,,,,
1.7.28,SM,identity,[x 1] (identity x),4.06e-06,,,,
1.7.28,SM,symbol construction,[] (symbol (quote foo)),0.000326,,,,
1.7.28,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.08,,,,
1.7.28,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.17,,,,
1.7.28,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.7.28,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.13,,,,
1.7.28,SM,instance?,[coll []] (instance? PersistentVector coll),2.4e-05,,,,
1.7.28,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),3.8e-05,,,,
1.7.28,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4e-05,,,,
1.7.28,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.9e-05,,,,
1.7.28,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000532,,,,
1.7.28,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.000131,,,,
1.7.28,SM,array & string ops,"[coll ""foobar""] (first coll)",0.002091,,,,
1.7.28,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.6e-05,,,,
1.7.28,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000405,,,,
1.7.28,SM,cloning & specify,[coll [1 2 3]] (clone coll),5.4e-05,,,,
1.7.28,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000269,,,,
1.7.28,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3e-05,,,,
1.7.28,SM,list ops,[coll (list 1 2 3)] (first coll),4.3e-05,,,,
1.7.28,SM,list ops,[coll (list 1 2 3)] (-first coll),3.4e-05,,,,
1.7.28,SM,list ops,[coll (list 1 2 3)] (rest coll),3.3e-05,,,,
1.7.28,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.7.28,SM,list ops,[] (list),1.5e-05,,,,
1.7.28,SM,list ops,[] (list 1 2 3),9.9e-05,,,,
1.7.28,SM,vector ops,[] [],2e-05,,,,
1.7.28,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000179,,,,
1.7.28,SM,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x86bf90b ""cljs.tagged_literals.JSValue@86bf90b""]))",0.000155,,,,
1.7.28,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000165,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (transient coll),0.0004,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.6e-05,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.2e-05,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.4e-05,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (coll 0),4.2e-05,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.6e-05,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.6e-05,,,,
1.7.28,SM,vector ops,[coll []] (-conj coll 1),6.4e-05,,,,
1.7.28,SM,vector ops,[coll [1]] (-conj coll 2),6.3e-05,,,,
1.7.28,SM,vector ops,[coll [1 2]] (-conj coll 3),6.8e-05,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (seq coll),7.4e-05,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (-seq coll),5.1e-05,,,,
1.7.28,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.5e-05,,,,
1.7.28,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.7.28,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.3e-05,,,,
1.7.28,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),5e-05,,,,
1.7.28,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.000124,,,,
1.7.28,SM,large vector ops,[] (reduce conj [] (range 40000)),8.3,,,,
1.7.28,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.7.28,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00112,,,,
1.7.28,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00044,,,,
1.7.28,JSC,identity,[x 1] (identity x),2.19e-06,,,,
1.7.28,JSC,symbol construction,[] (symbol (quote foo)),5.3e-05,,,,
1.7.28,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.09,,,,
1.7.28,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.11,,,,
1.7.28,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.06,,,,
1.7.28,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.07,,,,
1.7.28,JSC,instance?,[coll []] (instance? PersistentVector coll),2.4e-05,,,,
1.7.28,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.7e-05,,,,
1.7.28,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.6e-05,,,,
1.7.28,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6.2e-05,,,,
1.7.28,JSC,array & string ops,"[coll ""foobar""] (seq coll)",4e-05,,,,
1.7.28,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.6e-05,,,,
1.7.28,JSC,array & string ops,"[coll ""foobar""] (first coll)",6e-05,,,,
1.7.28,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.3e-05,,,,
1.7.28,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.4e-05,,,,
1.7.28,JSC,cloning & specify,[coll [1 2 3]] (clone coll),3.5e-05,,,,
1.7.28,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.9e-05,,,,
1.7.28,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),2.1e-05,,,,
1.7.28,JSC,list ops,[coll (list 1 2 3)] (first coll),2.4e-05,,,,
1.7.28,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.1e-05,,,,
1.7.28,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.7e-05,,,,
1.7.28,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.7.28,JSC,list ops,[] (list),1.1e-05,,,,
1.7.28,JSC,list ops,[] (list 1 2 3),7.4e-05,,,,
1.7.28,JSC,vector ops,[] [],1.3e-05,,,,
1.7.28,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.1e-05,,,,
1.7.28,JSC,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x86bf90b ""cljs.tagged_literals.JSValue@86bf90b""]))",7.1e-05,,,,
1.7.28,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.9e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00028,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.9e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.7e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (coll 0),3.4e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.1e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.3e-05,,,,
1.7.28,JSC,vector ops,[coll []] (-conj coll 1),6e-05,,,,
1.7.28,JSC,vector ops,[coll [1]] (-conj coll 2),5.3e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.7e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (seq coll),3.7e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.5e-05,,,,
1.7.28,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3.1e-05,,,,
1.7.28,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.7.28,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3e-05,,,,
1.7.28,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.5e-05,,,,
1.7.28,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.2e-05,,,,
1.7.28,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.0,,,,
1.7.28,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00031,,,,
1.7.28,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00056,,,,
1.7.28,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.7.10,V8,identity,[x 1] (identity x),1.41e-06,,,,
1.7.10,V8,symbol construction,[] (symbol (quote foo)),8.1e-05,,,,
1.7.10,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.24,,,,
1.7.10,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.23,,,,
1.7.10,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.1,,,,
1.7.10,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.12,,,,
1.7.10,V8,instance?,[coll []] (instance? PersistentVector coll),6e-05,,,,
1.7.10,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.8e-05,,,,
1.7.10,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.8e-05,,,,
1.7.10,V8,array & string ops,[coll (array 1 2 3)] (seq coll),7.2e-05,,,,
1.7.10,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000145,,,,
1.7.10,V8,array & string ops,[coll (array 1 2 3)] (first coll),9e-05,,,,
1.7.10,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000147,,,,
1.7.10,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),5e-05,,,,
1.7.10,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6e-05,,,,
1.7.10,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.5e-05,,,,
1.7.10,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000109,,,,
1.7.10,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),6.4e-05,,,,
1.7.10,V8,list ops,[coll (list 1 2 3)] (first coll),6.1e-05,,,,
1.7.10,V8,list ops,[coll (list 1 2 3)] (-first coll),5.3e-05,,,,
1.7.10,V8,list ops,[coll (list 1 2 3)] (rest coll),5.2e-05,,,,
1.7.10,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.2e-05,,,,
1.7.10,V8,list ops,[] (list),4.4e-05,,,,
1.7.10,V8,list ops,[] (list 1 2 3),0.000105,,,,
1.7.10,V8,vector ops,[] [],5.5e-05,,,,
1.7.10,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000159,,,,
1.7.10,V8,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x6fefc5ea ""cljs.tagged_literals.JSValue@6fefc5ea""]))",0.000101,,,,
1.7.10,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000106,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (transient coll),0.00023,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.8e-05,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6.3e-05,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6.6e-05,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (coll 0),6.3e-05,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (conj coll 4),0.000113,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (-conj coll 4),0.000109,,,,
1.7.10,V8,vector ops,[coll []] (-conj coll 1),9e-05,,,,
1.7.10,V8,vector ops,[coll [1]] (-conj coll 2),8.6e-05,,,,
1.7.10,V8,vector ops,[coll [1 2]] (-conj coll 3),0.000106,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (seq coll),0.000104,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (-seq coll),7.9e-05,,,,
1.7.10,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.3e-05,,,,
1.7.10,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.5e-05,,,,
1.7.10,V8,vector ops,[coll (seq [1 2 3])] (rest coll),8.1e-05,,,,
1.7.10,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),8.1e-05,,,,
1.7.10,V8,vector ops,[coll (seq [1 2 3])] (next coll),9.2e-05,,,,
1.7.10,V8,large vector ops,[] (reduce conj [] (range 40000)),7.3,,,,
1.7.10,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00034,,,,
1.7.10,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.0008,,,,
1.7.10,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00026,,,,
1.7.10,SM,identity,[x 1] (identity x),4.48e-06,,,,
1.7.10,SM,symbol construction,[] (symbol (quote foo)),0.000326,,,,
1.7.10,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.08,,,,
1.7.10,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.17,,,,
1.7.10,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.03,,,,
1.7.10,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.11,,,,
1.7.10,SM,instance?,[coll []] (instance? PersistentVector coll),3.1e-05,,,,
1.7.10,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.6e-05,,,,
1.7.10,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.7.10,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.8e-05,,,,
1.7.10,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000488,,,,
1.7.10,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.000131,,,,
1.7.10,SM,array & string ops,"[coll ""foobar""] (first coll)",0.00193,,,,
1.7.10,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.6e-05,,,,
1.7.10,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000381,,,,
1.7.10,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.4e-05,,,,
1.7.10,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000229,,,,
1.7.10,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3.3e-05,,,,
1.7.10,SM,list ops,[coll (list 1 2 3)] (first coll),4.5e-05,,,,
1.7.10,SM,list ops,[coll (list 1 2 3)] (-first coll),3.2e-05,,,,
1.7.10,SM,list ops,[coll (list 1 2 3)] (rest coll),3.3e-05,,,,
1.7.10,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.7.10,SM,list ops,[] (list),1.5e-05,,,,
1.7.10,SM,list ops,[] (list 1 2 3),0.000104,,,,
1.7.10,SM,vector ops,[] [],1.6e-05,,,,
1.7.10,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000169,,,,
1.7.10,SM,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x6fefc5ea ""cljs.tagged_literals.JSValue@6fefc5ea""]))",0.000156,,,,
1.7.10,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000156,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (transient coll),0.00043,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.3e-05,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.3e-05,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.4e-05,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (coll 0),4.3e-05,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.9e-05,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.7e-05,,,,
1.7.10,SM,vector ops,[coll []] (-conj coll 1),6.6e-05,,,,
1.7.10,SM,vector ops,[coll [1]] (-conj coll 2),6.4e-05,,,,
1.7.10,SM,vector ops,[coll [1 2]] (-conj coll 3),6.9e-05,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (seq coll),7.4e-05,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (-seq coll),4.8e-05,,,,
1.7.10,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.5e-05,,,,
1.7.10,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.7.10,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.6e-05,,,,
1.7.10,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.9e-05,,,,
1.7.10,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.000126,,,,
1.7.10,SM,large vector ops,[] (reduce conj [] (range 40000)),8.4,,,,
1.7.10,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.7.10,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00115,,,,
1.7.10,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00044,,,,
1.7.10,JSC,identity,[x 1] (identity x),2.19e-06,,,,
1.7.10,JSC,symbol construction,[] (symbol (quote foo)),5.1e-05,,,,
1.7.10,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.1,,,,
1.7.10,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.1,,,,
1.7.10,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.04,,,,
1.7.10,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.08,,,,
1.7.10,JSC,instance?,[coll []] (instance? PersistentVector coll),2.5e-05,,,,
1.7.10,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.7e-05,,,,
1.7.10,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.7e-05,,,,
1.7.10,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6.5e-05,,,,
1.7.10,JSC,array & string ops,"[coll ""foobar""] (seq coll)",4e-05,,,,
1.7.10,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.4e-05,,,,
1.7.10,JSC,array & string ops,"[coll ""foobar""] (first coll)",8.1e-05,,,,
1.7.10,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.5e-05,,,,
1.7.10,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.3e-05,,,,
1.7.10,JSC,cloning & specify,[coll [1 2 3]] (clone coll),3.1e-05,,,,
1.7.10,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),9.4e-05,,,,
1.7.10,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.7e-05,,,,
1.7.10,JSC,list ops,[coll (list 1 2 3)] (first coll),2.4e-05,,,,
1.7.10,JSC,list ops,[coll (list 1 2 3)] (-first coll),1.9e-05,,,,
1.7.10,JSC,list ops,[coll (list 1 2 3)] (rest coll),2.1e-05,,,,
1.7.10,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.8e-05,,,,
1.7.10,JSC,list ops,[] (list),1.1e-05,,,,
1.7.10,JSC,list ops,[] (list 1 2 3),7.4e-05,,,,
1.7.10,JSC,vector ops,[] [],1.2e-05,,,,
1.7.10,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.2e-05,,,,
1.7.10,JSC,vector ops,"[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec #object[cljs.tagged_literals.JSValue 0x6fefc5ea ""cljs.tagged_literals.JSValue@6fefc5ea""]))",7.4e-05,,,,
1.7.10,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.5e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00027,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.4e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.6e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (coll 0),3.5e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.3e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.4e-05,,,,
1.7.10,JSC,vector ops,[coll []] (-conj coll 1),5.9e-05,,,,
1.7.10,JSC,vector ops,[coll [1]] (-conj coll 2),5.2e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.6e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (seq coll),3.5e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.4e-05,,,,
1.7.10,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3e-05,,,,
1.7.10,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.7.10,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.3e-05,,,,
1.7.10,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.1e-05,,,,
1.7.10,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.2e-05,,,,
1.7.10,JSC,large vector ops,[] (reduce conj [] (range 40000)),4.8,,,,
1.7.10,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00032,,,,
1.7.10,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00055,,,,
1.7.10,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.0002,,,,
