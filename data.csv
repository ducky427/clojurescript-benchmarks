Version,Engine,Section,Name,Mean,Deviation,MOE,RME,SEM
1.9.36,V8,identity,[x 1] (identity x),1.26e-06,,,,
1.9.36,V8,symbol construction,[] (symbol (quote foo)),5.2e-05,,,,
1.9.36,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.27,,,,
1.9.36,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.24,,,,
1.9.36,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.1,,,,
1.9.36,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.09,,,,
1.9.36,V8,instance?,[coll []] (instance? PersistentVector coll),5.3e-05,,,,
1.9.36,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.1e-05,,,,
1.9.36,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.5e-05,,,,
1.9.36,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.9e-05,,,,
1.9.36,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000128,,,,
1.9.36,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.5e-05,,,,
1.9.36,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000151,,,,
1.9.36,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7.1e-05,,,,
1.9.36,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.4e-05,,,,
1.9.36,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.2e-05,,,,
1.9.36,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000106,,,,
1.9.36,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),5.8e-05,,,,
1.9.36,V8,list ops,[coll (list 1 2 3)] (first coll),6.3e-05,,,,
1.9.36,V8,list ops,[coll (list 1 2 3)] (-first coll),5.1e-05,,,,
1.9.36,V8,list ops,[coll (list 1 2 3)] (rest coll),5.2e-05,,,,
1.9.36,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.1e-05,,,,
1.9.36,V8,list ops,[] (list),4.5e-05,,,,
1.9.36,V8,list ops,[] (list 1 2 3),9.3e-05,,,,
1.9.36,V8,vector ops,[] [],5e-05,,,,
1.9.36,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.4e-05,,,,
1.9.36,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),8.1e-05,,,,
1.9.36,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.0001,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (transient coll),0.00025,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.1e-05,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.8e-05,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (coll 0),5.6e-05,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.2e-05,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.8e-05,,,,
1.9.36,V8,vector ops,[coll []] (-conj coll 1),8.3e-05,,,,
1.9.36,V8,vector ops,[coll [1]] (-conj coll 2),8.3e-05,,,,
1.9.36,V8,vector ops,[coll [1 2]] (-conj coll 3),8.4e-05,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (seq coll),8.5e-05,,,,
1.9.36,V8,vector ops,[coll [1 2 3]] (-seq coll),6.7e-05,,,,
1.9.36,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.2e-05,,,,
1.9.36,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.5e-05,,,,
1.9.36,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.8e-05,,,,
1.9.36,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.8e-05,,,,
1.9.36,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.3e-05,,,,
1.9.36,V8,large vector ops,[] (reduce conj [] (range 40000)),6.8,,,,
1.9.36,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00027,,,,
1.9.36,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00068,,,,
1.9.36,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00023,,,,
1.9.36,SM,identity,[x 1] (identity x),3.88e-06,,,,
1.9.36,SM,symbol construction,[] (symbol (quote foo)),4.3e-05,,,,
1.9.36,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.07,,,,
1.9.36,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.16,,,,
1.9.36,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.9.36,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.13,,,,
1.9.36,SM,instance?,[coll []] (instance? PersistentVector coll),2.6e-05,,,,
1.9.36,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.4e-05,,,,
1.9.36,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.8e-05,,,,
1.9.36,SM,array & string ops,[coll (array 1 2 3)] (seq coll),6.1e-05,,,,
1.9.36,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000389,,,,
1.9.36,SM,array & string ops,[coll (array 1 2 3)] (first coll),5.9e-05,,,,
1.9.36,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001627,,,,
1.9.36,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.5e-05,,,,
1.9.36,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000353,,,,
1.9.36,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.1e-05,,,,
1.9.36,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000228,,,,
1.9.36,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3e-05,,,,
1.9.36,SM,list ops,[coll (list 1 2 3)] (first coll),4.5e-05,,,,
1.9.36,SM,list ops,[coll (list 1 2 3)] (-first coll),3.3e-05,,,,
1.9.36,SM,list ops,[coll (list 1 2 3)] (rest coll),3.2e-05,,,,
1.9.36,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.9.36,SM,list ops,[] (list),1.5e-05,,,,
1.9.36,SM,list ops,[] (list 1 2 3),9.8e-05,,,,
1.9.36,SM,vector ops,[] [],1.4e-05,,,,
1.9.36,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000177,,,,
1.9.36,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),0.000156,,,,
1.9.36,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000157,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (transient coll),0.00043,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.2e-05,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.4e-05,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.5e-05,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (coll 0),4.3e-05,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (conj coll 4),7.1e-05,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (-conj coll 4),7.2e-05,,,,
1.9.36,SM,vector ops,[coll []] (-conj coll 1),6e-05,,,,
1.9.36,SM,vector ops,[coll [1]] (-conj coll 2),6.3e-05,,,,
1.9.36,SM,vector ops,[coll [1 2]] (-conj coll 3),6.7e-05,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (seq coll),6.3e-05,,,,
1.9.36,SM,vector ops,[coll [1 2 3]] (-seq coll),4e-05,,,,
1.9.36,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.2e-05,,,,
1.9.36,SM,vector ops,[coll (seq [1 2 3])] (-first coll),4.2e-05,,,,
1.9.36,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5e-05,,,,
1.9.36,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),6.7e-05,,,,
1.9.36,SM,vector ops,[coll (seq [1 2 3])] (next coll),4.9e-05,,,,
1.9.36,SM,large vector ops,[] (reduce conj [] (range 40000)),7.8,,,,
1.9.36,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00036,,,,
1.9.36,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00116,,,,
1.9.36,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00041,,,,
1.9.36,JSC,identity,[x 1] (identity x),2.24e-06,,,,
1.9.36,JSC,symbol construction,[] (symbol (quote foo)),2.3e-05,,,,
1.9.36,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.18,,,,
1.9.36,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.13,,,,
1.9.36,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.04,,,,
1.9.36,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.06,,,,
1.9.36,JSC,instance?,[coll []] (instance? PersistentVector coll),2.4e-05,,,,
1.9.36,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.7e-05,,,,
1.9.36,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3e-05,,,,
1.9.36,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6.3e-05,,,,
1.9.36,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.7e-05,,,,
1.9.36,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5e-05,,,,
1.9.36,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.2e-05,,,,
1.9.36,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.6e-05,,,,
1.9.36,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.8e-05,,,,
1.9.36,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.7e-05,,,,
1.9.36,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.8e-05,,,,
1.9.36,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.8e-05,,,,
1.9.36,JSC,list ops,[coll (list 1 2 3)] (first coll),2.7e-05,,,,
1.9.36,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.1e-05,,,,
1.9.36,JSC,list ops,[coll (list 1 2 3)] (rest coll),2e-05,,,,
1.9.36,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.9.36,JSC,list ops,[] (list),1.1e-05,,,,
1.9.36,JSC,list ops,[] (list 1 2 3),7.6e-05,,,,
1.9.36,JSC,vector ops,[] [],1.3e-05,,,,
1.9.36,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8e-05,,,,
1.9.36,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),7.4e-05,,,,
1.9.36,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),8e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00028,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.5e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (coll 0),3e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.7e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.3e-05,,,,
1.9.36,JSC,vector ops,[coll []] (-conj coll 1),5.4e-05,,,,
1.9.36,JSC,vector ops,[coll [1]] (-conj coll 2),5.7e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.9e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (seq coll),3.4e-05,,,,
1.9.36,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.2e-05,,,,
1.9.36,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3e-05,,,,
1.9.36,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.9.36,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.6e-05,,,,
1.9.36,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.1e-05,,,,
1.9.36,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.5e-05,,,,
1.9.36,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.0,,,,
1.9.36,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.0003,,,,
1.9.36,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00058,,,,
1.9.36,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.9.35,V8,identity,[x 1] (identity x),1.22e-06,,,,
1.9.35,V8,symbol construction,[] (symbol (quote foo)),5.5e-05,,,,
1.9.35,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.24,,,,
1.9.35,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.2,,,,
1.9.35,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.1,,,,
1.9.35,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.09,,,,
1.9.35,V8,instance?,[coll []] (instance? PersistentVector coll),5.1e-05,,,,
1.9.35,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.8e-05,,,,
1.9.35,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.9.35,V8,array & string ops,[coll (array 1 2 3)] (seq coll),7.3e-05,,,,
1.9.35,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000129,,,,
1.9.35,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.6e-05,,,,
1.9.35,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000165,,,,
1.9.35,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7.2e-05,,,,
1.9.35,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.4e-05,,,,
1.9.35,V8,cloning & specify,[coll [1 2 3]] (clone coll),7.2e-05,,,,
1.9.35,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000102,,,,
1.9.35,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),6.4e-05,,,,
1.9.35,V8,list ops,[coll (list 1 2 3)] (first coll),6.6e-05,,,,
1.9.35,V8,list ops,[coll (list 1 2 3)] (-first coll),5.2e-05,,,,
1.9.35,V8,list ops,[coll (list 1 2 3)] (rest coll),5.1e-05,,,,
1.9.35,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.1e-05,,,,
1.9.35,V8,list ops,[] (list),4.4e-05,,,,
1.9.35,V8,list ops,[] (list 1 2 3),9.3e-05,,,,
1.9.35,V8,vector ops,[] [],5.4e-05,,,,
1.9.35,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.3e-05,,,,
1.9.35,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),8.4e-05,,,,
1.9.35,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000101,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (transient coll),0.00022,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.4e-05,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.8e-05,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (coll 0),5.6e-05,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.2e-05,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.9e-05,,,,
1.9.35,V8,vector ops,[coll []] (-conj coll 1),8.5e-05,,,,
1.9.35,V8,vector ops,[coll [1]] (-conj coll 2),8.4e-05,,,,
1.9.35,V8,vector ops,[coll [1 2]] (-conj coll 3),8.7e-05,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (seq coll),8.5e-05,,,,
1.9.35,V8,vector ops,[coll [1 2 3]] (-seq coll),6.8e-05,,,,
1.9.35,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.3e-05,,,,
1.9.35,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.4e-05,,,,
1.9.35,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.9e-05,,,,
1.9.35,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.9e-05,,,,
1.9.35,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.7e-05,,,,
1.9.35,V8,large vector ops,[] (reduce conj [] (range 40000)),6.9,,,,
1.9.35,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00029,,,,
1.9.35,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00067,,,,
1.9.35,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00023,,,,
1.9.35,SM,identity,[x 1] (identity x),3.84e-06,,,,
1.9.35,SM,symbol construction,[] (symbol (quote foo)),4e-05,,,,
1.9.35,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.07,,,,
1.9.35,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.19,,,,
1.9.35,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.9.35,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.1,,,,
1.9.35,SM,instance?,[coll []] (instance? PersistentVector coll),2.8e-05,,,,
1.9.35,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.4e-05,,,,
1.9.35,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.9e-05,,,,
1.9.35,SM,array & string ops,[coll (array 1 2 3)] (seq coll),6e-05,,,,
1.9.35,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.00039,,,,
1.9.35,SM,array & string ops,[coll (array 1 2 3)] (first coll),5.7e-05,,,,
1.9.35,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001593,,,,
1.9.35,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.4e-05,,,,
1.9.35,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000362,,,,
1.9.35,SM,cloning & specify,[coll [1 2 3]] (clone coll),4e-05,,,,
1.9.35,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.00023,,,,
1.9.35,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3e-05,,,,
1.9.35,SM,list ops,[coll (list 1 2 3)] (first coll),4.6e-05,,,,
1.9.35,SM,list ops,[coll (list 1 2 3)] (-first coll),3.4e-05,,,,
1.9.35,SM,list ops,[coll (list 1 2 3)] (rest coll),3.3e-05,,,,
1.9.35,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.9.35,SM,list ops,[] (list),1.5e-05,,,,
1.9.35,SM,list ops,[] (list 1 2 3),9.9e-05,,,,
1.9.35,SM,vector ops,[] [],1.4e-05,,,,
1.9.35,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000176,,,,
1.9.35,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),0.000158,,,,
1.9.35,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000154,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (transient coll),0.0004,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.5e-05,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.3e-05,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.2e-05,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (coll 0),4.4e-05,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.9e-05,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.7e-05,,,,
1.9.35,SM,vector ops,[coll []] (-conj coll 1),6.3e-05,,,,
1.9.35,SM,vector ops,[coll [1]] (-conj coll 2),6.1e-05,,,,
1.9.35,SM,vector ops,[coll [1 2]] (-conj coll 3),7e-05,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (seq coll),6.3e-05,,,,
1.9.35,SM,vector ops,[coll [1 2 3]] (-seq coll),4e-05,,,,
1.9.35,SM,vector ops,[coll (seq [1 2 3])] (first coll),4.8e-05,,,,
1.9.35,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.9.35,SM,vector ops,[coll (seq [1 2 3])] (rest coll),4.7e-05,,,,
1.9.35,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.2e-05,,,,
1.9.35,SM,vector ops,[coll (seq [1 2 3])] (next coll),4.7e-05,,,,
1.9.35,SM,large vector ops,[] (reduce conj [] (range 40000)),8.2,,,,
1.9.35,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00036,,,,
1.9.35,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00112,,,,
1.9.35,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00041,,,,
1.9.35,JSC,identity,[x 1] (identity x),2.2e-06,,,,
1.9.35,JSC,symbol construction,[] (symbol (quote foo)),2.4e-05,,,,
1.9.35,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.18,,,,
1.9.35,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.11,,,,
1.9.35,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.04,,,,
1.9.35,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.05,,,,
1.9.35,JSC,instance?,[coll []] (instance? PersistentVector coll),2.7e-05,,,,
1.9.35,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.8e-05,,,,
1.9.35,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.6e-05,,,,
1.9.35,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),5.8e-05,,,,
1.9.35,JSC,array & string ops,"[coll ""foobar""] (seq coll)",4e-05,,,,
1.9.35,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5e-05,,,,
1.9.35,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.2e-05,,,,
1.9.35,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.6e-05,,,,
1.9.35,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.8e-05,,,,
1.9.35,JSC,cloning & specify,[coll [1 2 3]] (clone coll),5e-05,,,,
1.9.35,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.4e-05,,,,
1.9.35,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),2.1e-05,,,,
1.9.35,JSC,list ops,[coll (list 1 2 3)] (first coll),2.6e-05,,,,
1.9.35,JSC,list ops,[coll (list 1 2 3)] (-first coll),2e-05,,,,
1.9.35,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.9e-05,,,,
1.9.35,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.9e-05,,,,
1.9.35,JSC,list ops,[] (list),1.1e-05,,,,
1.9.35,JSC,list ops,[] (list 1 2 3),7e-05,,,,
1.9.35,JSC,vector ops,[] [],1.1e-05,,,,
1.9.35,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.2e-05,,,,
1.9.35,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),8e-05,,,,
1.9.35,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.3e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00031,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.5e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.4e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (coll 0),3.1e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.5e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.5e-05,,,,
1.9.35,JSC,vector ops,[coll []] (-conj coll 1),5.7e-05,,,,
1.9.35,JSC,vector ops,[coll [1]] (-conj coll 2),5.8e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.3e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (seq coll),3.8e-05,,,,
1.9.35,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.2e-05,,,,
1.9.35,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3e-05,,,,
1.9.35,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.9.35,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.3e-05,,,,
1.9.35,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.4e-05,,,,
1.9.35,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.1e-05,,,,
1.9.35,JSC,large vector ops,[] (reduce conj [] (range 40000)),4.9,,,,
1.9.35,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00033,,,,
1.9.35,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00055,,,,
1.9.35,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00022,,,,
1.9.14,V8,identity,[x 1] (identity x),1.23e-06,,,,
1.9.14,V8,symbol construction,[] (symbol (quote foo)),5.6e-05,,,,
1.9.14,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.22,,,,
1.9.14,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.23,,,,
1.9.14,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.11,,,,
1.9.14,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.09,,,,
1.9.14,V8,instance?,[coll []] (instance? PersistentVector coll),5.3e-05,,,,
1.9.14,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.5e-05,,,,
1.9.14,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.9.14,V8,array & string ops,[coll (array 1 2 3)] (seq coll),7.2e-05,,,,
1.9.14,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000131,,,,
1.9.14,V8,array & string ops,[coll (array 1 2 3)] (first coll),8e-05,,,,
1.9.14,V8,array & string ops,"[coll ""foobar""] (first coll)",0.00015,,,,
1.9.14,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7.2e-05,,,,
1.9.14,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.1e-05,,,,
1.9.14,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.9e-05,,,,
1.9.14,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000104,,,,
1.9.14,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),5.8e-05,,,,
1.9.14,V8,list ops,[coll (list 1 2 3)] (first coll),6.5e-05,,,,
1.9.14,V8,list ops,[coll (list 1 2 3)] (-first coll),5.1e-05,,,,
1.9.14,V8,list ops,[coll (list 1 2 3)] (rest coll),5.5e-05,,,,
1.9.14,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.5e-05,,,,
1.9.14,V8,list ops,[] (list),4.5e-05,,,,
1.9.14,V8,list ops,[] (list 1 2 3),9.3e-05,,,,
1.9.14,V8,vector ops,[] [],4.6e-05,,,,
1.9.14,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.3e-05,,,,
1.9.14,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),8.2e-05,,,,
1.9.14,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.9e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (transient coll),0.00024,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.2e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (coll 0),5.7e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.2e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.8e-05,,,,
1.9.14,V8,vector ops,[coll []] (-conj coll 1),8.3e-05,,,,
1.9.14,V8,vector ops,[coll [1]] (-conj coll 2),8.3e-05,,,,
1.9.14,V8,vector ops,[coll [1 2]] (-conj coll 3),8.5e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (seq coll),8.4e-05,,,,
1.9.14,V8,vector ops,[coll [1 2 3]] (-seq coll),6.8e-05,,,,
1.9.14,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.2e-05,,,,
1.9.14,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.8e-05,,,,
1.9.14,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.8e-05,,,,
1.9.14,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.9e-05,,,,
1.9.14,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.2e-05,,,,
1.9.14,V8,large vector ops,[] (reduce conj [] (range 40000)),6.8,,,,
1.9.14,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00027,,,,
1.9.14,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00075,,,,
1.9.14,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00024,,,,
1.9.14,SM,identity,[x 1] (identity x),3.97e-06,,,,
1.9.14,SM,symbol construction,[] (symbol (quote foo)),4.1e-05,,,,
1.9.14,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.06,,,,
1.9.14,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.16,,,,
1.9.14,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.03,,,,
1.9.14,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.11,,,,
1.9.14,SM,instance?,[coll []] (instance? PersistentVector coll),2.6e-05,,,,
1.9.14,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),3.9e-05,,,,
1.9.14,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.7e-05,,,,
1.9.14,SM,array & string ops,[coll (array 1 2 3)] (seq coll),6.1e-05,,,,
1.9.14,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000391,,,,
1.9.14,SM,array & string ops,[coll (array 1 2 3)] (first coll),5.8e-05,,,,
1.9.14,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001606,,,,
1.9.14,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.7e-05,,,,
1.9.14,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000367,,,,
1.9.14,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.1e-05,,,,
1.9.14,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000235,,,,
1.9.14,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3e-05,,,,
1.9.14,SM,list ops,[coll (list 1 2 3)] (first coll),4.6e-05,,,,
1.9.14,SM,list ops,[coll (list 1 2 3)] (-first coll),3.4e-05,,,,
1.9.14,SM,list ops,[coll (list 1 2 3)] (rest coll),3.3e-05,,,,
1.9.14,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.9.14,SM,list ops,[] (list),1.9e-05,,,,
1.9.14,SM,list ops,[] (list 1 2 3),0.000101,,,,
1.9.14,SM,vector ops,[] [],1.8e-05,,,,
1.9.14,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000176,,,,
1.9.14,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),0.000159,,,,
1.9.14,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000156,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (transient coll),0.00041,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.2e-05,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.4e-05,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.3e-05,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (coll 0),4.5e-05,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.9e-05,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.7e-05,,,,
1.9.14,SM,vector ops,[coll []] (-conj coll 1),6.2e-05,,,,
1.9.14,SM,vector ops,[coll [1]] (-conj coll 2),6.3e-05,,,,
1.9.14,SM,vector ops,[coll [1 2]] (-conj coll 3),6.7e-05,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (seq coll),6.7e-05,,,,
1.9.14,SM,vector ops,[coll [1 2 3]] (-seq coll),4.3e-05,,,,
1.9.14,SM,vector ops,[coll (seq [1 2 3])] (first coll),4.8e-05,,,,
1.9.14,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.5e-05,,,,
1.9.14,SM,vector ops,[coll (seq [1 2 3])] (rest coll),4.8e-05,,,,
1.9.14,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.6e-05,,,,
1.9.14,SM,vector ops,[coll (seq [1 2 3])] (next coll),5e-05,,,,
1.9.14,SM,large vector ops,[] (reduce conj [] (range 40000)),7.9,,,,
1.9.14,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.9.14,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00111,,,,
1.9.14,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00043,,,,
1.9.14,JSC,identity,[x 1] (identity x),2.17e-06,,,,
1.9.14,JSC,symbol construction,[] (symbol (quote foo)),2.5e-05,,,,
1.9.14,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.17,,,,
1.9.14,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.11,,,,
1.9.14,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.04,,,,
1.9.14,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.06,,,,
1.9.14,JSC,instance?,[coll []] (instance? PersistentVector coll),2.5e-05,,,,
1.9.14,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.8e-05,,,,
1.9.14,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.7e-05,,,,
1.9.14,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6.3e-05,,,,
1.9.14,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.7e-05,,,,
1.9.14,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.3e-05,,,,
1.9.14,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.1e-05,,,,
1.9.14,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.6e-05,,,,
1.9.14,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",3.2e-05,,,,
1.9.14,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.6e-05,,,,
1.9.14,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.6e-05,,,,
1.9.14,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.7e-05,,,,
1.9.14,JSC,list ops,[coll (list 1 2 3)] (first coll),2.9e-05,,,,
1.9.14,JSC,list ops,[coll (list 1 2 3)] (-first coll),1.9e-05,,,,
1.9.14,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.7e-05,,,,
1.9.14,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.6e-05,,,,
1.9.14,JSC,list ops,[] (list),1.2e-05,,,,
1.9.14,JSC,list ops,[] (list 1 2 3),7.4e-05,,,,
1.9.14,JSC,vector ops,[] [],1.3e-05,,,,
1.9.14,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.4e-05,,,,
1.9.14,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),7.7e-05,,,,
1.9.14,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.7e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00029,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.7e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (coll 0),3.1e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.1e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.5e-05,,,,
1.9.14,JSC,vector ops,[coll []] (-conj coll 1),5.1e-05,,,,
1.9.14,JSC,vector ops,[coll [1]] (-conj coll 2),6.2e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.9e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (seq coll),3.4e-05,,,,
1.9.14,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.4e-05,,,,
1.9.14,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3.1e-05,,,,
1.9.14,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),3.2e-05,,,,
1.9.14,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.2e-05,,,,
1.9.14,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.5e-05,,,,
1.9.14,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.1e-05,,,,
1.9.14,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.3,,,,
1.9.14,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00032,,,,
1.9.14,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00054,,,,
1.9.14,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.8.51,V8,identity,[x 1] (identity x),1.21e-06,,,,
1.8.51,V8,symbol construction,[] (symbol (quote foo)),5.5e-05,,,,
1.8.51,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.23,,,,
1.8.51,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.23,,,,
1.8.51,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.11,,,,
1.8.51,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.08,,,,
1.8.51,V8,instance?,[coll []] (instance? PersistentVector coll),5.4e-05,,,,
1.8.51,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.2e-05,,,,
1.8.51,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.4e-05,,,,
1.8.51,V8,array & string ops,[coll (array 1 2 3)] (seq coll),7.2e-05,,,,
1.8.51,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000124,,,,
1.8.51,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.6e-05,,,,
1.8.51,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000145,,,,
1.8.51,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7.5e-05,,,,
1.8.51,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.2e-05,,,,
1.8.51,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.8e-05,,,,
1.8.51,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000102,,,,
1.8.51,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),6.2e-05,,,,
1.8.51,V8,list ops,[coll (list 1 2 3)] (first coll),6.4e-05,,,,
1.8.51,V8,list ops,[coll (list 1 2 3)] (-first coll),5.2e-05,,,,
1.8.51,V8,list ops,[coll (list 1 2 3)] (rest coll),5.5e-05,,,,
1.8.51,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.1e-05,,,,
1.8.51,V8,list ops,[] (list),4.5e-05,,,,
1.8.51,V8,list ops,[] (list 1 2 3),9.6e-05,,,,
1.8.51,V8,vector ops,[] [],4.7e-05,,,,
1.8.51,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.3e-05,,,,
1.8.51,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),8.2e-05,,,,
1.8.51,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.9e-05,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (transient coll),0.00025,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.2e-05,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6.2e-05,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (coll 0),5.7e-05,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.1e-05,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.8e-05,,,,
1.8.51,V8,vector ops,[coll []] (-conj coll 1),8.6e-05,,,,
1.8.51,V8,vector ops,[coll [1]] (-conj coll 2),8.2e-05,,,,
1.8.51,V8,vector ops,[coll [1 2]] (-conj coll 3),8.6e-05,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (seq coll),8.8e-05,,,,
1.8.51,V8,vector ops,[coll [1 2 3]] (-seq coll),6.7e-05,,,,
1.8.51,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.5e-05,,,,
1.8.51,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.4e-05,,,,
1.8.51,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.9e-05,,,,
1.8.51,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.7e-05,,,,
1.8.51,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.2e-05,,,,
1.8.51,V8,large vector ops,[] (reduce conj [] (range 40000)),6.9,,,,
1.8.51,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00026,,,,
1.8.51,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00067,,,,
1.8.51,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00024,,,,
1.8.51,SM,identity,[x 1] (identity x),3.88e-06,,,,
1.8.51,SM,symbol construction,[] (symbol (quote foo)),4.2e-05,,,,
1.8.51,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.08,,,,
1.8.51,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.19,,,,
1.8.51,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.8.51,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.11,,,,
1.8.51,SM,instance?,[coll []] (instance? PersistentVector coll),2.8e-05,,,,
1.8.51,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4e-05,,,,
1.8.51,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.7e-05,,,,
1.8.51,SM,array & string ops,[coll (array 1 2 3)] (seq coll),6.1e-05,,,,
1.8.51,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000388,,,,
1.8.51,SM,array & string ops,[coll (array 1 2 3)] (first coll),5.9e-05,,,,
1.8.51,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001623,,,,
1.8.51,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.8e-05,,,,
1.8.51,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000351,,,,
1.8.51,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.3e-05,,,,
1.8.51,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000238,,,,
1.8.51,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),2.9e-05,,,,
1.8.51,SM,list ops,[coll (list 1 2 3)] (first coll),4.8e-05,,,,
1.8.51,SM,list ops,[coll (list 1 2 3)] (-first coll),3.3e-05,,,,
1.8.51,SM,list ops,[coll (list 1 2 3)] (rest coll),3.3e-05,,,,
1.8.51,SM,list ops,[coll (list 1 2 3)] (-rest coll),3.2e-05,,,,
1.8.51,SM,list ops,[] (list),1.8e-05,,,,
1.8.51,SM,list ops,[] (list 1 2 3),9.7e-05,,,,
1.8.51,SM,vector ops,[] [],1.5e-05,,,,
1.8.51,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000184,,,,
1.8.51,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),0.000164,,,,
1.8.51,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000163,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (transient coll),0.0004,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.3e-05,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.3e-05,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.2e-05,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (coll 0),4.3e-05,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.9e-05,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.9e-05,,,,
1.8.51,SM,vector ops,[coll []] (-conj coll 1),6.1e-05,,,,
1.8.51,SM,vector ops,[coll [1]] (-conj coll 2),6.2e-05,,,,
1.8.51,SM,vector ops,[coll [1 2]] (-conj coll 3),6.7e-05,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (seq coll),6.3e-05,,,,
1.8.51,SM,vector ops,[coll [1 2 3]] (-seq coll),3.9e-05,,,,
1.8.51,SM,vector ops,[coll (seq [1 2 3])] (first coll),5e-05,,,,
1.8.51,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.7e-05,,,,
1.8.51,SM,vector ops,[coll (seq [1 2 3])] (rest coll),4.6e-05,,,,
1.8.51,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.3e-05,,,,
1.8.51,SM,vector ops,[coll (seq [1 2 3])] (next coll),4.6e-05,,,,
1.8.51,SM,large vector ops,[] (reduce conj [] (range 40000)),8.2,,,,
1.8.51,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.8.51,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00112,,,,
1.8.51,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00041,,,,
1.8.51,JSC,identity,[x 1] (identity x),2.16e-06,,,,
1.8.51,JSC,symbol construction,[] (symbol (quote foo)),2.2e-05,,,,
1.8.51,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.17,,,,
1.8.51,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.15,,,,
1.8.51,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.05,,,,
1.8.51,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.06,,,,
1.8.51,JSC,instance?,[coll []] (instance? PersistentVector coll),2.5e-05,,,,
1.8.51,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.9e-05,,,,
1.8.51,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.5e-05,,,,
1.8.51,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6.3e-05,,,,
1.8.51,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.9e-05,,,,
1.8.51,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.3e-05,,,,
1.8.51,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.1e-05,,,,
1.8.51,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.5e-05,,,,
1.8.51,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.8e-05,,,,
1.8.51,JSC,cloning & specify,[coll [1 2 3]] (clone coll),5.2e-05,,,,
1.8.51,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.8e-05,,,,
1.8.51,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.7e-05,,,,
1.8.51,JSC,list ops,[coll (list 1 2 3)] (first coll),2.3e-05,,,,
1.8.51,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.2e-05,,,,
1.8.51,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.8e-05,,,,
1.8.51,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.8.51,JSC,list ops,[] (list),1.1e-05,,,,
1.8.51,JSC,list ops,[] (list 1 2 3),7.3e-05,,,,
1.8.51,JSC,vector ops,[] [],1.3e-05,,,,
1.8.51,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8e-05,,,,
1.8.51,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),7.1e-05,,,,
1.8.51,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.6e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00027,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.8e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.4e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (coll 0),3e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.3e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.6e-05,,,,
1.8.51,JSC,vector ops,[coll []] (-conj coll 1),5.5e-05,,,,
1.8.51,JSC,vector ops,[coll [1]] (-conj coll 2),5.2e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.6e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (seq coll),3.4e-05,,,,
1.8.51,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.2e-05,,,,
1.8.51,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3e-05,,,,
1.8.51,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.7e-05,,,,
1.8.51,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.3e-05,,,,
1.8.51,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.4e-05,,,,
1.8.51,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.1e-05,,,,
1.8.51,JSC,large vector ops,[] (reduce conj [] (range 40000)),4.9,,,,
1.8.51,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00034,,,,
1.8.51,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00057,,,,
1.8.51,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.8.40,V8,identity,[x 1] (identity x),1.22e-06,,,,
1.8.40,V8,symbol construction,[] (symbol (quote foo)),5.7e-05,,,,
1.8.40,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.26,,,,
1.8.40,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.19,,,,
1.8.40,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.11,,,,
1.8.40,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.09,,,,
1.8.40,V8,instance?,[coll []] (instance? PersistentVector coll),5.4e-05,,,,
1.8.40,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.2e-05,,,,
1.8.40,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.6e-05,,,,
1.8.40,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.9e-05,,,,
1.8.40,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000124,,,,
1.8.40,V8,array & string ops,[coll (array 1 2 3)] (first coll),8e-05,,,,
1.8.40,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000147,,,,
1.8.40,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7.1e-05,,,,
1.8.40,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.1e-05,,,,
1.8.40,V8,cloning & specify,[coll [1 2 3]] (clone coll),7.1e-05,,,,
1.8.40,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000102,,,,
1.8.40,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),5.8e-05,,,,
1.8.40,V8,list ops,[coll (list 1 2 3)] (first coll),6.8e-05,,,,
1.8.40,V8,list ops,[coll (list 1 2 3)] (-first coll),5.1e-05,,,,
1.8.40,V8,list ops,[coll (list 1 2 3)] (rest coll),5.1e-05,,,,
1.8.40,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.1e-05,,,,
1.8.40,V8,list ops,[] (list),4.4e-05,,,,
1.8.40,V8,list ops,[] (list 1 2 3),9.2e-05,,,,
1.8.40,V8,vector ops,[] [],4.5e-05,,,,
1.8.40,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.0001,,,,
1.8.40,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),8.1e-05,,,,
1.8.40,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.6e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (transient coll),0.00021,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.2e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (coll 0),5.7e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.1e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.7e-05,,,,
1.8.40,V8,vector ops,[coll []] (-conj coll 1),8.2e-05,,,,
1.8.40,V8,vector ops,[coll [1]] (-conj coll 2),8.1e-05,,,,
1.8.40,V8,vector ops,[coll [1 2]] (-conj coll 3),8.4e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (seq coll),8.5e-05,,,,
1.8.40,V8,vector ops,[coll [1 2 3]] (-seq coll),6.7e-05,,,,
1.8.40,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.1e-05,,,,
1.8.40,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.4e-05,,,,
1.8.40,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.8e-05,,,,
1.8.40,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.7e-05,,,,
1.8.40,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.3e-05,,,,
1.8.40,V8,large vector ops,[] (reduce conj [] (range 40000)),6.5,,,,
1.8.40,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00028,,,,
1.8.40,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00066,,,,
1.8.40,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00023,,,,
1.8.40,SM,identity,[x 1] (identity x),4.02e-06,,,,
1.8.40,SM,symbol construction,[] (symbol (quote foo)),4.2e-05,,,,
1.8.40,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.09,,,,
1.8.40,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.17,,,,
1.8.40,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.03,,,,
1.8.40,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.13,,,,
1.8.40,SM,instance?,[coll []] (instance? PersistentVector coll),2.8e-05,,,,
1.8.40,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.4e-05,,,,
1.8.40,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.8e-05,,,,
1.8.40,SM,array & string ops,[coll (array 1 2 3)] (seq coll),6.1e-05,,,,
1.8.40,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000377,,,,
1.8.40,SM,array & string ops,[coll (array 1 2 3)] (first coll),6.1e-05,,,,
1.8.40,SM,array & string ops,"[coll ""foobar""] (first coll)",0.00164,,,,
1.8.40,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.6e-05,,,,
1.8.40,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000365,,,,
1.8.40,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.1e-05,,,,
1.8.40,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000226,,,,
1.8.40,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),2.9e-05,,,,
1.8.40,SM,list ops,[coll (list 1 2 3)] (first coll),4.4e-05,,,,
1.8.40,SM,list ops,[coll (list 1 2 3)] (-first coll),3.1e-05,,,,
1.8.40,SM,list ops,[coll (list 1 2 3)] (rest coll),3.3e-05,,,,
1.8.40,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.8.40,SM,list ops,[] (list),1.9e-05,,,,
1.8.40,SM,list ops,[] (list 1 2 3),9.6e-05,,,,
1.8.40,SM,vector ops,[] [],1.5e-05,,,,
1.8.40,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.00018,,,,
1.8.40,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),0.00016,,,,
1.8.40,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000162,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (transient coll),0.0004,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.3e-05,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.4e-05,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.2e-05,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (coll 0),4.3e-05,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.9e-05,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.6e-05,,,,
1.8.40,SM,vector ops,[coll []] (-conj coll 1),6.3e-05,,,,
1.8.40,SM,vector ops,[coll [1]] (-conj coll 2),6.3e-05,,,,
1.8.40,SM,vector ops,[coll [1 2]] (-conj coll 3),0.000143,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (seq coll),6.7e-05,,,,
1.8.40,SM,vector ops,[coll [1 2 3]] (-seq coll),3.9e-05,,,,
1.8.40,SM,vector ops,[coll (seq [1 2 3])] (first coll),4.9e-05,,,,
1.8.40,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.8.40,SM,vector ops,[coll (seq [1 2 3])] (rest coll),4.9e-05,,,,
1.8.40,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.7e-05,,,,
1.8.40,SM,vector ops,[coll (seq [1 2 3])] (next coll),4.6e-05,,,,
1.8.40,SM,large vector ops,[] (reduce conj [] (range 40000)),8.0,,,,
1.8.40,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00038,,,,
1.8.40,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00114,,,,
1.8.40,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00043,,,,
1.8.40,JSC,identity,[x 1] (identity x),2.23e-06,,,,
1.8.40,JSC,symbol construction,[] (symbol (quote foo)),2.4e-05,,,,
1.8.40,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.17,,,,
1.8.40,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.12,,,,
1.8.40,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.04,,,,
1.8.40,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.05,,,,
1.8.40,JSC,instance?,[coll []] (instance? PersistentVector coll),2.3e-05,,,,
1.8.40,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.8e-05,,,,
1.8.40,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.7e-05,,,,
1.8.40,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),5.8e-05,,,,
1.8.40,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.9e-05,,,,
1.8.40,JSC,array & string ops,[coll (array 1 2 3)] (first coll),6.1e-05,,,,
1.8.40,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.1e-05,,,,
1.8.40,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.5e-05,,,,
1.8.40,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.9e-05,,,,
1.8.40,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.8e-05,,,,
1.8.40,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.6e-05,,,,
1.8.40,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.9e-05,,,,
1.8.40,JSC,list ops,[coll (list 1 2 3)] (first coll),2.3e-05,,,,
1.8.40,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.5e-05,,,,
1.8.40,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.8e-05,,,,
1.8.40,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.6e-05,,,,
1.8.40,JSC,list ops,[] (list),1.2e-05,,,,
1.8.40,JSC,list ops,[] (list 1 2 3),7.3e-05,,,,
1.8.40,JSC,vector ops,[] [],1.4e-05,,,,
1.8.40,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.4e-05,,,,
1.8.40,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),7.2e-05,,,,
1.8.40,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),8.1e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00029,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.6e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.8e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (coll 0),3.1e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.9e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.5e-05,,,,
1.8.40,JSC,vector ops,[coll []] (-conj coll 1),5.5e-05,,,,
1.8.40,JSC,vector ops,[coll [1]] (-conj coll 2),5.6e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.5e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (seq coll),3.7e-05,,,,
1.8.40,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.2e-05,,,,
1.8.40,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3.1e-05,,,,
1.8.40,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.9e-05,,,,
1.8.40,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.3e-05,,,,
1.8.40,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.4e-05,,,,
1.8.40,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.1e-05,,,,
1.8.40,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.3,,,,
1.8.40,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00034,,,,
1.8.40,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00054,,,,
1.8.40,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.8.34,V8,identity,[x 1] (identity x),1.25e-06,,,,
1.8.34,V8,symbol construction,[] (symbol (quote foo)),5.4e-05,,,,
1.8.34,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.21,,,,
1.8.34,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.19,,,,
1.8.34,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.11,,,,
1.8.34,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.1,,,,
1.8.34,V8,instance?,[coll []] (instance? PersistentVector coll),5.2e-05,,,,
1.8.34,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.4e-05,,,,
1.8.34,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.2e-05,,,,
1.8.34,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.9e-05,,,,
1.8.34,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000128,,,,
1.8.34,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.5e-05,,,,
1.8.34,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000147,,,,
1.8.34,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7e-05,,,,
1.8.34,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",5.9e-05,,,,
1.8.34,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.5e-05,,,,
1.8.34,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000103,,,,
1.8.34,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),6.2e-05,,,,
1.8.34,V8,list ops,[coll (list 1 2 3)] (first coll),6.5e-05,,,,
1.8.34,V8,list ops,[coll (list 1 2 3)] (-first coll),5.6e-05,,,,
1.8.34,V8,list ops,[coll (list 1 2 3)] (rest coll),5.1e-05,,,,
1.8.34,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.2e-05,,,,
1.8.34,V8,list ops,[] (list),4.4e-05,,,,
1.8.34,V8,list ops,[] (list 1 2 3),9.6e-05,,,,
1.8.34,V8,vector ops,[] [],4.9e-05,,,,
1.8.34,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.2e-05,,,,
1.8.34,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),8.2e-05,,,,
1.8.34,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.9e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (transient coll),0.00022,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.4e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (coll 0),5.7e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.2e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.8e-05,,,,
1.8.34,V8,vector ops,[coll []] (-conj coll 1),8.3e-05,,,,
1.8.34,V8,vector ops,[coll [1]] (-conj coll 2),8.3e-05,,,,
1.8.34,V8,vector ops,[coll [1 2]] (-conj coll 3),8.5e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (seq coll),8.4e-05,,,,
1.8.34,V8,vector ops,[coll [1 2 3]] (-seq coll),6.8e-05,,,,
1.8.34,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.1e-05,,,,
1.8.34,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.3e-05,,,,
1.8.34,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.9e-05,,,,
1.8.34,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.8e-05,,,,
1.8.34,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.3e-05,,,,
1.8.34,V8,large vector ops,[] (reduce conj [] (range 40000)),6.7,,,,
1.8.34,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00028,,,,
1.8.34,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00071,,,,
1.8.34,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00024,,,,
1.8.34,SM,identity,[x 1] (identity x),3.98e-06,,,,
1.8.34,SM,symbol construction,[] (symbol (quote foo)),4e-05,,,,
1.8.34,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.05,,,,
1.8.34,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.21,,,,
1.8.34,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.8.34,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.11,,,,
1.8.34,SM,instance?,[coll []] (instance? PersistentVector coll),2.4e-05,,,,
1.8.34,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.4e-05,,,,
1.8.34,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.8e-05,,,,
1.8.34,SM,array & string ops,[coll (array 1 2 3)] (seq coll),6.1e-05,,,,
1.8.34,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000394,,,,
1.8.34,SM,array & string ops,[coll (array 1 2 3)] (first coll),6.2e-05,,,,
1.8.34,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001608,,,,
1.8.34,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.5e-05,,,,
1.8.34,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000374,,,,
1.8.34,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.2e-05,,,,
1.8.34,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000228,,,,
1.8.34,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3e-05,,,,
1.8.34,SM,list ops,[coll (list 1 2 3)] (first coll),4.7e-05,,,,
1.8.34,SM,list ops,[coll (list 1 2 3)] (-first coll),3e-05,,,,
1.8.34,SM,list ops,[coll (list 1 2 3)] (rest coll),3.4e-05,,,,
1.8.34,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.8.34,SM,list ops,[] (list),1.5e-05,,,,
1.8.34,SM,list ops,[] (list 1 2 3),0.0001,,,,
1.8.34,SM,vector ops,[] [],1.4e-05,,,,
1.8.34,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000176,,,,
1.8.34,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),0.000157,,,,
1.8.34,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000157,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (transient coll),0.00043,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.2e-05,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.6e-05,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.5e-05,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (coll 0),4.3e-05,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.9e-05,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.8e-05,,,,
1.8.34,SM,vector ops,[coll []] (-conj coll 1),6.1e-05,,,,
1.8.34,SM,vector ops,[coll [1]] (-conj coll 2),6.2e-05,,,,
1.8.34,SM,vector ops,[coll [1 2]] (-conj coll 3),6.7e-05,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (seq coll),6.7e-05,,,,
1.8.34,SM,vector ops,[coll [1 2 3]] (-seq coll),4e-05,,,,
1.8.34,SM,vector ops,[coll (seq [1 2 3])] (first coll),4.9e-05,,,,
1.8.34,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.8e-05,,,,
1.8.34,SM,vector ops,[coll (seq [1 2 3])] (rest coll),4.9e-05,,,,
1.8.34,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.6e-05,,,,
1.8.34,SM,vector ops,[coll (seq [1 2 3])] (next coll),4.8e-05,,,,
1.8.34,SM,large vector ops,[] (reduce conj [] (range 40000)),8.0,,,,
1.8.34,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00036,,,,
1.8.34,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00113,,,,
1.8.34,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00043,,,,
1.8.34,JSC,identity,[x 1] (identity x),2.18e-06,,,,
1.8.34,JSC,symbol construction,[] (symbol (quote foo)),2.2e-05,,,,
1.8.34,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.18,,,,
1.8.34,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.1,,,,
1.8.34,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.05,,,,
1.8.34,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.06,,,,
1.8.34,JSC,instance?,[coll []] (instance? PersistentVector coll),2.4e-05,,,,
1.8.34,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.7e-05,,,,
1.8.34,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.7e-05,,,,
1.8.34,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6.4e-05,,,,
1.8.34,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.8e-05,,,,
1.8.34,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.3e-05,,,,
1.8.34,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.4e-05,,,,
1.8.34,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.5e-05,,,,
1.8.34,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.8e-05,,,,
1.8.34,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.8e-05,,,,
1.8.34,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.7e-05,,,,
1.8.34,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.7e-05,,,,
1.8.34,JSC,list ops,[coll (list 1 2 3)] (first coll),2.7e-05,,,,
1.8.34,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.2e-05,,,,
1.8.34,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.7e-05,,,,
1.8.34,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.8.34,JSC,list ops,[] (list),1.1e-05,,,,
1.8.34,JSC,list ops,[] (list 1 2 3),7.6e-05,,,,
1.8.34,JSC,vector ops,[] [],1.4e-05,,,,
1.8.34,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.2e-05,,,,
1.8.34,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),7.1e-05,,,,
1.8.34,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.8e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00028,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.4e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.4e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (coll 0),3e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.1e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.2e-05,,,,
1.8.34,JSC,vector ops,[coll []] (-conj coll 1),5.1e-05,,,,
1.8.34,JSC,vector ops,[coll [1]] (-conj coll 2),5.8e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.4e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (seq coll),4e-05,,,,
1.8.34,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.5e-05,,,,
1.8.34,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3.1e-05,,,,
1.8.34,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.8.34,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.1e-05,,,,
1.8.34,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.5e-05,,,,
1.8.34,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.1e-05,,,,
1.8.34,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.0,,,,
1.8.34,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.8.34,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00054,,,,
1.8.34,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.7.228,V8,identity,[x 1] (identity x),1.24e-06,,,,
1.7.228,V8,symbol construction,[] (symbol (quote foo)),5.3e-05,,,,
1.7.228,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.23,,,,
1.7.228,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.2,,,,
1.7.228,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.1,,,,
1.7.228,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.08,,,,
1.7.228,V8,instance?,[coll []] (instance? PersistentVector coll),5.2e-05,,,,
1.7.228,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.6e-05,,,,
1.7.228,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.7.228,V8,array & string ops,[coll (array 1 2 3)] (seq coll),7.1e-05,,,,
1.7.228,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000125,,,,
1.7.228,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.7e-05,,,,
1.7.228,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000154,,,,
1.7.228,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),5.2e-05,,,,
1.7.228,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.1e-05,,,,
1.7.228,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.6e-05,,,,
1.7.228,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000104,,,,
1.7.228,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),5.9e-05,,,,
1.7.228,V8,list ops,[coll (list 1 2 3)] (first coll),6.4e-05,,,,
1.7.228,V8,list ops,[coll (list 1 2 3)] (-first coll),5.2e-05,,,,
1.7.228,V8,list ops,[coll (list 1 2 3)] (rest coll),5e-05,,,,
1.7.228,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.5e-05,,,,
1.7.228,V8,list ops,[] (list),4.4e-05,,,,
1.7.228,V8,list ops,[] (list 1 2 3),9.3e-05,,,,
1.7.228,V8,vector ops,[] [],5.1e-05,,,,
1.7.228,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.5e-05,,,,
1.7.228,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),8.2e-05,,,,
1.7.228,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.8e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (transient coll),0.00022,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.2e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (coll 0),5.7e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.2e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.9e-05,,,,
1.7.228,V8,vector ops,[coll []] (-conj coll 1),8.4e-05,,,,
1.7.228,V8,vector ops,[coll [1]] (-conj coll 2),8.3e-05,,,,
1.7.228,V8,vector ops,[coll [1 2]] (-conj coll 3),8.7e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (seq coll),8.5e-05,,,,
1.7.228,V8,vector ops,[coll [1 2 3]] (-seq coll),6.8e-05,,,,
1.7.228,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.7e-05,,,,
1.7.228,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.5e-05,,,,
1.7.228,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.9e-05,,,,
1.7.228,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.9e-05,,,,
1.7.228,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.4e-05,,,,
1.7.228,V8,large vector ops,[] (reduce conj [] (range 40000)),6.7,,,,
1.7.228,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00031,,,,
1.7.228,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00067,,,,
1.7.228,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00023,,,,
1.7.228,SM,identity,[x 1] (identity x),3.94e-06,,,,
1.7.228,SM,symbol construction,[] (symbol (quote foo)),4.3e-05,,,,
1.7.228,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.07,,,,
1.7.228,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.16,,,,
1.7.228,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.7.228,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.12,,,,
1.7.228,SM,instance?,[coll []] (instance? PersistentVector coll),2.6e-05,,,,
1.7.228,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.3e-05,,,,
1.7.228,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.8e-05,,,,
1.7.228,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.9e-05,,,,
1.7.228,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000446,,,,
1.7.228,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.000132,,,,
1.7.228,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001998,,,,
1.7.228,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.3e-05,,,,
1.7.228,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.00036,,,,
1.7.228,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.1e-05,,,,
1.7.228,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.00023,,,,
1.7.228,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3e-05,,,,
1.7.228,SM,list ops,[coll (list 1 2 3)] (first coll),4.8e-05,,,,
1.7.228,SM,list ops,[coll (list 1 2 3)] (-first coll),3e-05,,,,
1.7.228,SM,list ops,[coll (list 1 2 3)] (rest coll),3.2e-05,,,,
1.7.228,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.7.228,SM,list ops,[] (list),1.9e-05,,,,
1.7.228,SM,list ops,[] (list 1 2 3),0.000101,,,,
1.7.228,SM,vector ops,[] [],1.8e-05,,,,
1.7.228,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000179,,,,
1.7.228,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),0.00016,,,,
1.7.228,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000155,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (transient coll),0.00043,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.4e-05,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.4e-05,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.4e-05,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (coll 0),4.2e-05,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.9e-05,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.7e-05,,,,
1.7.228,SM,vector ops,[coll []] (-conj coll 1),6.2e-05,,,,
1.7.228,SM,vector ops,[coll [1]] (-conj coll 2),6.1e-05,,,,
1.7.228,SM,vector ops,[coll [1 2]] (-conj coll 3),6.8e-05,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (seq coll),7e-05,,,,
1.7.228,SM,vector ops,[coll [1 2 3]] (-seq coll),4.7e-05,,,,
1.7.228,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.5e-05,,,,
1.7.228,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.7.228,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.3e-05,,,,
1.7.228,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),5e-05,,,,
1.7.228,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.000128,,,,
1.7.228,SM,large vector ops,[] (reduce conj [] (range 40000)),8.0,,,,
1.7.228,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00036,,,,
1.7.228,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00112,,,,
1.7.228,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00043,,,,
1.7.228,JSC,identity,[x 1] (identity x),2.19e-06,,,,
1.7.228,JSC,symbol construction,[] (symbol (quote foo)),2.1e-05,,,,
1.7.228,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.17,,,,
1.7.228,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.15,,,,
1.7.228,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.04,,,,
1.7.228,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.05,,,,
1.7.228,JSC,instance?,[coll []] (instance? PersistentVector coll),2.6e-05,,,,
1.7.228,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.7e-05,,,,
1.7.228,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.5e-05,,,,
1.7.228,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),5.9e-05,,,,
1.7.228,JSC,array & string ops,"[coll ""foobar""] (seq coll)",4.2e-05,,,,
1.7.228,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.1e-05,,,,
1.7.228,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.1e-05,,,,
1.7.228,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.5e-05,,,,
1.7.228,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.4e-05,,,,
1.7.228,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.8e-05,,,,
1.7.228,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.4e-05,,,,
1.7.228,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.6e-05,,,,
1.7.228,JSC,list ops,[coll (list 1 2 3)] (first coll),2.7e-05,,,,
1.7.228,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.3e-05,,,,
1.7.228,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.7e-05,,,,
1.7.228,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.7.228,JSC,list ops,[] (list),1.1e-05,,,,
1.7.228,JSC,list ops,[] (list 1 2 3),8.2e-05,,,,
1.7.228,JSC,vector ops,[] [],1.2e-05,,,,
1.7.228,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8e-05,,,,
1.7.228,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),7.7e-05,,,,
1.7.228,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.6e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00027,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.5e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (coll 0),3.7e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.1e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.5e-05,,,,
1.7.228,JSC,vector ops,[coll []] (-conj coll 1),5.5e-05,,,,
1.7.228,JSC,vector ops,[coll [1]] (-conj coll 2),5.8e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.3e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (seq coll),3.5e-05,,,,
1.7.228,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.2e-05,,,,
1.7.228,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3e-05,,,,
1.7.228,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.7.228,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3e-05,,,,
1.7.228,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.3e-05,,,,
1.7.228,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.4e-05,,,,
1.7.228,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.5,,,,
1.7.228,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00034,,,,
1.7.228,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00053,,,,
1.7.228,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.7.189,V8,identity,[x 1] (identity x),1.24e-06,,,,
1.7.189,V8,symbol construction,[] (symbol (quote foo)),5.7e-05,,,,
1.7.189,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.22,,,,
1.7.189,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.23,,,,
1.7.189,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.11,,,,
1.7.189,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.09,,,,
1.7.189,V8,instance?,[coll []] (instance? PersistentVector coll),5.4e-05,,,,
1.7.189,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4e-05,,,,
1.7.189,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.5e-05,,,,
1.7.189,V8,array & string ops,[coll (array 1 2 3)] (seq coll),7.3e-05,,,,
1.7.189,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000123,,,,
1.7.189,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.5e-05,,,,
1.7.189,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000149,,,,
1.7.189,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),5.1e-05,,,,
1.7.189,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6e-05,,,,
1.7.189,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.6e-05,,,,
1.7.189,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000104,,,,
1.7.189,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),6.2e-05,,,,
1.7.189,V8,list ops,[coll (list 1 2 3)] (first coll),6.5e-05,,,,
1.7.189,V8,list ops,[coll (list 1 2 3)] (-first coll),5.1e-05,,,,
1.7.189,V8,list ops,[coll (list 1 2 3)] (rest coll),5e-05,,,,
1.7.189,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.1e-05,,,,
1.7.189,V8,list ops,[] (list),4.4e-05,,,,
1.7.189,V8,list ops,[] (list 1 2 3),9.6e-05,,,,
1.7.189,V8,vector ops,[] [],4.9e-05,,,,
1.7.189,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.4e-05,,,,
1.7.189,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),8e-05,,,,
1.7.189,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.6e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (transient coll),0.00022,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.2e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.8e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.8e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (coll 0),5.7e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.3e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.8e-05,,,,
1.7.189,V8,vector ops,[coll []] (-conj coll 1),8.6e-05,,,,
1.7.189,V8,vector ops,[coll [1]] (-conj coll 2),8.3e-05,,,,
1.7.189,V8,vector ops,[coll [1 2]] (-conj coll 3),8.5e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (seq coll),8.5e-05,,,,
1.7.189,V8,vector ops,[coll [1 2 3]] (-seq coll),6.6e-05,,,,
1.7.189,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.2e-05,,,,
1.7.189,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.4e-05,,,,
1.7.189,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.8e-05,,,,
1.7.189,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.7e-05,,,,
1.7.189,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.2e-05,,,,
1.7.189,V8,large vector ops,[] (reduce conj [] (range 40000)),6.5,,,,
1.7.189,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00028,,,,
1.7.189,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00066,,,,
1.7.189,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00023,,,,
1.7.189,SM,identity,[x 1] (identity x),3.97e-06,,,,
1.7.189,SM,symbol construction,[] (symbol (quote foo)),4.3e-05,,,,
1.7.189,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.06,,,,
1.7.189,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.15,,,,
1.7.189,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.7.189,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.13,,,,
1.7.189,SM,instance?,[coll []] (instance? PersistentVector coll),2.7e-05,,,,
1.7.189,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4e-05,,,,
1.7.189,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.8e-05,,,,
1.7.189,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.6e-05,,,,
1.7.189,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000451,,,,
1.7.189,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.000129,,,,
1.7.189,SM,array & string ops,"[coll ""foobar""] (first coll)",0.002058,,,,
1.7.189,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.3e-05,,,,
1.7.189,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000367,,,,
1.7.189,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.1e-05,,,,
1.7.189,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000235,,,,
1.7.189,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3e-05,,,,
1.7.189,SM,list ops,[coll (list 1 2 3)] (first coll),4.5e-05,,,,
1.7.189,SM,list ops,[coll (list 1 2 3)] (-first coll),3e-05,,,,
1.7.189,SM,list ops,[coll (list 1 2 3)] (rest coll),3.4e-05,,,,
1.7.189,SM,list ops,[coll (list 1 2 3)] (-rest coll),3.3e-05,,,,
1.7.189,SM,list ops,[] (list),1.6e-05,,,,
1.7.189,SM,list ops,[] (list 1 2 3),9.6e-05,,,,
1.7.189,SM,vector ops,[] [],1.4e-05,,,,
1.7.189,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000183,,,,
1.7.189,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),0.000166,,,,
1.7.189,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000166,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (transient coll),0.0004,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.6e-05,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.5e-05,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.6e-05,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (coll 0),4.4e-05,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (conj coll 4),7.1e-05,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (-conj coll 4),7.2e-05,,,,
1.7.189,SM,vector ops,[coll []] (-conj coll 1),6.2e-05,,,,
1.7.189,SM,vector ops,[coll [1]] (-conj coll 2),6.6e-05,,,,
1.7.189,SM,vector ops,[coll [1 2]] (-conj coll 3),6.7e-05,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (seq coll),6.9e-05,,,,
1.7.189,SM,vector ops,[coll [1 2 3]] (-seq coll),5.1e-05,,,,
1.7.189,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.7e-05,,,,
1.7.189,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.7e-05,,,,
1.7.189,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.8e-05,,,,
1.7.189,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.9e-05,,,,
1.7.189,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.000126,,,,
1.7.189,SM,large vector ops,[] (reduce conj [] (range 40000)),8.1,,,,
1.7.189,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.7.189,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00112,,,,
1.7.189,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00043,,,,
1.7.189,JSC,identity,[x 1] (identity x),2.26e-06,,,,
1.7.189,JSC,symbol construction,[] (symbol (quote foo)),2.2e-05,,,,
1.7.189,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.19,,,,
1.7.189,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.12,,,,
1.7.189,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.04,,,,
1.7.189,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.07,,,,
1.7.189,JSC,instance?,[coll []] (instance? PersistentVector coll),2.6e-05,,,,
1.7.189,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.7e-05,,,,
1.7.189,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.8e-05,,,,
1.7.189,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6e-05,,,,
1.7.189,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.8e-05,,,,
1.7.189,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.3e-05,,,,
1.7.189,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.1e-05,,,,
1.7.189,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.4e-05,,,,
1.7.189,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.3e-05,,,,
1.7.189,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.7e-05,,,,
1.7.189,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.8e-05,,,,
1.7.189,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.9e-05,,,,
1.7.189,JSC,list ops,[coll (list 1 2 3)] (first coll),2.7e-05,,,,
1.7.189,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.3e-05,,,,
1.7.189,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.8e-05,,,,
1.7.189,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.7.189,JSC,list ops,[] (list),1.1e-05,,,,
1.7.189,JSC,list ops,[] (list 1 2 3),8.5e-05,,,,
1.7.189,JSC,vector ops,[] [],1.2e-05,,,,
1.7.189,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.2e-05,,,,
1.7.189,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),7.2e-05,,,,
1.7.189,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.2e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00028,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.5e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.5e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (coll 0),3.1e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.3e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.3e-05,,,,
1.7.189,JSC,vector ops,[coll []] (-conj coll 1),5.4e-05,,,,
1.7.189,JSC,vector ops,[coll [1]] (-conj coll 2),5.9e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.6e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (seq coll),3.7e-05,,,,
1.7.189,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.5e-05,,,,
1.7.189,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3.1e-05,,,,
1.7.189,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.7.189,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3e-05,,,,
1.7.189,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.1e-05,,,,
1.7.189,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.1e-05,,,,
1.7.189,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.0,,,,
1.7.189,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00032,,,,
1.7.189,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00056,,,,
1.7.189,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00023,,,,
1.7.170,V8,identity,[x 1] (identity x),1.21e-06,,,,
1.7.170,V8,symbol construction,[] (symbol (quote foo)),5.3e-05,,,,
1.7.170,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.37,,,,
1.7.170,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.3,,,,
1.7.170,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.19,,,,
1.7.170,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.19,,,,
1.7.170,V8,instance?,[coll []] (instance? PersistentVector coll),5.2e-05,,,,
1.7.170,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.2e-05,,,,
1.7.170,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.3e-05,,,,
1.7.170,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.6e-05,,,,
1.7.170,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000132,,,,
1.7.170,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.4e-05,,,,
1.7.170,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000146,,,,
1.7.170,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7.1e-05,,,,
1.7.170,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6e-05,,,,
1.7.170,V8,cloning & specify,[coll [1 2 3]] (clone coll),7.3e-05,,,,
1.7.170,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000103,,,,
1.7.170,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),5.8e-05,,,,
1.7.170,V8,list ops,[coll (list 1 2 3)] (first coll),6.2e-05,,,,
1.7.170,V8,list ops,[coll (list 1 2 3)] (-first coll),5.2e-05,,,,
1.7.170,V8,list ops,[coll (list 1 2 3)] (rest coll),5.6e-05,,,,
1.7.170,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.2e-05,,,,
1.7.170,V8,list ops,[] (list),4.4e-05,,,,
1.7.170,V8,list ops,[] (list 1 2 3),9.3e-05,,,,
1.7.170,V8,vector ops,[] [],4.8e-05,,,,
1.7.170,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.7e-05,,,,
1.7.170,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),8.2e-05,,,,
1.7.170,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.9e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (transient coll),0.00022,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.1e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (coll 0),5.8e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.3e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (-conj coll 4),9.2e-05,,,,
1.7.170,V8,vector ops,[coll []] (-conj coll 1),8.4e-05,,,,
1.7.170,V8,vector ops,[coll [1]] (-conj coll 2),8.3e-05,,,,
1.7.170,V8,vector ops,[coll [1 2]] (-conj coll 3),8.6e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (seq coll),8.4e-05,,,,
1.7.170,V8,vector ops,[coll [1 2 3]] (-seq coll),6.8e-05,,,,
1.7.170,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.2e-05,,,,
1.7.170,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.9e-05,,,,
1.7.170,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.9e-05,,,,
1.7.170,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.8e-05,,,,
1.7.170,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.3e-05,,,,
1.7.170,V8,large vector ops,[] (reduce conj [] (range 40000)),7.2,,,,
1.7.170,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00028,,,,
1.7.170,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00067,,,,
1.7.170,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00024,,,,
1.7.170,SM,identity,[x 1] (identity x),3.92e-06,,,,
1.7.170,SM,symbol construction,[] (symbol (quote foo)),4.1e-05,,,,
1.7.170,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.08,,,,
1.7.170,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.18,,,,
1.7.170,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.7.170,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.13,,,,
1.7.170,SM,instance?,[coll []] (instance? PersistentVector coll),2.7e-05,,,,
1.7.170,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.1e-05,,,,
1.7.170,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.8e-05,,,,
1.7.170,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.7e-05,,,,
1.7.170,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000467,,,,
1.7.170,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.000135,,,,
1.7.170,SM,array & string ops,"[coll ""foobar""] (first coll)",0.00193,,,,
1.7.170,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.5e-05,,,,
1.7.170,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.00035,,,,
1.7.170,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.5e-05,,,,
1.7.170,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000232,,,,
1.7.170,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3.4e-05,,,,
1.7.170,SM,list ops,[coll (list 1 2 3)] (first coll),4.5e-05,,,,
1.7.170,SM,list ops,[coll (list 1 2 3)] (-first coll),3e-05,,,,
1.7.170,SM,list ops,[coll (list 1 2 3)] (rest coll),3.2e-05,,,,
1.7.170,SM,list ops,[coll (list 1 2 3)] (-rest coll),3.3e-05,,,,
1.7.170,SM,list ops,[] (list),1.5e-05,,,,
1.7.170,SM,list ops,[] (list 1 2 3),0.0001,,,,
1.7.170,SM,vector ops,[] [],1.5e-05,,,,
1.7.170,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000189,,,,
1.7.170,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),0.000165,,,,
1.7.170,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.00016,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (transient coll),0.00043,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.5e-05,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.9e-05,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.5e-05,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (coll 0),4.7e-05,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.8e-05,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.7e-05,,,,
1.7.170,SM,vector ops,[coll []] (-conj coll 1),6.1e-05,,,,
1.7.170,SM,vector ops,[coll [1]] (-conj coll 2),6.3e-05,,,,
1.7.170,SM,vector ops,[coll [1 2]] (-conj coll 3),6.6e-05,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (seq coll),7.1e-05,,,,
1.7.170,SM,vector ops,[coll [1 2 3]] (-seq coll),4.7e-05,,,,
1.7.170,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.4e-05,,,,
1.7.170,SM,vector ops,[coll (seq [1 2 3])] (-first coll),4e-05,,,,
1.7.170,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.3e-05,,,,
1.7.170,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),5.1e-05,,,,
1.7.170,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.000122,,,,
1.7.170,SM,large vector ops,[] (reduce conj [] (range 40000)),8.4,,,,
1.7.170,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00038,,,,
1.7.170,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00115,,,,
1.7.170,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00044,,,,
1.7.170,JSC,identity,[x 1] (identity x),2.2e-06,,,,
1.7.170,JSC,symbol construction,[] (symbol (quote foo)),2.2e-05,,,,
1.7.170,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.18,,,,
1.7.170,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.13,,,,
1.7.170,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.05,,,,
1.7.170,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.07,,,,
1.7.170,JSC,instance?,[coll []] (instance? PersistentVector coll),2.4e-05,,,,
1.7.170,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.8e-05,,,,
1.7.170,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.6e-05,,,,
1.7.170,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),5.8e-05,,,,
1.7.170,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.9e-05,,,,
1.7.170,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.1e-05,,,,
1.7.170,JSC,array & string ops,"[coll ""foobar""] (first coll)",7e-05,,,,
1.7.170,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.5e-05,,,,
1.7.170,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.9e-05,,,,
1.7.170,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.7e-05,,,,
1.7.170,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.5e-05,,,,
1.7.170,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.7e-05,,,,
1.7.170,JSC,list ops,[coll (list 1 2 3)] (first coll),2.8e-05,,,,
1.7.170,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.1e-05,,,,
1.7.170,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.7e-05,,,,
1.7.170,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.7.170,JSC,list ops,[] (list),1.2e-05,,,,
1.7.170,JSC,list ops,[] (list 1 2 3),7.5e-05,,,,
1.7.170,JSC,vector ops,[] [],1.3e-05,,,,
1.7.170,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.1e-05,,,,
1.7.170,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),7.6e-05,,,,
1.7.170,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.6e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00029,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.6e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (coll 0),3e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.6e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.5e-05,,,,
1.7.170,JSC,vector ops,[coll []] (-conj coll 1),5.2e-05,,,,
1.7.170,JSC,vector ops,[coll [1]] (-conj coll 2),5.6e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.8e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (seq coll),3.6e-05,,,,
1.7.170,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.5e-05,,,,
1.7.170,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3e-05,,,,
1.7.170,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.7.170,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.3e-05,,,,
1.7.170,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.4e-05,,,,
1.7.170,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.5e-05,,,,
1.7.170,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.4,,,,
1.7.170,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00031,,,,
1.7.170,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00054,,,,
1.7.170,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.7.166,V8,identity,[x 1] (identity x),1.25e-06,,,,
1.7.166,V8,symbol construction,[] (symbol (quote foo)),5.6e-05,,,,
1.7.166,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.4,,,,
1.7.166,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.3,,,,
1.7.166,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.2,,,,
1.7.166,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.2,,,,
1.7.166,V8,instance?,[coll []] (instance? PersistentVector coll),5.5e-05,,,,
1.7.166,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.6e-05,,,,
1.7.166,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.7.166,V8,array & string ops,[coll (array 1 2 3)] (seq coll),7e-05,,,,
1.7.166,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000126,,,,
1.7.166,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.8e-05,,,,
1.7.166,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000148,,,,
1.7.166,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),7.2e-05,,,,
1.7.166,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.4e-05,,,,
1.7.166,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.9e-05,,,,
1.7.166,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000102,,,,
1.7.166,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),5.9e-05,,,,
1.7.166,V8,list ops,[coll (list 1 2 3)] (first coll),6.5e-05,,,,
1.7.166,V8,list ops,[coll (list 1 2 3)] (-first coll),5.2e-05,,,,
1.7.166,V8,list ops,[coll (list 1 2 3)] (rest coll),5.2e-05,,,,
1.7.166,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.2e-05,,,,
1.7.166,V8,list ops,[] (list),4.5e-05,,,,
1.7.166,V8,list ops,[] (list 1 2 3),9.7e-05,,,,
1.7.166,V8,vector ops,[] [],5e-05,,,,
1.7.166,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.7e-05,,,,
1.7.166,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),8.3e-05,,,,
1.7.166,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.8e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (transient coll),0.00022,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.2e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (coll 0),6.1e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.3e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.9e-05,,,,
1.7.166,V8,vector ops,[coll []] (-conj coll 1),8.4e-05,,,,
1.7.166,V8,vector ops,[coll [1]] (-conj coll 2),8.7e-05,,,,
1.7.166,V8,vector ops,[coll [1 2]] (-conj coll 3),8.8e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (seq coll),8.9e-05,,,,
1.7.166,V8,vector ops,[coll [1 2 3]] (-seq coll),7.3e-05,,,,
1.7.166,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.3e-05,,,,
1.7.166,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.4e-05,,,,
1.7.166,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.9e-05,,,,
1.7.166,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.8e-05,,,,
1.7.166,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.3e-05,,,,
1.7.166,V8,large vector ops,[] (reduce conj [] (range 40000)),7.2,,,,
1.7.166,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00028,,,,
1.7.166,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00067,,,,
1.7.166,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00026,,,,
1.7.166,SM,identity,[x 1] (identity x),3.91e-06,,,,
1.7.166,SM,symbol construction,[] (symbol (quote foo)),4.1e-05,,,,
1.7.166,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.08,,,,
1.7.166,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.16,,,,
1.7.166,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.7.166,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.12,,,,
1.7.166,SM,instance?,[coll []] (instance? PersistentVector coll),2.6e-05,,,,
1.7.166,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.3e-05,,,,
1.7.166,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.9e-05,,,,
1.7.166,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.8e-05,,,,
1.7.166,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000461,,,,
1.7.166,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.00013,,,,
1.7.166,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001984,,,,
1.7.166,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.5e-05,,,,
1.7.166,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000358,,,,
1.7.166,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.1e-05,,,,
1.7.166,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000233,,,,
1.7.166,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3e-05,,,,
1.7.166,SM,list ops,[coll (list 1 2 3)] (first coll),4.5e-05,,,,
1.7.166,SM,list ops,[coll (list 1 2 3)] (-first coll),3.1e-05,,,,
1.7.166,SM,list ops,[coll (list 1 2 3)] (rest coll),3.2e-05,,,,
1.7.166,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.7.166,SM,list ops,[] (list),1.6e-05,,,,
1.7.166,SM,list ops,[] (list 1 2 3),9.8e-05,,,,
1.7.166,SM,vector ops,[] [],1.5e-05,,,,
1.7.166,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000185,,,,
1.7.166,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),0.000161,,,,
1.7.166,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000157,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (transient coll),0.0004,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.6e-05,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.4e-05,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.4e-05,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (coll 0),4.6e-05,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.9e-05,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.7e-05,,,,
1.7.166,SM,vector ops,[coll []] (-conj coll 1),6.2e-05,,,,
1.7.166,SM,vector ops,[coll [1]] (-conj coll 2),6.7e-05,,,,
1.7.166,SM,vector ops,[coll [1 2]] (-conj coll 3),7.1e-05,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (seq coll),7.5e-05,,,,
1.7.166,SM,vector ops,[coll [1 2 3]] (-seq coll),5e-05,,,,
1.7.166,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.4e-05,,,,
1.7.166,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.9e-05,,,,
1.7.166,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.3e-05,,,,
1.7.166,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),5.3e-05,,,,
1.7.166,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.000121,,,,
1.7.166,SM,large vector ops,[] (reduce conj [] (range 40000)),8.0,,,,
1.7.166,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00034,,,,
1.7.166,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00111,,,,
1.7.166,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00042,,,,
1.7.166,JSC,identity,[x 1] (identity x),2.2e-06,,,,
1.7.166,JSC,symbol construction,[] (symbol (quote foo)),2.2e-05,,,,
1.7.166,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.21,,,,
1.7.166,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.15,,,,
1.7.166,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.05,,,,
1.7.166,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.08,,,,
1.7.166,JSC,instance?,[coll []] (instance? PersistentVector coll),2.6e-05,,,,
1.7.166,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.6e-05,,,,
1.7.166,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.8e-05,,,,
1.7.166,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6e-05,,,,
1.7.166,JSC,array & string ops,"[coll ""foobar""] (seq coll)",4.1e-05,,,,
1.7.166,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.1e-05,,,,
1.7.166,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.1e-05,,,,
1.7.166,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.5e-05,,,,
1.7.166,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.9e-05,,,,
1.7.166,JSC,cloning & specify,[coll [1 2 3]] (clone coll),5e-05,,,,
1.7.166,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.9e-05,,,,
1.7.166,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.7e-05,,,,
1.7.166,JSC,list ops,[coll (list 1 2 3)] (first coll),3e-05,,,,
1.7.166,JSC,list ops,[coll (list 1 2 3)] (-first coll),1.8e-05,,,,
1.7.166,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.7e-05,,,,
1.7.166,JSC,list ops,[coll (list 1 2 3)] (-rest coll),2.1e-05,,,,
1.7.166,JSC,list ops,[] (list),1.2e-05,,,,
1.7.166,JSC,list ops,[] (list 1 2 3),7.4e-05,,,,
1.7.166,JSC,vector ops,[] [],1.2e-05,,,,
1.7.166,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.3e-05,,,,
1.7.166,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),7.3e-05,,,,
1.7.166,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.6e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00028,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.9e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.1e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (coll 0),3e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.2e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.8e-05,,,,
1.7.166,JSC,vector ops,[coll []] (-conj coll 1),5.5e-05,,,,
1.7.166,JSC,vector ops,[coll [1]] (-conj coll 2),5.3e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.6e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (seq coll),3.8e-05,,,,
1.7.166,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.5e-05,,,,
1.7.166,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3e-05,,,,
1.7.166,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.7.166,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.4e-05,,,,
1.7.166,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3e-05,,,,
1.7.166,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.5e-05,,,,
1.7.166,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.4,,,,
1.7.166,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00033,,,,
1.7.166,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00057,,,,
1.7.166,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.7.58,V8,identity,[x 1] (identity x),1.23e-06,,,,
1.7.58,V8,symbol construction,[] (symbol (quote foo)),5.7e-05,,,,
1.7.58,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.21,,,,
1.7.58,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.2,,,,
1.7.58,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.15,,,,
1.7.58,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.09,,,,
1.7.58,V8,instance?,[coll []] (instance? PersistentVector coll),5.3e-05,,,,
1.7.58,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.5e-05,,,,
1.7.58,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.7.58,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.7e-05,,,,
1.7.58,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000124,,,,
1.7.58,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.5e-05,,,,
1.7.58,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000149,,,,
1.7.58,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),5.7e-05,,,,
1.7.58,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.2e-05,,,,
1.7.58,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.9e-05,,,,
1.7.58,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),9.9e-05,,,,
1.7.58,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),5.8e-05,,,,
1.7.58,V8,list ops,[coll (list 1 2 3)] (first coll),6.4e-05,,,,
1.7.58,V8,list ops,[coll (list 1 2 3)] (-first coll),5.2e-05,,,,
1.7.58,V8,list ops,[coll (list 1 2 3)] (rest coll),5.6e-05,,,,
1.7.58,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.4e-05,,,,
1.7.58,V8,list ops,[] (list),4.9e-05,,,,
1.7.58,V8,list ops,[] (list 1 2 3),9.2e-05,,,,
1.7.58,V8,vector ops,[] [],4.7e-05,,,,
1.7.58,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.6e-05,,,,
1.7.58,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),8e-05,,,,
1.7.58,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.6e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (transient coll),0.00021,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.1e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.8e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.8e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (coll 0),5.7e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.6e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.7e-05,,,,
1.7.58,V8,vector ops,[coll []] (-conj coll 1),8.7e-05,,,,
1.7.58,V8,vector ops,[coll [1]] (-conj coll 2),8.3e-05,,,,
1.7.58,V8,vector ops,[coll [1 2]] (-conj coll 3),8.5e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (seq coll),8.4e-05,,,,
1.7.58,V8,vector ops,[coll [1 2 3]] (-seq coll),6.7e-05,,,,
1.7.58,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.1e-05,,,,
1.7.58,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.4e-05,,,,
1.7.58,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.8e-05,,,,
1.7.58,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.7e-05,,,,
1.7.58,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.2e-05,,,,
1.7.58,V8,large vector ops,[] (reduce conj [] (range 40000)),6.7,,,,
1.7.58,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00028,,,,
1.7.58,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00067,,,,
1.7.58,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00023,,,,
1.7.58,SM,identity,[x 1] (identity x),3.89e-06,,,,
1.7.58,SM,symbol construction,[] (symbol (quote foo)),3.9e-05,,,,
1.7.58,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.09,,,,
1.7.58,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.17,,,,
1.7.58,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.03,,,,
1.7.58,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.13,,,,
1.7.58,SM,instance?,[coll []] (instance? PersistentVector coll),2.7e-05,,,,
1.7.58,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.1e-05,,,,
1.7.58,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.8e-05,,,,
1.7.58,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.7e-05,,,,
1.7.58,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000468,,,,
1.7.58,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.000131,,,,
1.7.58,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001956,,,,
1.7.58,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.3e-05,,,,
1.7.58,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000356,,,,
1.7.58,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.1e-05,,,,
1.7.58,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.00023,,,,
1.7.58,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3e-05,,,,
1.7.58,SM,list ops,[coll (list 1 2 3)] (first coll),4.7e-05,,,,
1.7.58,SM,list ops,[coll (list 1 2 3)] (-first coll),3.4e-05,,,,
1.7.58,SM,list ops,[coll (list 1 2 3)] (rest coll),3.1e-05,,,,
1.7.58,SM,list ops,[coll (list 1 2 3)] (-rest coll),3.3e-05,,,,
1.7.58,SM,list ops,[] (list),1.5e-05,,,,
1.7.58,SM,list ops,[] (list 1 2 3),0.0001,,,,
1.7.58,SM,vector ops,[] [],1.5e-05,,,,
1.7.58,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000176,,,,
1.7.58,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),0.00016,,,,
1.7.58,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000158,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (transient coll),0.0004,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.7e-05,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.4e-05,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.5e-05,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (coll 0),4.2e-05,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.7e-05,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (-conj coll 4),7.1e-05,,,,
1.7.58,SM,vector ops,[coll []] (-conj coll 1),6.1e-05,,,,
1.7.58,SM,vector ops,[coll [1]] (-conj coll 2),6.1e-05,,,,
1.7.58,SM,vector ops,[coll [1 2]] (-conj coll 3),7e-05,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (seq coll),7.2e-05,,,,
1.7.58,SM,vector ops,[coll [1 2 3]] (-seq coll),4.6e-05,,,,
1.7.58,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.4e-05,,,,
1.7.58,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.7.58,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.7e-05,,,,
1.7.58,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),5e-05,,,,
1.7.58,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.000121,,,,
1.7.58,SM,large vector ops,[] (reduce conj [] (range 40000)),8.1,,,,
1.7.58,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.7.58,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00112,,,,
1.7.58,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00042,,,,
1.7.58,JSC,identity,[x 1] (identity x),2.19e-06,,,,
1.7.58,JSC,symbol construction,[] (symbol (quote foo)),2.3e-05,,,,
1.7.58,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.18,,,,
1.7.58,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.11,,,,
1.7.58,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.03,,,,
1.7.58,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.06,,,,
1.7.58,JSC,instance?,[coll []] (instance? PersistentVector coll),2.4e-05,,,,
1.7.58,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.7e-05,,,,
1.7.58,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.6e-05,,,,
1.7.58,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6.1e-05,,,,
1.7.58,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.9e-05,,,,
1.7.58,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.1e-05,,,,
1.7.58,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.3e-05,,,,
1.7.58,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.4e-05,,,,
1.7.58,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.2e-05,,,,
1.7.58,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.9e-05,,,,
1.7.58,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.8e-05,,,,
1.7.58,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.7e-05,,,,
1.7.58,JSC,list ops,[coll (list 1 2 3)] (first coll),2.5e-05,,,,
1.7.58,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.3e-05,,,,
1.7.58,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.7e-05,,,,
1.7.58,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.6e-05,,,,
1.7.58,JSC,list ops,[] (list),1.2e-05,,,,
1.7.58,JSC,list ops,[] (list 1 2 3),8.2e-05,,,,
1.7.58,JSC,vector ops,[] [],1.3e-05,,,,
1.7.58,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),7.7e-05,,,,
1.7.58,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),7.3e-05,,,,
1.7.58,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.3e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00027,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.4e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (coll 0),3.1e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.1e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.2e-05,,,,
1.7.58,JSC,vector ops,[coll []] (-conj coll 1),5.6e-05,,,,
1.7.58,JSC,vector ops,[coll [1]] (-conj coll 2),5.6e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.7e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (seq coll),3.4e-05,,,,
1.7.58,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.2e-05,,,,
1.7.58,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3.1e-05,,,,
1.7.58,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.7e-05,,,,
1.7.58,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.4e-05,,,,
1.7.58,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.1e-05,,,,
1.7.58,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.2e-05,,,,
1.7.58,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.1,,,,
1.7.58,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00034,,,,
1.7.58,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00057,,,,
1.7.58,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.7.48,V8,identity,[x 1] (identity x),1.23e-06,,,,
1.7.48,V8,symbol construction,[] (symbol (quote foo)),5.4e-05,,,,
1.7.48,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.21,,,,
1.7.48,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.22,,,,
1.7.48,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.11,,,,
1.7.48,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.09,,,,
1.7.48,V8,instance?,[coll []] (instance? PersistentVector coll),4.9e-05,,,,
1.7.48,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),5e-05,,,,
1.7.48,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.7.48,V8,array & string ops,[coll (array 1 2 3)] (seq coll),6.6e-05,,,,
1.7.48,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000124,,,,
1.7.48,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.7e-05,,,,
1.7.48,V8,array & string ops,"[coll ""foobar""] (first coll)",0.00015,,,,
1.7.48,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),5.2e-05,,,,
1.7.48,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.1e-05,,,,
1.7.48,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.7e-05,,,,
1.7.48,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000101,,,,
1.7.48,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),5.9e-05,,,,
1.7.48,V8,list ops,[coll (list 1 2 3)] (first coll),6.6e-05,,,,
1.7.48,V8,list ops,[coll (list 1 2 3)] (-first coll),5.1e-05,,,,
1.7.48,V8,list ops,[coll (list 1 2 3)] (rest coll),5.1e-05,,,,
1.7.48,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.2e-05,,,,
1.7.48,V8,list ops,[] (list),4.4e-05,,,,
1.7.48,V8,list ops,[] (list 1 2 3),9.2e-05,,,,
1.7.48,V8,vector ops,[] [],5.2e-05,,,,
1.7.48,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.4e-05,,,,
1.7.48,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),8e-05,,,,
1.7.48,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.7e-05,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (transient coll),0.00022,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.7e-05,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6e-05,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (coll 0),5.6e-05,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.1e-05,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.9e-05,,,,
1.7.48,V8,vector ops,[coll []] (-conj coll 1),8.4e-05,,,,
1.7.48,V8,vector ops,[coll [1]] (-conj coll 2),8.3e-05,,,,
1.7.48,V8,vector ops,[coll [1 2]] (-conj coll 3),8.7e-05,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (seq coll),8.8e-05,,,,
1.7.48,V8,vector ops,[coll [1 2 3]] (-seq coll),6.8e-05,,,,
1.7.48,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.2e-05,,,,
1.7.48,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.3e-05,,,,
1.7.48,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.7e-05,,,,
1.7.48,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.7e-05,,,,
1.7.48,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.3e-05,,,,
1.7.48,V8,large vector ops,[] (reduce conj [] (range 40000)),6.6,,,,
1.7.48,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00029,,,,
1.7.48,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00065,,,,
1.7.48,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00022,,,,
1.7.48,SM,identity,[x 1] (identity x),3.92e-06,,,,
1.7.48,SM,symbol construction,[] (symbol (quote foo)),4.3e-05,,,,
1.7.48,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.07,,,,
1.7.48,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.16,,,,
1.7.48,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.7.48,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.11,,,,
1.7.48,SM,instance?,[coll []] (instance? PersistentVector coll),2.6e-05,,,,
1.7.48,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.1e-05,,,,
1.7.48,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.2e-05,,,,
1.7.48,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.7e-05,,,,
1.7.48,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000574,,,,
1.7.48,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.000131,,,,
1.7.48,SM,array & string ops,"[coll ""foobar""] (first coll)",0.002009,,,,
1.7.48,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.2e-05,,,,
1.7.48,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000369,,,,
1.7.48,SM,cloning & specify,[coll [1 2 3]] (clone coll),4e-05,,,,
1.7.48,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000228,,,,
1.7.48,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3e-05,,,,
1.7.48,SM,list ops,[coll (list 1 2 3)] (first coll),4.5e-05,,,,
1.7.48,SM,list ops,[coll (list 1 2 3)] (-first coll),3e-05,,,,
1.7.48,SM,list ops,[coll (list 1 2 3)] (rest coll),3.3e-05,,,,
1.7.48,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.7.48,SM,list ops,[] (list),1.9e-05,,,,
1.7.48,SM,list ops,[] (list 1 2 3),9.7e-05,,,,
1.7.48,SM,vector ops,[] [],1.4e-05,,,,
1.7.48,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000179,,,,
1.7.48,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),0.000158,,,,
1.7.48,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000154,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (transient coll),0.0004,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.6e-05,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.5e-05,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.3e-05,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (coll 0),4.1e-05,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.7e-05,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (-conj coll 4),7e-05,,,,
1.7.48,SM,vector ops,[coll []] (-conj coll 1),6.1e-05,,,,
1.7.48,SM,vector ops,[coll [1]] (-conj coll 2),6.4e-05,,,,
1.7.48,SM,vector ops,[coll [1 2]] (-conj coll 3),6.9e-05,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (seq coll),7.4e-05,,,,
1.7.48,SM,vector ops,[coll [1 2 3]] (-seq coll),4.8e-05,,,,
1.7.48,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.4e-05,,,,
1.7.48,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.7.48,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.3e-05,,,,
1.7.48,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),5.2e-05,,,,
1.7.48,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.000123,,,,
1.7.48,SM,large vector ops,[] (reduce conj [] (range 40000)),8.2,,,,
1.7.48,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.7.48,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00112,,,,
1.7.48,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00042,,,,
1.7.48,JSC,identity,[x 1] (identity x),2.2e-06,,,,
1.7.48,JSC,symbol construction,[] (symbol (quote foo)),2.3e-05,,,,
1.7.48,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.17,,,,
1.7.48,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.12,,,,
1.7.48,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.04,,,,
1.7.48,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.05,,,,
1.7.48,JSC,instance?,[coll []] (instance? PersistentVector coll),2.5e-05,,,,
1.7.48,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.7e-05,,,,
1.7.48,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.9e-05,,,,
1.7.48,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6e-05,,,,
1.7.48,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.9e-05,,,,
1.7.48,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.1e-05,,,,
1.7.48,JSC,array & string ops,"[coll ""foobar""] (first coll)",7.3e-05,,,,
1.7.48,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.4e-05,,,,
1.7.48,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.3e-05,,,,
1.7.48,JSC,cloning & specify,[coll [1 2 3]] (clone coll),4.7e-05,,,,
1.7.48,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.6e-05,,,,
1.7.48,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.7e-05,,,,
1.7.48,JSC,list ops,[coll (list 1 2 3)] (first coll),2.5e-05,,,,
1.7.48,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.3e-05,,,,
1.7.48,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.7e-05,,,,
1.7.48,JSC,list ops,[coll (list 1 2 3)] (-rest coll),1.7e-05,,,,
1.7.48,JSC,list ops,[] (list),1.1e-05,,,,
1.7.48,JSC,list ops,[] (list 1 2 3),7.2e-05,,,,
1.7.48,JSC,vector ops,[] [],1.3e-05,,,,
1.7.48,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.3e-05,,,,
1.7.48,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),7.4e-05,,,,
1.7.48,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),8e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00028,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.4e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (coll 0),3.1e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.3e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.8e-05,,,,
1.7.48,JSC,vector ops,[coll []] (-conj coll 1),5.4e-05,,,,
1.7.48,JSC,vector ops,[coll [1]] (-conj coll 2),5.7e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.2e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (seq coll),3.3e-05,,,,
1.7.48,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.4e-05,,,,
1.7.48,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3e-05,,,,
1.7.48,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.7.48,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.3e-05,,,,
1.7.48,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3e-05,,,,
1.7.48,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.3e-05,,,,
1.7.48,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.4,,,,
1.7.48,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00034,,,,
1.7.48,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00056,,,,
1.7.48,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.7.28,V8,identity,[x 1] (identity x),1.24e-06,,,,
1.7.28,V8,symbol construction,[] (symbol (quote foo)),7e-05,,,,
1.7.28,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.21,,,,
1.7.28,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.2,,,,
1.7.28,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.1,,,,
1.7.28,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.09,,,,
1.7.28,V8,instance?,[coll []] (instance? PersistentVector coll),5.2e-05,,,,
1.7.28,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),5.1e-05,,,,
1.7.28,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.7.28,V8,array & string ops,[coll (array 1 2 3)] (seq coll),7.1e-05,,,,
1.7.28,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000131,,,,
1.7.28,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.6e-05,,,,
1.7.28,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000149,,,,
1.7.28,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),5.2e-05,,,,
1.7.28,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.2e-05,,,,
1.7.28,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.6e-05,,,,
1.7.28,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000102,,,,
1.7.28,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),5.9e-05,,,,
1.7.28,V8,list ops,[coll (list 1 2 3)] (first coll),6.5e-05,,,,
1.7.28,V8,list ops,[coll (list 1 2 3)] (-first coll),5.6e-05,,,,
1.7.28,V8,list ops,[coll (list 1 2 3)] (rest coll),5.3e-05,,,,
1.7.28,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.3e-05,,,,
1.7.28,V8,list ops,[] (list),4.5e-05,,,,
1.7.28,V8,list ops,[] (list 1 2 3),9.3e-05,,,,
1.7.28,V8,vector ops,[] [],5.1e-05,,,,
1.7.28,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.5e-05,,,,
1.7.28,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),8.5e-05,,,,
1.7.28,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.9e-05,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (transient coll),0.00022,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.6e-05,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6e-05,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (coll 0),5.7e-05,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.3e-05,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.9e-05,,,,
1.7.28,V8,vector ops,[coll []] (-conj coll 1),8.3e-05,,,,
1.7.28,V8,vector ops,[coll [1]] (-conj coll 2),8.3e-05,,,,
1.7.28,V8,vector ops,[coll [1 2]] (-conj coll 3),8.6e-05,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (seq coll),8.5e-05,,,,
1.7.28,V8,vector ops,[coll [1 2 3]] (-seq coll),6.8e-05,,,,
1.7.28,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.2e-05,,,,
1.7.28,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.5e-05,,,,
1.7.28,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.8e-05,,,,
1.7.28,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.8e-05,,,,
1.7.28,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.2e-05,,,,
1.7.28,V8,large vector ops,[] (reduce conj [] (range 40000)),6.4,,,,
1.7.28,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00028,,,,
1.7.28,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.0007,,,,
1.7.28,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00025,,,,
1.7.28,SM,identity,[x 1] (identity x),3.87e-06,,,,
1.7.28,SM,symbol construction,[] (symbol (quote foo)),0.000324,,,,
1.7.28,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.06,,,,
1.7.28,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.18,,,,
1.7.28,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.7.28,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.11,,,,
1.7.28,SM,instance?,[coll []] (instance? PersistentVector coll),2.7e-05,,,,
1.7.28,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4e-05,,,,
1.7.28,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),3.9e-05,,,,
1.7.28,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.3e-05,,,,
1.7.28,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000459,,,,
1.7.28,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.000129,,,,
1.7.28,SM,array & string ops,"[coll ""foobar""] (first coll)",0.001958,,,,
1.7.28,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.3e-05,,,,
1.7.28,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000373,,,,
1.7.28,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.3e-05,,,,
1.7.28,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000227,,,,
1.7.28,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),2.9e-05,,,,
1.7.28,SM,list ops,[coll (list 1 2 3)] (first coll),4.2e-05,,,,
1.7.28,SM,list ops,[coll (list 1 2 3)] (-first coll),3.3e-05,,,,
1.7.28,SM,list ops,[coll (list 1 2 3)] (rest coll),3.3e-05,,,,
1.7.28,SM,list ops,[coll (list 1 2 3)] (-rest coll),2.9e-05,,,,
1.7.28,SM,list ops,[] (list),1.4e-05,,,,
1.7.28,SM,list ops,[] (list 1 2 3),0.000102,,,,
1.7.28,SM,vector ops,[] [],1.5e-05,,,,
1.7.28,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000171,,,,
1.7.28,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),0.000157,,,,
1.7.28,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000156,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (transient coll),0.0004,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.6e-05,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.2e-05,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.5e-05,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (coll 0),4.2e-05,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.6e-05,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.7e-05,,,,
1.7.28,SM,vector ops,[coll []] (-conj coll 1),6.3e-05,,,,
1.7.28,SM,vector ops,[coll [1]] (-conj coll 2),6.1e-05,,,,
1.7.28,SM,vector ops,[coll [1 2]] (-conj coll 3),6.5e-05,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (seq coll),7.1e-05,,,,
1.7.28,SM,vector ops,[coll [1 2 3]] (-seq coll),4.7e-05,,,,
1.7.28,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.3e-05,,,,
1.7.28,SM,vector ops,[coll (seq [1 2 3])] (-first coll),3.6e-05,,,,
1.7.28,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.2e-05,,,,
1.7.28,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),5.2e-05,,,,
1.7.28,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.000128,,,,
1.7.28,SM,large vector ops,[] (reduce conj [] (range 40000)),8.1,,,,
1.7.28,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.7.28,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00115,,,,
1.7.28,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00043,,,,
1.7.28,JSC,identity,[x 1] (identity x),2.14e-06,,,,
1.7.28,JSC,symbol construction,[] (symbol (quote foo)),5.1e-05,,,,
1.7.28,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.12,,,,
1.7.28,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.15,,,,
1.7.28,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.04,,,,
1.7.28,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.06,,,,
1.7.28,JSC,instance?,[coll []] (instance? PersistentVector coll),2.3e-05,,,,
1.7.28,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.8e-05,,,,
1.7.28,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.5e-05,,,,
1.7.28,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6.1e-05,,,,
1.7.28,JSC,array & string ops,"[coll ""foobar""] (seq coll)",3.8e-05,,,,
1.7.28,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.4e-05,,,,
1.7.28,JSC,array & string ops,"[coll ""foobar""] (first coll)",8.5e-05,,,,
1.7.28,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.3e-05,,,,
1.7.28,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.3e-05,,,,
1.7.28,JSC,cloning & specify,[coll [1 2 3]] (clone coll),3.3e-05,,,,
1.7.28,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),9.2e-05,,,,
1.7.28,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),2.1e-05,,,,
1.7.28,JSC,list ops,[coll (list 1 2 3)] (first coll),2.2e-05,,,,
1.7.28,JSC,list ops,[coll (list 1 2 3)] (-first coll),1.9e-05,,,,
1.7.28,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.9e-05,,,,
1.7.28,JSC,list ops,[coll (list 1 2 3)] (-rest coll),2.1e-05,,,,
1.7.28,JSC,list ops,[] (list),1.1e-05,,,,
1.7.28,JSC,list ops,[] (list 1 2 3),7.5e-05,,,,
1.7.28,JSC,vector ops,[] [],1.2e-05,,,,
1.7.28,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.3e-05,,,,
1.7.28,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),7.3e-05,,,,
1.7.28,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),8e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00029,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.6e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.2e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (coll 0),3.4e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.4e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.4e-05,,,,
1.7.28,JSC,vector ops,[coll []] (-conj coll 1),5.6e-05,,,,
1.7.28,JSC,vector ops,[coll [1]] (-conj coll 2),5.6e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.3e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (seq coll),3.7e-05,,,,
1.7.28,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.5e-05,,,,
1.7.28,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3e-05,,,,
1.7.28,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.9e-05,,,,
1.7.28,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3.2e-05,,,,
1.7.28,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.4e-05,,,,
1.7.28,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.5e-05,,,,
1.7.28,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.2,,,,
1.7.28,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00034,,,,
1.7.28,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00057,,,,
1.7.28,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
1.7.10,V8,identity,[x 1] (identity x),1.23e-06,,,,
1.7.10,V8,symbol construction,[] (symbol (quote foo)),7e-05,,,,
1.7.10,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.23,,,,
1.7.10,V8,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.21,,,,
1.7.10,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.11,,,,
1.7.10,V8,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.08,,,,
1.7.10,V8,instance?,[coll []] (instance? PersistentVector coll),5.2e-05,,,,
1.7.10,V8,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.6e-05,,,,
1.7.10,V8,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.2e-05,,,,
1.7.10,V8,array & string ops,[coll (array 1 2 3)] (seq coll),7e-05,,,,
1.7.10,V8,array & string ops,"[coll ""foobar""] (seq coll)",0.000125,,,,
1.7.10,V8,array & string ops,[coll (array 1 2 3)] (first coll),7.9e-05,,,,
1.7.10,V8,array & string ops,"[coll ""foobar""] (first coll)",0.000152,,,,
1.7.10,V8,array & string ops,[coll (array 1 2 3)] (nth coll 2),5.1e-05,,,,
1.7.10,V8,array & string ops,"[coll ""foobar""] (nth coll 2)",6.7e-05,,,,
1.7.10,V8,cloning & specify,[coll [1 2 3]] (clone coll),6.8e-05,,,,
1.7.10,V8,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000106,,,,
1.7.10,V8,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),6.3e-05,,,,
1.7.10,V8,list ops,[coll (list 1 2 3)] (first coll),6.3e-05,,,,
1.7.10,V8,list ops,[coll (list 1 2 3)] (-first coll),5.2e-05,,,,
1.7.10,V8,list ops,[coll (list 1 2 3)] (rest coll),5.6e-05,,,,
1.7.10,V8,list ops,[coll (list 1 2 3)] (-rest coll),5.3e-05,,,,
1.7.10,V8,list ops,[] (list),4.5e-05,,,,
1.7.10,V8,list ops,[] (list 1 2 3),9.7e-05,,,,
1.7.10,V8,vector ops,[] [],4.6e-05,,,,
1.7.10,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),9.6e-05,,,,
1.7.10,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),8.4e-05,,,,
1.7.10,V8,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),9.7e-05,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (transient coll),0.00021,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (nth coll 0),6.2e-05,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (-nth coll 0),6e-05,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (-nth coll 0),5.9e-05,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (coll 0),5.7e-05,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (conj coll 4),9.3e-05,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (-conj coll 4),8.8e-05,,,,
1.7.10,V8,vector ops,[coll []] (-conj coll 1),8.4e-05,,,,
1.7.10,V8,vector ops,[coll [1]] (-conj coll 2),8.3e-05,,,,
1.7.10,V8,vector ops,[coll [1 2]] (-conj coll 3),8.7e-05,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (seq coll),8.4e-05,,,,
1.7.10,V8,vector ops,[coll [1 2 3]] (-seq coll),6.8e-05,,,,
1.7.10,V8,vector ops,[coll (seq [1 2 3])] (first coll),8.7e-05,,,,
1.7.10,V8,vector ops,[coll (seq [1 2 3])] (-first coll),6.5e-05,,,,
1.7.10,V8,vector ops,[coll (seq [1 2 3])] (rest coll),6.9e-05,,,,
1.7.10,V8,vector ops,[coll (seq [1 2 3])] (-rest coll),6.8e-05,,,,
1.7.10,V8,vector ops,[coll (seq [1 2 3])] (next coll),7.2e-05,,,,
1.7.10,V8,large vector ops,[] (reduce conj [] (range 40000)),7.2,,,,
1.7.10,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00026,,,,
1.7.10,V8,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.0007,,,,
1.7.10,V8,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00024,,,,
1.7.10,SM,identity,[x 1] (identity x),3.91e-06,,,,
1.7.10,SM,symbol construction,[] (symbol (quote foo)),0.000327,,,,
1.7.10,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.07,,,,
1.7.10,SM,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.16,,,,
1.7.10,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.02,,,,
1.7.10,SM,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.11,,,,
1.7.10,SM,instance?,[coll []] (instance? PersistentVector coll),2.5e-05,,,,
1.7.10,SM,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),4.2e-05,,,,
1.7.10,SM,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),4.1e-05,,,,
1.7.10,SM,array & string ops,[coll (array 1 2 3)] (seq coll),5.4e-05,,,,
1.7.10,SM,array & string ops,"[coll ""foobar""] (seq coll)",0.000456,,,,
1.7.10,SM,array & string ops,[coll (array 1 2 3)] (first coll),0.00013,,,,
1.7.10,SM,array & string ops,"[coll ""foobar""] (first coll)",0.00203,,,,
1.7.10,SM,array & string ops,[coll (array 1 2 3)] (nth coll 2),3.4e-05,,,,
1.7.10,SM,array & string ops,"[coll ""foobar""] (nth coll 2)",0.000372,,,,
1.7.10,SM,cloning & specify,[coll [1 2 3]] (clone coll),4.1e-05,,,,
1.7.10,SM,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),0.000232,,,,
1.7.10,SM,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),3e-05,,,,
1.7.10,SM,list ops,[coll (list 1 2 3)] (first coll),4.3e-05,,,,
1.7.10,SM,list ops,[coll (list 1 2 3)] (-first coll),3.7e-05,,,,
1.7.10,SM,list ops,[coll (list 1 2 3)] (rest coll),3.6e-05,,,,
1.7.10,SM,list ops,[coll (list 1 2 3)] (-rest coll),3e-05,,,,
1.7.10,SM,list ops,[] (list),1.4e-05,,,,
1.7.10,SM,list ops,[] (list 1 2 3),9.9e-05,,,,
1.7.10,SM,vector ops,[] [],1.6e-05,,,,
1.7.10,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),0.000175,,,,
1.7.10,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),0.000157,,,,
1.7.10,SM,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),0.000166,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (transient coll),0.0004,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (nth coll 0),5.4e-05,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.4e-05,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (-nth coll 0),4.6e-05,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (coll 0),4.8e-05,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (conj coll 4),6.7e-05,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (-conj coll 4),6.9e-05,,,,
1.7.10,SM,vector ops,[coll []] (-conj coll 1),6.1e-05,,,,
1.7.10,SM,vector ops,[coll [1]] (-conj coll 2),6.1e-05,,,,
1.7.10,SM,vector ops,[coll [1 2]] (-conj coll 3),6.6e-05,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (seq coll),7e-05,,,,
1.7.10,SM,vector ops,[coll [1 2 3]] (-seq coll),4.7e-05,,,,
1.7.10,SM,vector ops,[coll (seq [1 2 3])] (first coll),5.4e-05,,,,
1.7.10,SM,vector ops,[coll (seq [1 2 3])] (-first coll),4e-05,,,,
1.7.10,SM,vector ops,[coll (seq [1 2 3])] (rest coll),5.2e-05,,,,
1.7.10,SM,vector ops,[coll (seq [1 2 3])] (-rest coll),4.9e-05,,,,
1.7.10,SM,vector ops,[coll (seq [1 2 3])] (next coll),0.00013,,,,
1.7.10,SM,large vector ops,[] (reduce conj [] (range 40000)),8.1,,,,
1.7.10,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00035,,,,
1.7.10,SM,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00114,,,,
1.7.10,SM,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00043,,,,
1.7.10,JSC,identity,[x 1] (identity x),2.21e-06,,,,
1.7.10,JSC,symbol construction,[] (symbol (quote foo)),5.4e-05,,,,
1.7.10,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll + 0),0.1,,,,
1.7.10,JSC,array-reduce & ci-reduce,[coll (seq arr)] (ci-reduce coll sum 0),0.11,,,,
1.7.10,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll + 0),0.04,,,,
1.7.10,JSC,array-reduce & ci-reduce,[coll arr] (array-reduce coll sum 0),0.05,,,,
1.7.10,JSC,instance?,[coll []] (instance? PersistentVector coll),2.6e-05,,,,
1.7.10,JSC,satisfies?,[coll (list 1 2 3)] (satisfies? ISeq coll),1.8e-05,,,,
1.7.10,JSC,satisfies?,[coll [1 2 3]] (satisfies? ISeq coll),2.5e-05,,,,
1.7.10,JSC,array & string ops,[coll (array 1 2 3)] (seq coll),6e-05,,,,
1.7.10,JSC,array & string ops,"[coll ""foobar""] (seq coll)",4.1e-05,,,,
1.7.10,JSC,array & string ops,[coll (array 1 2 3)] (first coll),5.3e-05,,,,
1.7.10,JSC,array & string ops,"[coll ""foobar""] (first coll)",8.1e-05,,,,
1.7.10,JSC,array & string ops,[coll (array 1 2 3)] (nth coll 2),2.4e-05,,,,
1.7.10,JSC,array & string ops,"[coll ""foobar""] (nth coll 2)",2.4e-05,,,,
1.7.10,JSC,cloning & specify,[coll [1 2 3]] (clone coll),3.6e-05,,,,
1.7.10,JSC,cloning & specify,[coll [1 2 3]] (specify coll IFoo (foo [_] :bar)),8.6e-05,,,,
1.7.10,JSC,cloning & specify,[coll (specify [1 2 3] IFoo (foo [_] :bar))] (foo coll),1.7e-05,,,,
1.7.10,JSC,list ops,[coll (list 1 2 3)] (first coll),2.3e-05,,,,
1.7.10,JSC,list ops,[coll (list 1 2 3)] (-first coll),2.1e-05,,,,
1.7.10,JSC,list ops,[coll (list 1 2 3)] (rest coll),1.9e-05,,,,
1.7.10,JSC,list ops,[coll (list 1 2 3)] (-rest coll),2e-05,,,,
1.7.10,JSC,list ops,[] (list),1.1e-05,,,,
1.7.10,JSC,list ops,[] (list 1 2 3),7.6e-05,,,,
1.7.10,JSC,vector ops,[] [],1.3e-05,,,,
1.7.10,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count [a b c]),8.4e-05,,,,
1.7.10,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vec (array a b c))),7.1e-05,,,,
1.7.10,JSC,vector ops,[[a b c] (take 3 (repeatedly (fn* [] (rand-int 10))))] (-count (vector a b c)),7.6e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (transient coll),0.00028,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (nth coll 0),2.6e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.3e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (-nth coll 0),2.1e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (coll 0),3e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (conj coll 4),6.7e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (-conj coll 4),5.4e-05,,,,
1.7.10,JSC,vector ops,[coll []] (-conj coll 1),5.5e-05,,,,
1.7.10,JSC,vector ops,[coll [1]] (-conj coll 2),5.2e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2]] (-conj coll 3),5.8e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (seq coll),3.6e-05,,,,
1.7.10,JSC,vector ops,[coll [1 2 3]] (-seq coll),3.5e-05,,,,
1.7.10,JSC,vector ops,[coll (seq [1 2 3])] (first coll),3.1e-05,,,,
1.7.10,JSC,vector ops,[coll (seq [1 2 3])] (-first coll),2.8e-05,,,,
1.7.10,JSC,vector ops,[coll (seq [1 2 3])] (rest coll),3e-05,,,,
1.7.10,JSC,vector ops,[coll (seq [1 2 3])] (-rest coll),3.3e-05,,,,
1.7.10,JSC,vector ops,[coll (seq [1 2 3])] (next coll),3.1e-05,,,,
1.7.10,JSC,large vector ops,[] (reduce conj [] (range 40000)),5.1,,,,
1.7.10,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 32)))] (conj coll :foo),0.00031,,,,
1.7.10,JSC,large vector ops,[coll (reduce conj [] (range 40000))] (assoc coll 123 :foo),0.00057,,,,
1.7.10,JSC,large vector ops,[coll (reduce conj [] (range (+ 32768 33)))] (pop coll),0.00021,,,,
