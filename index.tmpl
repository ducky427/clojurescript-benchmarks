<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>ClojureScript Benchmarks</title>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">

    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.11/c3.min.css">

  </head>
  <body>

    <div class="container">
      <h1>Benchmarks</h1>
      <div class="alert alert-warning" role="alert">
        <h4>These benchmarks have been run through simple benchmarking code and not through <a href="https://benchmarkjs.com/">Benchmark.js</a>. Hence expect noise in these numbers and possibly a large margin of error.</h4>
      </div>
      <ul id="benchmarks">
        {% for item in items %}
        <li><a href="#bench-{{loop.index}}">{{item}}</a></li>
        {% endfor %}
      </ul>
      <hr>
      <h2>Charts</h2>
      {% for item in items %}
      <div id="bench-{{loop.index}}">
        <h4>{{item}}</h4>
        <div id="chart-{{loop.index}}">
        </div>
      </div>
      {% endfor %}
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.17/d3.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.11/c3.js"></script>
    <script type="text/javascript">
      var zero = d3.format("05d");

      function get_ver(x) {
        var parts = x.split('.')
                      .map(function(x) {return parseInt(x)})
                      .map(function(x) {return zero(x)});
        return parts.join("-");
      }

      function compare_versions(x, y) {
        var parts1 = get_ver(x);
        var parts2 = get_ver(y);
        if (parts1 < parts2) {
          return -1;
        }

        if (parts1 > parts2) {
          return 1;
        }
        return 0;
      }

      function get_points(points, engine) {
        var xs = points.filter(function(x) { return x.engine == engine});
        return xs.map(function(x) {
          return x.mean;
        });
      }

      function plot_chart(id, title, points) {
        var data = {x: 'x'};
        var versions = d3.set(points.map(function(x) {return x.version})).values();
        versions.sort(compare_versions);
        data['columns'] = [['x'].concat(versions)];
        ["V8", "JSC", "SM"].forEach(function(e) {
          data['columns'].push([e].concat(get_points(points, e)));
        });

        c3.generate({
          bindto: "#chart-"+id,
          data: data,
          axis: {x: {type: 'category', label: "Version"},
                 y: {label: "Time"}}});
      }

      d3.csv("data.csv")
        .row(function(d) { return {version: d.Version, engine: d.Engine, name: d.Name, mean: +d.Mean}; })
        .get(function(error, rows) {
          d3.selectAll('#benchmarks li')[0].forEach(function(obj, idx) {
            var title = d3.select(obj).text();
            var data_for_chart = rows.filter(function(x) {
              return x.name == title;
            });
            plot_chart(idx+1, title, data_for_chart);
          });
        });
    </script>
  </body>
</html>
